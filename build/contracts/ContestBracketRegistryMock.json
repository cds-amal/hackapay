{
  "contractName": "ContestBracketRegistryMock",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "teamId",
          "type": "uint256"
        }
      ],
      "name": "getTeam",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "bytes32"
        },
        {
          "name": "",
          "type": "bool"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "teamId",
          "type": "uint256"
        }
      ],
      "name": "approveTeam",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "teamIds",
          "type": "uint256[]"
        }
      ],
      "name": "reproveTeams",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "teamIds",
          "type": "uint256[]"
        },
        {
          "name": "teamGrades",
          "type": "uint8[]"
        }
      ],
      "name": "submitEvaluation",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "teams",
      "outputs": [
        {
          "name": "id",
          "type": "uint256"
        },
        {
          "name": "name",
          "type": "bytes32"
        },
        {
          "name": "teamAddress",
          "type": "address"
        },
        {
          "name": "proposalData",
          "type": "bytes32"
        },
        {
          "name": "approved",
          "type": "bool"
        },
        {
          "name": "grade",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isOrganizer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceJudge",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "teamAddress",
          "type": "address"
        }
      ],
      "name": "getTeamByAddress",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "bytes32"
        },
        {
          "name": "",
          "type": "bool"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSubmissionStatus",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOrganizer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "openSubmission",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getWinnersIds",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "teamName",
          "type": "bytes32"
        },
        {
          "name": "teamAddress",
          "type": "address"
        },
        {
          "name": "proposalData",
          "type": "bytes32"
        }
      ],
      "name": "registerTeam",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "closeRegistration",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "publishRank",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addJudge",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getEvaluationStatus",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "closeEvaluation",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeJudge",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "openEvaluation",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "openRegistration",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getRegistrationStatus",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addOrganizer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "teamId",
          "type": "uint256"
        },
        {
          "name": "proposalData",
          "type": "bytes32"
        }
      ],
      "name": "updateProposalData",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isJudge",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "teamId",
          "type": "uint256"
        }
      ],
      "name": "reproveTeam",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "closeSubmission",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "EvaluationStatusUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "judgeAddress",
          "type": "address"
        }
      ],
      "name": "JudgeVoted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "teamId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "teamAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "finalGrade",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "rankPosition",
          "type": "uint8"
        }
      ],
      "name": "WinnerAnnouced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "JudgeAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "JudgeRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OrganizerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OrganizerRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "teamId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "teamName",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "teamAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "TeamRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "RegistrationStatusUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "SubmissionStatusUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "teamId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "teamAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "proposalData",
          "type": "bytes32"
        }
      ],
      "name": "TeamProposalUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "teamId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "teamAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "TeamStatusUpdated",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"teamId\",\"type\":\"uint256\"}],\"name\":\"getTeam\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"teamId\",\"type\":\"uint256\"}],\"name\":\"approveTeam\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"teamIds\",\"type\":\"uint256[]\"}],\"name\":\"reproveTeams\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"teamIds\",\"type\":\"uint256[]\"},{\"name\":\"teamGrades\",\"type\":\"uint8[]\"}],\"name\":\"submitEvaluation\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"teams\",\"outputs\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"name\",\"type\":\"bytes32\"},{\"name\":\"teamAddress\",\"type\":\"address\"},{\"name\":\"proposalData\",\"type\":\"bytes32\"},{\"name\":\"approved\",\"type\":\"bool\"},{\"name\":\"grade\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isOrganizer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceJudge\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"teamAddress\",\"type\":\"address\"}],\"name\":\"getTeamByAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSubmissionStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOrganizer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"openSubmission\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getWinnersIds\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"teamName\",\"type\":\"bytes32\"},{\"name\":\"teamAddress\",\"type\":\"address\"},{\"name\":\"proposalData\",\"type\":\"bytes32\"}],\"name\":\"registerTeam\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"closeRegistration\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"publishRank\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addJudge\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getEvaluationStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"closeEvaluation\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeJudge\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"openEvaluation\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"openRegistration\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRegistrationStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addOrganizer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"teamId\",\"type\":\"uint256\"},{\"name\":\"proposalData\",\"type\":\"bytes32\"}],\"name\":\"updateProposalData\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isJudge\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"teamId\",\"type\":\"uint256\"}],\"name\":\"reproveTeam\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"closeSubmission\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"EvaluationStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"judgeAddress\",\"type\":\"address\"}],\"name\":\"JudgeVoted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"teamId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"teamAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"finalGrade\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"rankPosition\",\"type\":\"uint8\"}],\"name\":\"WinnerAnnouced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"JudgeAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"JudgeRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OrganizerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OrganizerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"teamId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"teamName\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"teamAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"TeamRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"RegistrationStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"SubmissionStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"teamId\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"teamAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"proposalData\",\"type\":\"bytes32\"}],\"name\":\"TeamProposalUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"teamId\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"teamAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"TeamStatusUpdated\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"approveTeam(uint256)\":{\"details\":\"Should be overwritten on inherited contract to add modifier or require statements for access control.\",\"params\":{\"teamId\":\"{uint256} the ids of the teams to be approved\"}},\"closeEvaluation()\":{\"details\":\"Should be overwritten on inherited contract to add modifier or require statements for access control.\"},\"closeRegistration()\":{\"details\":\"Overwritten to add modifier for access control.\"},\"closeSubmission()\":{\"details\":\"Should be overwritten on inherited contract to add modifier or require statements for access control.\"},\"getEvaluationStatus()\":{\"return\":\"{bool} returns {true} if enabled; otherwise, {false}.\"},\"getRegistrationStatus()\":{\"return\":\"{bool} returns {true} if enabled; otherwise, {false}.\"},\"getSubmissionStatus()\":{\"return\":\"{bool} returns {true} if enabled; otherwise, {false}.\"},\"getTeam(uint256)\":{\"params\":{\"teamId\":\"{uint256} the team's unique identifier returned on registration\"},\"return\":\"{bytes32} team's name{address} team's address{bytes32} team's proposal data{bool} team's status: {true} for approved; {false} for reproved;{uint256} team's grade\"},\"getTeamByAddress(address)\":{\"params\":{\"teamAddress\":\"{address} the team's contract address used on registration\"},\"return\":\"{bytes32} team's name{address} team's address{bytes32} team's proposal data{bool} team's status: {true} for approved; {false} for reproved;{uint256} team's grade\"},\"getWinnersIds()\":{\"return\":\"{uint256} First place's id{uint256} Second place's id{uint256} Third place's id\"},\"openEvaluation()\":{\"details\":\"Should be overwritten on inherited contract to add modifier or require statements for access control.\"},\"openRegistration()\":{\"details\":\"Overwritten to add modifier for access control.\"},\"openSubmission()\":{\"details\":\"Should be overwritten on inherited contract to add modifier or require statements for access control.\"},\"publishRank()\":{\"details\":\"emitts an WinnerAnnounced event for each winner (1st, 2nd, 3rd place).\"},\"registerTeam(bytes32,address,bytes32)\":{\"details\":\"Registration process must be open.\",\"params\":{\"teamName\":\"{bytes32} team's proposal data; could be a hash for a file  on IPFS or for a github link; not required\"}},\"reproveTeam(uint256)\":{\"details\":\"Should be overwritten on inherited contract to add modifier or require statements for access control.\",\"params\":{\"teamId\":\"{uint256} the ids of the teams to be reproved\"}},\"reproveTeams(uint256[])\":{\"details\":\"Should be overwritten on inherited contract to add modifier or require statements for access control.\",\"params\":{\"teamIds\":\"{uint256[]} an array containing the ids of the teams to be reproved\"}},\"submitEvaluation(uint256[],uint8[])\":{\"details\":\"The position of teamId and teamGrade must be the same in the array. For example, if teamId \\\"1\\\" is sent at {teamIds} array position \\\"5\\\" (zero-based), the grade for team \\\"1\\\" must be sent at position \\\"5\\\" in {teamGrades} array.\",\"params\":{\"teamGrades\":\"Array of the grades given by the judge for each team.\",\"teamIds\":\"Array of the ids associated with each team that is going to be evaluated.\"}},\"updateProposalData(uint256,bytes32)\":{\"params\":{\"proposalData\":\"the updated data for the team's proposal\",\"teamId\":\"team's unique identifier; required\"}}}},\"userdoc\":{\"methods\":{\"approveTeam(uint256)\":{\"notice\":\"(re)approves a team in participating in the contest\"},\"closeEvaluation()\":{\"notice\":\"Closes the evaluation process\"},\"closeRegistration()\":{\"notice\":\"Closes the registration process\"},\"closeSubmission()\":{\"notice\":\"Closes the proposal submission process\"},\"getEvaluationStatus()\":{\"notice\":\"Gets the evaluation status\"},\"getRegistrationStatus()\":{\"notice\":\"Gets the registration status\"},\"getSubmissionStatus()\":{\"notice\":\"Gets the submission status\"},\"getTeam(uint256)\":{\"notice\":\"Returns the stored information of a team\"},\"getTeamByAddress(address)\":{\"notice\":\"Returns the stored information of a team, based on a provided address\"},\"getWinnersIds()\":{\"notice\":\"Gets the id of the winner teams.\"},\"openEvaluation()\":{\"notice\":\"Opens the evaluation process\"},\"openRegistration()\":{\"notice\":\"Opens the registration process\"},\"openSubmission()\":{\"notice\":\"Opens the proposal submission process\"},\"publishRank()\":{\"notice\":\"Published the ranking results of the contest.\"},\"registerTeam(bytes32,address,bytes32)\":{\"notice\":\"Registers a new team in the contest registry.\"},\"reproveTeam(uint256)\":{\"notice\":\"reproves a team from participating in the contest\"},\"reproveTeams(uint256[])\":{\"notice\":\"reprove teams from participating in the contest\"},\"submitEvaluation(uint256[],uint8[])\":{\"notice\":\"Allows a judge to submit its evaluation for the teams competing in the contest. The evaluation for all teams must be submitted once.\"},\"updateProposalData(uint256,bytes32)\":{\"notice\":\"Updates the proposal data for a specific team.\"}}}},\"settings\":{\"compilationTarget\":{\"/home/odisi/dev/projects/hackapay/contracts/mocks/ContestBracketRegistryMock.sol\":\"ContestBracketRegistryMock\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/odisi/dev/projects/hackapay/contracts/core/ContestBracketRegistry.sol\":{\"keccak256\":\"0xc15a9e0ef31fce09f610aa64da88dbf3f256af120e0c94d4b90dca958cc61a0f\",\"urls\":[\"bzzr://b7db4d7511e844334e01939846815ce1ad9f1c82d8b751481b84164e7d0bf46d\"]},\"/home/odisi/dev/projects/hackapay/contracts/core/ContestTeamRegistry.sol\":{\"keccak256\":\"0x95995388083fbaa2dbb256cfd12d775c0e7da755052b3e6322fc56cc5b28836f\",\"urls\":[\"bzzr://dae0a383e182d7ea591ffb7aaee3e15ef6fbcd1720d4454faced06ce21bf6b90\"]},\"/home/odisi/dev/projects/hackapay/contracts/mocks/ContestBracketRegistryMock.sol\":{\"keccak256\":\"0x94f2ee722714d770bcf8d101eedae92c412b1e01e44963cb89b16ae3354b891c\",\"urls\":[\"bzzr://91cf4a2e84812214e3838db4c4c4aee9aefd8d6446827811fc6c3032035912d5\"]},\"/home/odisi/dev/projects/hackapay/contracts/roles/ContestRoleManager.sol\":{\"keccak256\":\"0x55c3fee5dd6f5a3dc91d24e3650e0bdfea2048179a7ebe46d0737d4a36d6d3b7\",\"urls\":[\"bzzr://294a21371d685a87eb6bd6cdea1075c4f97c90fded9baa2fa99ec871f53b8138\"]},\"/home/odisi/dev/projects/hackapay/contracts/roles/JudgeRole.sol\":{\"keccak256\":\"0x9adf6a6514d21fdc98880aad0d9547432138a169c31419d2ce29017352f813ec\",\"urls\":[\"bzzr://86b99e607f0e00e3ac0ab7658a29a8dc0be771df01f625f00f7c01236582f5ec\"]},\"/home/odisi/dev/projects/hackapay/contracts/roles/OrganizerRole.sol\":{\"keccak256\":\"0x0e35454f69f874f4356b5b0aff68123f26773fbf514028d68b710ac553ee0910\",\"urls\":[\"bzzr://4b5e4357823348a7f8f06d56d99e1299476476f9fc5f421e5f1d461b9fe41ed5\"]},\"openzeppelin-solidity/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzzr://bd34c1ce05b5b2b3a62fc02e160f6805b1cadd476854664f433c685b2fda8dad\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzzr://1604f5b6d6e916c154efd8c6720cda069e5ba32dfa0a9dedf2b42e5b02d07f89\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50338080806200008257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f496e76616c6964207a65726f2061646472657373000000000000000000000000604482015290519081900360640190fd5b62000093816200009c60201b60201c565b5050506200032b565b620000b2816200013660201b6200253b1760201c565b6009805460018082019092557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b0319166001600160a01b0384169081179091556000908152600b60209081526040909120805460ff191683179055600a546200013092909162000188811b62001de717901c565b600a5550565b620001518160046200020460201b6200267d1790919060201c565b6040516001600160a01b038216907f37e96fc6762bae414e69ea6e2490e63bc46f2a1335de0f6b91f49cf808829bcf90600090a250565b600082820183811015620001fd57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b620002168282620002a860201b60201c565b156200028357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b0382166200030b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018062002bf96022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6128be806200033b6000396000f3fe608060405234801561001057600080fd5b50600436106101a85760003560e01c80637dc673bc116100f9578063d06e4ee711610097578063eaf2f9cd11610071578063eaf2f9cd1461053e578063ed896d6614610561578063f540548b14610587578063ffc6ff1e146105a4576101a8565b8063d06e4ee714610508578063e35fb24114610510578063e4725f0214610518576101a8565b8063a2bce8bd116100d3578063a2bce8bd146104ca578063ae237c77146104d2578063ae2ac4ae146104da578063b2a13f9214610500576101a8565b80637dc673bc1461049457806390d768e41461049c578063927cab47146104a4576101a8565b80634b30b66f11610166578063567ad86211610140578063567ad8621461041a57806358e2f50e14610422578063737a63401461042a5780637385712c14610450576101a8565b80634b30b66f146103e45780634ea701a8146103ec57806354e1db2b14610412576101a8565b80628e0f1b146101ad57806324ba9fab146101ff578063288c4a461461021e5780633e091f641461028e5780633ed2b77a1461035057806341676f15146103aa575b600080fd5b6101ca600480360360208110156101c357600080fd5b50356105ac565b604080519586526001600160a01b03909416602086015284840192909252151560608401526080830152519081900360a00190f35b61021c6004803603602081101561021557600080fd5b503561069c565b005b61021c6004803603602081101561023457600080fd5b81019060208101813564010000000081111561024f57600080fd5b82018360208201111561026157600080fd5b8035906020019184602083028401116401000000008311171561028357600080fd5b5090925090506106a8565b61021c600480360360408110156102a457600080fd5b8101906020810181356401000000008111156102bf57600080fd5b8201836020820111156102d157600080fd5b803590602001918460208302840111640100000000831117156102f357600080fd5b91939092909160208101903564010000000081111561031157600080fd5b82018360208201111561032357600080fd5b8035906020019184602083028401116401000000008311171561034557600080fd5b5090925090506106e8565b61036d6004803603602081101561036657600080fd5b5035610ab4565b6040805196875260208701959095526001600160a01b039093168585015260608501919091521515608084015260a0830152519081900360c00190f35b6103d0600480360360208110156103c057600080fd5b50356001600160a01b0316610b07565b604080519115158252519081900360200190f35b61021c610b22565b6101ca6004803603602081101561040257600080fd5b50356001600160a01b0316610b2d565b6103d0610c14565b61021c610c22565b61021c610c2b565b610432610cd2565b60408051938452602084019290925282820152519081900360600190f35b6104826004803603606081101561046657600080fd5b508035906001600160a01b036020820135169060400135610ce0565b60408051918252519081900360200190f35b61021c6110d1565b61021c61117a565b61021c600480360360208110156104ba57600080fd5b50356001600160a01b0316611672565b6103d06116c2565b61021c6116cb565b61021c600480360360208110156104f057600080fd5b50356001600160a01b0316611774565b61021c6117c4565b61021c611866565b6103d0611910565b61021c6004803603602081101561052e57600080fd5b50356001600160a01b0316611919565b61021c6004803603604081101561055457600080fd5b5080359060200135611969565b6103d06004803603602081101561057757600080fd5b50356001600160a01b0316611aed565b61021c6004803603602081101561059d57600080fd5b5035611b00565b61021c611b09565b6000806000806000856105be81611bb7565b6106075760408051600160e51b62461bcd02815260206004820152600f60248201526001608a1b6e125b9d985b1a59081d19585b481a5902604482015290519081900360640190fd5b61060f612701565b6001888154811061061c57fe5b60009182526020918290206040805160c08101825260069390930290910180548352600181015493830184905260028101546001600160a01b0316918301829052600381015460608401819052600482015460ff1615156080850181905260059092015460a0909401849052939c919b5092995091975095509350505050565b6106a581611bbe565b50565b6106e4828280806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611d1192505050565b5050565b600e5460ff166107425760408051600160e51b62461bcd02815260206004820152601460248201527f4576616c756174696f6e20697320636c6f736564000000000000000000000000604482015290519081900360640190fd5b61074b33611aed565b61078957604051600160e51b62461bcd02815260040180806020018281038252602b815260200180612780602b913960400191505060405180910390fd5b8281146107ca57604051600160e51b62461bcd02815260040180806020018281038252603381526020018061283e6033913960400191505060405180910390fd5b600254831461080d57604051600160e51b62461bcd02815260040180806020018281038252603f8152602001806127ff603f913960400191505060405180910390fd5b6000600254116108675760408051600160e51b62461bcd02815260206004820152601d60248201527f4e6f20617070726f766564207465616d7320746f206576616c75617465000000604482015290519081900360640190fd5b336000908152600d602052604090206001810154600160a81b900460ff16156108c457604051600160e51b62461bcd02815260040180806020018281038252602281526020018061275e6022913960400191505060405180910390fd5b60005b600254811015610a515760008686838181106108df57fe5b90506020020135905060008585848181106108f657fe5b9050602002013560ff16905061090b82611bb7565b6109545760408051600160e51b62461bcd02815260206004820152600f60248201526001608a1b6e125b9d985b1a59081d19585b481a5902604482015290519081900360640190fd5b61095d82611d41565b6109ab5760408051600160e51b62461bcd0281526020600482015260146024820152600160621b731519585b481a5cc81b9bdd08185c1c1c9bdd995902604482015290519081900360640190fd5b6109b481611ddb565b610a085760408051600160e51b62461bcd02815260206004820152600d60248201527f496e76616c696420677261646500000000000000000000000000000000000000604482015290519081900360640190fd5b600060018381548110610a1757fe5b90600052602060002090600602019050610a418260ff168260050154611de790919063ffffffff16565b60059091015550506001016108c7565b50600181018054600160a81b60ff021916600160a81b17908190558154604080516001600160a01b0390931683525190917fd62869bbd78965284c34750092d78b62093e2d02b730d0ce696ebdcb371bb5dc919081900360200190a25050505050565b60018181548110610ac157fe5b600091825260209091206006909102018054600182015460028301546003840154600485015460059095015493955091936001600160a01b039091169260ff9091169086565b6000610b1a60048363ffffffff611e4b16565b90505b919050565b610b2b33611eb5565b565b6000808080806001600160a01b038616610b915760408051600160e51b62461bcd02815260206004820152601460248201527f496e76616c6964207a65726f2061646472657373000000000000000000000000604482015290519081900360640190fd5b610b99612701565b505050506001600160a01b0392831660009081526020818152604091829020825160c0810184528154815260018201549281018390526002820154909616928601839052600381015460608701819052600482015460ff1615156080880181905260059092015460a090970187905291969295919450925090565b600354610100900460ff1690565b610b2b33611ef6565b600354610100900460ff1615610c835760408051600160e51b62461bcd0281526020600482015260126024820152600160711b7129bab136b4b9b9b4b7b71034b99037b832b702604482015290519081900360640190fd5b610c8c33610b07565b610cca57604051600160e51b62461bcd0281526004018080602001828103825260338152602001806127ab6033913960400191505060405180910390fd5b610b2b611f39565b600f54601554601b54909192565b60035460009060ff16610d3d5760408051600160e51b62461bcd02815260206004820152601660248201527f526567697374726174696f6e20697320636c6f73656400000000000000000000604482015290519081900360640190fd5b8360001a60f81b6001600160f81b031916610da25760408051600160e51b62461bcd02815260206004820152601960248201527f5465616d206e616d652063616e6e6f7420626520656d70747900000000000000604482015290519081900360640190fd5b6001600160a01b038316610e005760408051600160e51b62461bcd02815260206004820152601b60248201527f5465616d20616464726573732063616e6e6f74206265207a65726f0000000000604482015290519081900360640190fd5b6001600160a01b038381166000908152602081905260409020600201541615610e735760408051600160e51b62461bcd02815260206004820152601760248201527f5465616d20616c72656164792072656769737465726564000000000000000000604482015290519081900360640190fd5b600154610e7e612701565b506040805160c081018252828152602081018781526001600160a01b0387811693830193845260608301878152600160808501818152600060a08701818152835480850185559184905287517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf660069093029283015595517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf782015596517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf8880180546001600160a01b031916919095161790935590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf986015590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfa8501805460ff191691151591909117905590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfb90930192909255815490919083908110610fe657fe5b600091825260208083206001600160a01b03808a1685529184905260409093206006909202909201805482556001808201548184015560028083015481850180546001600160a01b031916919096161790945560038083015490840155600480830154908401805460ff909216151560ff199092169190911790556005918201549190920155905461107d9163ffffffff611de716565b600255604080518781526001602082015281516001600160a01b0388169285927f443b25596b838f2775d21b1153b87036f08c058fd4702446f1136ab26e5f3b90929081900390910190a350949350505050565b60035460ff1661112b5760408051600160e51b62461bcd02815260206004820152601660248201527f526567697374726174696f6e20697320636c6f73656400000000000000000000604482015290519081900360640190fd5b61113433610b07565b61117257604051600160e51b62461bcd0281526004018080602001828103825260338152602001806127ab6033913960400191505060405180910390fd5b610b2b611f89565b60035460ff16156111d55760408051600160e51b62461bcd02815260206004820152601460248201527f526567697374726174696f6e206973206f70656e000000000000000000000000604482015290519081900360640190fd5b600354610100900460ff161561122d5760408051600160e51b62461bcd0281526020600482015260126024820152600160711b7129bab136b4b9b9b4b7b71034b99037b832b702604482015290519081900360640190fd5b600e5460ff16156112805760408051600160e51b62461bcd0281526020600482015260126024820152600160711b7122bb30b63ab0ba34b7b71034b99037b832b702604482015290519081900360640190fd5b61128933610b07565b6112c757604051600160e51b62461bcd0281526004018080602001828103825260338152602001806127ab6033913960400191505060405180910390fd5b60215460ff16156113225760408051600160e51b62461bcd02815260206004820152601660248201527f52616e6b20616c7265616479207075626c697368656400000000000000000000604482015290519081900360640190fd5b60006002541161137c5760408051600160e51b62461bcd02815260206004820152601360248201527f4e6f207465616d73207265676973746572656400000000000000000000000000604482015290519081900360640190fd5b611384612701565b61138c612701565b611394612701565b61139c612701565b60005b60015481101561148757600181815481106113b657fe5b60009182526020918290206040805160c08101825260069093029091018054835260018101549383019390935260028301546001600160a01b03169082015260038201546060820152600482015460ff16158015608083015260059092015460a082015295508061142e57508160a001518560a00151105b156114385761147f565b8360a001518560a00151111561145257849392915061147f565b8260a001518560a00151111561146b578492915061147f565b8160a001518560a00151111561147f578491505b60010161139f565b508251600f819055602080850151601055604080860151601180546001600160a01b03199081166001600160a01b0393841617918290556060808a01516012556080808b01516013805460ff1990811692151592909217905560a0808d015160148190558c516015558c8a01516016558c890151601780548816918a169190911790558c8501516018558c8401516019805485169115159190911790558c820151601a558b51601b558b8a0151601c558b890151601d8054909716908916179095558a840151601e558a830151601f805484169115159190911790558a01518855602180549091166001908117909155865198895293909416958701959095528584015292840192909252517f78bd43bbb342abb837e10002dd4fcda5ea371db518ce4e9aff10ab136441a99c9281900390910190a1601554601754601a54604080519384526001600160a01b0390921660208401528282015260026060830152517f78bd43bbb342abb837e10002dd4fcda5ea371db518ce4e9aff10ab136441a99c9181900360800190a1601b54601d5460208054604080519485526001600160a01b03909316918401919091528282015260036060830152517f78bd43bbb342abb837e10002dd4fcda5ea371db518ce4e9aff10ab136441a99c9181900360800190a150505050565b61167b33610b07565b6116b957604051600160e51b62461bcd0281526004018080602001828103825260338152602001806127ab6033913960400191505060405180910390fd5b6106a581611fc9565b600e5460ff1690565b600e5460ff166117255760408051600160e51b62461bcd02815260206004820152601460248201527f4576616c756174696f6e20697320636c6f736564000000000000000000000000604482015290519081900360640190fd5b61172e33610b07565b61176c57604051600160e51b62461bcd0281526004018080602001828103825260338152602001806127ab6033913960400191505060405180910390fd5b610b2b61215c565b61177d33610b07565b6117bb57604051600160e51b62461bcd0281526004018080602001828103825260338152602001806127ab6033913960400191505060405180910390fd5b6106a581611eb5565b600e5460ff16156118175760408051600160e51b62461bcd0281526020600482015260126024820152600160711b7122bb30b63ab0ba34b7b71034b99037b832b702604482015290519081900360640190fd5b61182033610b07565b61185e57604051600160e51b62461bcd0281526004018080602001828103825260338152602001806127ab6033913960400191505060405180910390fd5b610b2b61219c565b60035460ff16156118c15760408051600160e51b62461bcd02815260206004820152601460248201527f526567697374726174696f6e206973206f70656e000000000000000000000000604482015290519081900360640190fd5b6118ca33610b07565b61190857604051600160e51b62461bcd0281526004018080602001828103825260338152602001806127ab6033913960400191505060405180910390fd5b610b2b6121e6565b60035460ff1690565b61192233610b07565b61196057604051600160e51b62461bcd0281526004018080602001828103825260338152602001806127ab6033913960400191505060405180910390fd5b6106a581612230565b8161197381611bb7565b6119bc5760408051600160e51b62461bcd02815260206004820152600f60248201526001608a1b6e125b9d985b1a59081d19585b481a5902604482015290519081900360640190fd5b826119c681611d41565b611a145760408051600160e51b62461bcd0281526020600482015260146024820152600160621b731519585b481a5cc81b9bdd08185c1c1c9bdd995902604482015290519081900360640190fd5b600354610100900460ff16611a735760408051600160e51b62461bcd02815260206004820152601460248201527f5375626d697373696f6e20697320636c6f736564000000000000000000000000604482015290519081900360640190fd5b600060018581548110611a8257fe5b60009182526020918290206003600690920201908101869055600281015481546040805189815290519395506001600160a01b039092169390927fa44de9e6ce79675199796005de8516704078af25aaf78ab4be180213882560ee9281900390910190a35050505050565b6000610b1a60058363ffffffff611e4b16565b6106a5816122a7565b600354610100900460ff16611b685760408051600160e51b62461bcd02815260206004820152601460248201527f5375626d697373696f6e20697320636c6f736564000000000000000000000000604482015290519081900360640190fd5b611b7133610b07565b611baf57604051600160e51b62461bcd0281526004018080602001828103825260338152602001806127ab6033913960400191505060405180910390fd5b610b2b61238e565b6001541190565b80611bc881611bb7565b611c115760408051600160e51b62461bcd02815260206004820152600f60248201526001608a1b6e125b9d985b1a59081d19585b481a5902604482015290519081900360640190fd5b81611c1b81611d41565b15611c705760408051600160e51b62461bcd02815260206004820152601560248201527f5465616d206973206e6f7420726570726f7665642e0000000000000000000000604482015290519081900360640190fd5b600060018481548110611c7f57fe5b600091825260209091206004600690920201908101805460ff19166001908117909155600254919250611cb8919063ffffffff611de716565b6002908155810154815460048301546040805160ff90921615158252516001600160a01b03909316927fd903780bcf5bcea81714ac3450a34cb3de7b0735a59883e1eb90edd901a54ad49181900360200190a350505050565b60005b81518110156106e457611d39828281518110611d2c57fe5b60200260200101516122a7565b600101611d14565b6000611d4c82611bb7565b611d5857506000610b1d565b611d60612701565b60018381548110611d6d57fe5b60009182526020918290206040805160c08101825260069093029091018054835260018101549383019390935260028301546001600160a01b03169082015260038201546060820152600482015460ff1615156080820181905260059092015460a090910152915050919050565b600a60ff909116111590565b600082820183811015611e445760408051600160e51b62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b60006001600160a01b038216611e9557604051600160e51b62461bcd0281526004018080602001828103825260228152602001806128716022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b611ebe816123d9565b6001600160a01b03166000908152600d60205260409020600101805474ff000000000000000000000000000000000000000019169055565b611eff8161241c565b6001600160a01b0381166000908152600b60205260409020805460ff19169055600a54611f3390600163ffffffff61246416565b600a5550565b6003805461ff00191661010090811791829055604080519190920460ff161515815290517f48fbf5c7b70581e7e2145562de373e14a5af56d09f9b96d73545d0d35f71f0889181900360200190a1565b6003805460ff19169055604080516000815290517f78b477400a612eb4ec0a343596323cccfac06b27624264a549d8322c736d055c9181900360200190a1565b611fd2816124c4565b600c54611fdd612736565b6040518060800160405280838152602001846001600160a01b03168152602001600115158152602001600015158152509050600c81908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010160146101000a81548160ff02191690831515021790555060608201518160010160156101000a81548160ff02191690831515021790555050505080600d6000856001600160a01b03166001600160a01b031681526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010160146101000a81548160ff02191690831515021790555060608201518160010160156101000a81548160ff021916908315150217905550905050505050565b600e805460ff19169055604080516000815290517f0266365b4830894a247179cbad20f3dfe40ba70917925976027d2af68d950bed9181900360200190a1565b600e805460ff1916600117908190556040805160ff9290921615158252517f0266365b4830894a247179cbad20f3dfe40ba70917925976027d2af68d950bed9181900360200190a1565b6003805460ff1916600117908190556040805160ff9290921615158252517f78b477400a612eb4ec0a343596323cccfac06b27624264a549d8322c736d055c9181900360200190a1565b6122398161253b565b6009805460018082019092557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b0319166001600160a01b0384169081179091556000908152600b60205260409020805460ff191682179055600a54611f3391611de7565b806122b181611bb7565b6122fa5760408051600160e51b62461bcd02815260206004820152600f60248201526001608a1b6e125b9d985b1a59081d19585b481a5902604482015290519081900360640190fd5b8161230481611d41565b6123525760408051600160e51b62461bcd0281526020600482015260146024820152600160621b731519585b481a5cc81b9bdd08185c1c1c9bdd995902604482015290519081900360640190fd5b60006001848154811061236157fe5b6000918252602090912060069091020160048101805460ff19169055600254909150611cb8906001612464565b6003805461ff001916908190556040805161010090920460ff1615158252517f48fbf5c7b70581e7e2145562de373e14a5af56d09f9b96d73545d0d35f71f0889181900360200190a1565b6123e281612583565b6001600160a01b0381166000908152600860205260409020805460ff1916905560075461241690600163ffffffff61246416565b60075550565b61242d60048263ffffffff6125cb16565b6040516001600160a01b038216907fc459bd414676a5877fcf10a0d73ecf7e1f672a339650b03e628c4046534300e390600090a250565b6000828211156124be5760408051600160e51b62461bcd02815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6124cd81612635565b6006805460018082019092557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319166001600160a01b0384169081179091556000908152600860205260409020805460ff19168217905560075461241691611de7565b61254c60048263ffffffff61267d16565b6040516001600160a01b038216907f37e96fc6762bae414e69ea6e2490e63bc46f2a1335de0f6b91f49cf808829bcf90600090a250565b61259460058263ffffffff6125cb16565b6040516001600160a01b038216907f32a792a099c63670df7161917c5efb2fdc734cf9f943ebddccbecef87664f2b790600090a250565b6125d58282611e4b565b61261357604051600160e51b62461bcd0281526004018080602001828103825260218152602001806127de6021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b61264660058263ffffffff61267d16565b6040516001600160a01b038216907fe7f15f9ffff540ae14fdebcd9b6d6cc1fc143933338656c99caa595e8b80903990600090a250565b6126878282611e4b565b156126dc5760408051600160e51b62461bcd02815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915290565b6040805160808101825260008082526020820181905291810182905260608101919091529056fe4a7564676520616c7265616479207375626d6974746564206576616c756174696f6e4a75646765526f6c653a2063616c6c657220646f6573206e6f742068617665204a7564676520526f6c652e4f7267616e697a6572526f6c653a2063616c6c657220646f6573206e6f742068617665204f7267616e697a657220526f6c652e526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c657465616d7349647320616e642067726164657320646f206e6f74206d617463682074686520636f756e74696e67206f6620617070726f766564207465616d734c656e677468206f66207465616d7320616e64207465616d47726164657320617272617973206d75737420626520657175616c526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373a165627a7a7230582099bb14cf66a52e1e4104e5fc45c7ab287c65da50584d04e582c720be015e8c0d0029526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101a85760003560e01c80637dc673bc116100f9578063d06e4ee711610097578063eaf2f9cd11610071578063eaf2f9cd1461053e578063ed896d6614610561578063f540548b14610587578063ffc6ff1e146105a4576101a8565b8063d06e4ee714610508578063e35fb24114610510578063e4725f0214610518576101a8565b8063a2bce8bd116100d3578063a2bce8bd146104ca578063ae237c77146104d2578063ae2ac4ae146104da578063b2a13f9214610500576101a8565b80637dc673bc1461049457806390d768e41461049c578063927cab47146104a4576101a8565b80634b30b66f11610166578063567ad86211610140578063567ad8621461041a57806358e2f50e14610422578063737a63401461042a5780637385712c14610450576101a8565b80634b30b66f146103e45780634ea701a8146103ec57806354e1db2b14610412576101a8565b80628e0f1b146101ad57806324ba9fab146101ff578063288c4a461461021e5780633e091f641461028e5780633ed2b77a1461035057806341676f15146103aa575b600080fd5b6101ca600480360360208110156101c357600080fd5b50356105ac565b604080519586526001600160a01b03909416602086015284840192909252151560608401526080830152519081900360a00190f35b61021c6004803603602081101561021557600080fd5b503561069c565b005b61021c6004803603602081101561023457600080fd5b81019060208101813564010000000081111561024f57600080fd5b82018360208201111561026157600080fd5b8035906020019184602083028401116401000000008311171561028357600080fd5b5090925090506106a8565b61021c600480360360408110156102a457600080fd5b8101906020810181356401000000008111156102bf57600080fd5b8201836020820111156102d157600080fd5b803590602001918460208302840111640100000000831117156102f357600080fd5b91939092909160208101903564010000000081111561031157600080fd5b82018360208201111561032357600080fd5b8035906020019184602083028401116401000000008311171561034557600080fd5b5090925090506106e8565b61036d6004803603602081101561036657600080fd5b5035610ab4565b6040805196875260208701959095526001600160a01b039093168585015260608501919091521515608084015260a0830152519081900360c00190f35b6103d0600480360360208110156103c057600080fd5b50356001600160a01b0316610b07565b604080519115158252519081900360200190f35b61021c610b22565b6101ca6004803603602081101561040257600080fd5b50356001600160a01b0316610b2d565b6103d0610c14565b61021c610c22565b61021c610c2b565b610432610cd2565b60408051938452602084019290925282820152519081900360600190f35b6104826004803603606081101561046657600080fd5b508035906001600160a01b036020820135169060400135610ce0565b60408051918252519081900360200190f35b61021c6110d1565b61021c61117a565b61021c600480360360208110156104ba57600080fd5b50356001600160a01b0316611672565b6103d06116c2565b61021c6116cb565b61021c600480360360208110156104f057600080fd5b50356001600160a01b0316611774565b61021c6117c4565b61021c611866565b6103d0611910565b61021c6004803603602081101561052e57600080fd5b50356001600160a01b0316611919565b61021c6004803603604081101561055457600080fd5b5080359060200135611969565b6103d06004803603602081101561057757600080fd5b50356001600160a01b0316611aed565b61021c6004803603602081101561059d57600080fd5b5035611b00565b61021c611b09565b6000806000806000856105be81611bb7565b6106075760408051600160e51b62461bcd02815260206004820152600f60248201526001608a1b6e125b9d985b1a59081d19585b481a5902604482015290519081900360640190fd5b61060f612701565b6001888154811061061c57fe5b60009182526020918290206040805160c08101825260069390930290910180548352600181015493830184905260028101546001600160a01b0316918301829052600381015460608401819052600482015460ff1615156080850181905260059092015460a0909401849052939c919b5092995091975095509350505050565b6106a581611bbe565b50565b6106e4828280806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611d1192505050565b5050565b600e5460ff166107425760408051600160e51b62461bcd02815260206004820152601460248201527f4576616c756174696f6e20697320636c6f736564000000000000000000000000604482015290519081900360640190fd5b61074b33611aed565b61078957604051600160e51b62461bcd02815260040180806020018281038252602b815260200180612780602b913960400191505060405180910390fd5b8281146107ca57604051600160e51b62461bcd02815260040180806020018281038252603381526020018061283e6033913960400191505060405180910390fd5b600254831461080d57604051600160e51b62461bcd02815260040180806020018281038252603f8152602001806127ff603f913960400191505060405180910390fd5b6000600254116108675760408051600160e51b62461bcd02815260206004820152601d60248201527f4e6f20617070726f766564207465616d7320746f206576616c75617465000000604482015290519081900360640190fd5b336000908152600d602052604090206001810154600160a81b900460ff16156108c457604051600160e51b62461bcd02815260040180806020018281038252602281526020018061275e6022913960400191505060405180910390fd5b60005b600254811015610a515760008686838181106108df57fe5b90506020020135905060008585848181106108f657fe5b9050602002013560ff16905061090b82611bb7565b6109545760408051600160e51b62461bcd02815260206004820152600f60248201526001608a1b6e125b9d985b1a59081d19585b481a5902604482015290519081900360640190fd5b61095d82611d41565b6109ab5760408051600160e51b62461bcd0281526020600482015260146024820152600160621b731519585b481a5cc81b9bdd08185c1c1c9bdd995902604482015290519081900360640190fd5b6109b481611ddb565b610a085760408051600160e51b62461bcd02815260206004820152600d60248201527f496e76616c696420677261646500000000000000000000000000000000000000604482015290519081900360640190fd5b600060018381548110610a1757fe5b90600052602060002090600602019050610a418260ff168260050154611de790919063ffffffff16565b60059091015550506001016108c7565b50600181018054600160a81b60ff021916600160a81b17908190558154604080516001600160a01b0390931683525190917fd62869bbd78965284c34750092d78b62093e2d02b730d0ce696ebdcb371bb5dc919081900360200190a25050505050565b60018181548110610ac157fe5b600091825260209091206006909102018054600182015460028301546003840154600485015460059095015493955091936001600160a01b039091169260ff9091169086565b6000610b1a60048363ffffffff611e4b16565b90505b919050565b610b2b33611eb5565b565b6000808080806001600160a01b038616610b915760408051600160e51b62461bcd02815260206004820152601460248201527f496e76616c6964207a65726f2061646472657373000000000000000000000000604482015290519081900360640190fd5b610b99612701565b505050506001600160a01b0392831660009081526020818152604091829020825160c0810184528154815260018201549281018390526002820154909616928601839052600381015460608701819052600482015460ff1615156080880181905260059092015460a090970187905291969295919450925090565b600354610100900460ff1690565b610b2b33611ef6565b600354610100900460ff1615610c835760408051600160e51b62461bcd0281526020600482015260126024820152600160711b7129bab136b4b9b9b4b7b71034b99037b832b702604482015290519081900360640190fd5b610c8c33610b07565b610cca57604051600160e51b62461bcd0281526004018080602001828103825260338152602001806127ab6033913960400191505060405180910390fd5b610b2b611f39565b600f54601554601b54909192565b60035460009060ff16610d3d5760408051600160e51b62461bcd02815260206004820152601660248201527f526567697374726174696f6e20697320636c6f73656400000000000000000000604482015290519081900360640190fd5b8360001a60f81b6001600160f81b031916610da25760408051600160e51b62461bcd02815260206004820152601960248201527f5465616d206e616d652063616e6e6f7420626520656d70747900000000000000604482015290519081900360640190fd5b6001600160a01b038316610e005760408051600160e51b62461bcd02815260206004820152601b60248201527f5465616d20616464726573732063616e6e6f74206265207a65726f0000000000604482015290519081900360640190fd5b6001600160a01b038381166000908152602081905260409020600201541615610e735760408051600160e51b62461bcd02815260206004820152601760248201527f5465616d20616c72656164792072656769737465726564000000000000000000604482015290519081900360640190fd5b600154610e7e612701565b506040805160c081018252828152602081018781526001600160a01b0387811693830193845260608301878152600160808501818152600060a08701818152835480850185559184905287517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf660069093029283015595517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf782015596517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf8880180546001600160a01b031916919095161790935590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf986015590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfa8501805460ff191691151591909117905590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfb90930192909255815490919083908110610fe657fe5b600091825260208083206001600160a01b03808a1685529184905260409093206006909202909201805482556001808201548184015560028083015481850180546001600160a01b031916919096161790945560038083015490840155600480830154908401805460ff909216151560ff199092169190911790556005918201549190920155905461107d9163ffffffff611de716565b600255604080518781526001602082015281516001600160a01b0388169285927f443b25596b838f2775d21b1153b87036f08c058fd4702446f1136ab26e5f3b90929081900390910190a350949350505050565b60035460ff1661112b5760408051600160e51b62461bcd02815260206004820152601660248201527f526567697374726174696f6e20697320636c6f73656400000000000000000000604482015290519081900360640190fd5b61113433610b07565b61117257604051600160e51b62461bcd0281526004018080602001828103825260338152602001806127ab6033913960400191505060405180910390fd5b610b2b611f89565b60035460ff16156111d55760408051600160e51b62461bcd02815260206004820152601460248201527f526567697374726174696f6e206973206f70656e000000000000000000000000604482015290519081900360640190fd5b600354610100900460ff161561122d5760408051600160e51b62461bcd0281526020600482015260126024820152600160711b7129bab136b4b9b9b4b7b71034b99037b832b702604482015290519081900360640190fd5b600e5460ff16156112805760408051600160e51b62461bcd0281526020600482015260126024820152600160711b7122bb30b63ab0ba34b7b71034b99037b832b702604482015290519081900360640190fd5b61128933610b07565b6112c757604051600160e51b62461bcd0281526004018080602001828103825260338152602001806127ab6033913960400191505060405180910390fd5b60215460ff16156113225760408051600160e51b62461bcd02815260206004820152601660248201527f52616e6b20616c7265616479207075626c697368656400000000000000000000604482015290519081900360640190fd5b60006002541161137c5760408051600160e51b62461bcd02815260206004820152601360248201527f4e6f207465616d73207265676973746572656400000000000000000000000000604482015290519081900360640190fd5b611384612701565b61138c612701565b611394612701565b61139c612701565b60005b60015481101561148757600181815481106113b657fe5b60009182526020918290206040805160c08101825260069093029091018054835260018101549383019390935260028301546001600160a01b03169082015260038201546060820152600482015460ff16158015608083015260059092015460a082015295508061142e57508160a001518560a00151105b156114385761147f565b8360a001518560a00151111561145257849392915061147f565b8260a001518560a00151111561146b578492915061147f565b8160a001518560a00151111561147f578491505b60010161139f565b508251600f819055602080850151601055604080860151601180546001600160a01b03199081166001600160a01b0393841617918290556060808a01516012556080808b01516013805460ff1990811692151592909217905560a0808d015160148190558c516015558c8a01516016558c890151601780548816918a169190911790558c8501516018558c8401516019805485169115159190911790558c820151601a558b51601b558b8a0151601c558b890151601d8054909716908916179095558a840151601e558a830151601f805484169115159190911790558a01518855602180549091166001908117909155865198895293909416958701959095528584015292840192909252517f78bd43bbb342abb837e10002dd4fcda5ea371db518ce4e9aff10ab136441a99c9281900390910190a1601554601754601a54604080519384526001600160a01b0390921660208401528282015260026060830152517f78bd43bbb342abb837e10002dd4fcda5ea371db518ce4e9aff10ab136441a99c9181900360800190a1601b54601d5460208054604080519485526001600160a01b03909316918401919091528282015260036060830152517f78bd43bbb342abb837e10002dd4fcda5ea371db518ce4e9aff10ab136441a99c9181900360800190a150505050565b61167b33610b07565b6116b957604051600160e51b62461bcd0281526004018080602001828103825260338152602001806127ab6033913960400191505060405180910390fd5b6106a581611fc9565b600e5460ff1690565b600e5460ff166117255760408051600160e51b62461bcd02815260206004820152601460248201527f4576616c756174696f6e20697320636c6f736564000000000000000000000000604482015290519081900360640190fd5b61172e33610b07565b61176c57604051600160e51b62461bcd0281526004018080602001828103825260338152602001806127ab6033913960400191505060405180910390fd5b610b2b61215c565b61177d33610b07565b6117bb57604051600160e51b62461bcd0281526004018080602001828103825260338152602001806127ab6033913960400191505060405180910390fd5b6106a581611eb5565b600e5460ff16156118175760408051600160e51b62461bcd0281526020600482015260126024820152600160711b7122bb30b63ab0ba34b7b71034b99037b832b702604482015290519081900360640190fd5b61182033610b07565b61185e57604051600160e51b62461bcd0281526004018080602001828103825260338152602001806127ab6033913960400191505060405180910390fd5b610b2b61219c565b60035460ff16156118c15760408051600160e51b62461bcd02815260206004820152601460248201527f526567697374726174696f6e206973206f70656e000000000000000000000000604482015290519081900360640190fd5b6118ca33610b07565b61190857604051600160e51b62461bcd0281526004018080602001828103825260338152602001806127ab6033913960400191505060405180910390fd5b610b2b6121e6565b60035460ff1690565b61192233610b07565b61196057604051600160e51b62461bcd0281526004018080602001828103825260338152602001806127ab6033913960400191505060405180910390fd5b6106a581612230565b8161197381611bb7565b6119bc5760408051600160e51b62461bcd02815260206004820152600f60248201526001608a1b6e125b9d985b1a59081d19585b481a5902604482015290519081900360640190fd5b826119c681611d41565b611a145760408051600160e51b62461bcd0281526020600482015260146024820152600160621b731519585b481a5cc81b9bdd08185c1c1c9bdd995902604482015290519081900360640190fd5b600354610100900460ff16611a735760408051600160e51b62461bcd02815260206004820152601460248201527f5375626d697373696f6e20697320636c6f736564000000000000000000000000604482015290519081900360640190fd5b600060018581548110611a8257fe5b60009182526020918290206003600690920201908101869055600281015481546040805189815290519395506001600160a01b039092169390927fa44de9e6ce79675199796005de8516704078af25aaf78ab4be180213882560ee9281900390910190a35050505050565b6000610b1a60058363ffffffff611e4b16565b6106a5816122a7565b600354610100900460ff16611b685760408051600160e51b62461bcd02815260206004820152601460248201527f5375626d697373696f6e20697320636c6f736564000000000000000000000000604482015290519081900360640190fd5b611b7133610b07565b611baf57604051600160e51b62461bcd0281526004018080602001828103825260338152602001806127ab6033913960400191505060405180910390fd5b610b2b61238e565b6001541190565b80611bc881611bb7565b611c115760408051600160e51b62461bcd02815260206004820152600f60248201526001608a1b6e125b9d985b1a59081d19585b481a5902604482015290519081900360640190fd5b81611c1b81611d41565b15611c705760408051600160e51b62461bcd02815260206004820152601560248201527f5465616d206973206e6f7420726570726f7665642e0000000000000000000000604482015290519081900360640190fd5b600060018481548110611c7f57fe5b600091825260209091206004600690920201908101805460ff19166001908117909155600254919250611cb8919063ffffffff611de716565b6002908155810154815460048301546040805160ff90921615158252516001600160a01b03909316927fd903780bcf5bcea81714ac3450a34cb3de7b0735a59883e1eb90edd901a54ad49181900360200190a350505050565b60005b81518110156106e457611d39828281518110611d2c57fe5b60200260200101516122a7565b600101611d14565b6000611d4c82611bb7565b611d5857506000610b1d565b611d60612701565b60018381548110611d6d57fe5b60009182526020918290206040805160c08101825260069093029091018054835260018101549383019390935260028301546001600160a01b03169082015260038201546060820152600482015460ff1615156080820181905260059092015460a090910152915050919050565b600a60ff909116111590565b600082820183811015611e445760408051600160e51b62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b60006001600160a01b038216611e9557604051600160e51b62461bcd0281526004018080602001828103825260228152602001806128716022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b611ebe816123d9565b6001600160a01b03166000908152600d60205260409020600101805474ff000000000000000000000000000000000000000019169055565b611eff8161241c565b6001600160a01b0381166000908152600b60205260409020805460ff19169055600a54611f3390600163ffffffff61246416565b600a5550565b6003805461ff00191661010090811791829055604080519190920460ff161515815290517f48fbf5c7b70581e7e2145562de373e14a5af56d09f9b96d73545d0d35f71f0889181900360200190a1565b6003805460ff19169055604080516000815290517f78b477400a612eb4ec0a343596323cccfac06b27624264a549d8322c736d055c9181900360200190a1565b611fd2816124c4565b600c54611fdd612736565b6040518060800160405280838152602001846001600160a01b03168152602001600115158152602001600015158152509050600c81908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010160146101000a81548160ff02191690831515021790555060608201518160010160156101000a81548160ff02191690831515021790555050505080600d6000856001600160a01b03166001600160a01b031681526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010160146101000a81548160ff02191690831515021790555060608201518160010160156101000a81548160ff021916908315150217905550905050505050565b600e805460ff19169055604080516000815290517f0266365b4830894a247179cbad20f3dfe40ba70917925976027d2af68d950bed9181900360200190a1565b600e805460ff1916600117908190556040805160ff9290921615158252517f0266365b4830894a247179cbad20f3dfe40ba70917925976027d2af68d950bed9181900360200190a1565b6003805460ff1916600117908190556040805160ff9290921615158252517f78b477400a612eb4ec0a343596323cccfac06b27624264a549d8322c736d055c9181900360200190a1565b6122398161253b565b6009805460018082019092557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b0319166001600160a01b0384169081179091556000908152600b60205260409020805460ff191682179055600a54611f3391611de7565b806122b181611bb7565b6122fa5760408051600160e51b62461bcd02815260206004820152600f60248201526001608a1b6e125b9d985b1a59081d19585b481a5902604482015290519081900360640190fd5b8161230481611d41565b6123525760408051600160e51b62461bcd0281526020600482015260146024820152600160621b731519585b481a5cc81b9bdd08185c1c1c9bdd995902604482015290519081900360640190fd5b60006001848154811061236157fe5b6000918252602090912060069091020160048101805460ff19169055600254909150611cb8906001612464565b6003805461ff001916908190556040805161010090920460ff1615158252517f48fbf5c7b70581e7e2145562de373e14a5af56d09f9b96d73545d0d35f71f0889181900360200190a1565b6123e281612583565b6001600160a01b0381166000908152600860205260409020805460ff1916905560075461241690600163ffffffff61246416565b60075550565b61242d60048263ffffffff6125cb16565b6040516001600160a01b038216907fc459bd414676a5877fcf10a0d73ecf7e1f672a339650b03e628c4046534300e390600090a250565b6000828211156124be5760408051600160e51b62461bcd02815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6124cd81612635565b6006805460018082019092557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319166001600160a01b0384169081179091556000908152600860205260409020805460ff19168217905560075461241691611de7565b61254c60048263ffffffff61267d16565b6040516001600160a01b038216907f37e96fc6762bae414e69ea6e2490e63bc46f2a1335de0f6b91f49cf808829bcf90600090a250565b61259460058263ffffffff6125cb16565b6040516001600160a01b038216907f32a792a099c63670df7161917c5efb2fdc734cf9f943ebddccbecef87664f2b790600090a250565b6125d58282611e4b565b61261357604051600160e51b62461bcd0281526004018080602001828103825260218152602001806127de6021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b61264660058263ffffffff61267d16565b6040516001600160a01b038216907fe7f15f9ffff540ae14fdebcd9b6d6cc1fc143933338656c99caa595e8b80903990600090a250565b6126878282611e4b565b156126dc5760408051600160e51b62461bcd02815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915290565b6040805160808101825260008082526020820181905291810182905260608101919091529056fe4a7564676520616c7265616479207375626d6974746564206576616c756174696f6e4a75646765526f6c653a2063616c6c657220646f6573206e6f742068617665204a7564676520526f6c652e4f7267616e697a6572526f6c653a2063616c6c657220646f6573206e6f742068617665204f7267616e697a657220526f6c652e526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c657465616d7349647320616e642067726164657320646f206e6f74206d617463682074686520636f756e74696e67206f6620617070726f766564207465616d734c656e677468206f66207465616d7320616e64207465616d47726164657320617272617973206d75737420626520657175616c526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373a165627a7a7230582099bb14cf66a52e1e4104e5fc45c7ab287c65da50584d04e582c720be015e8c0d0029",
  "sourceMap": "71:129:10:-;;;139:58;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;183:10:10;;;1889:30:23;1881:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1954:31;1968:16;1954:13;;;:31;;:::i;:::-;1824:168;895:93:21;1986:108:1;71:129:10;;1599:232:21;1658:28;1678:7;1658:19;;;;;:28;;:::i;:::-;1696:10;27::-1;;39:1;23:18;;;45:23;;;1696:24:21;;;;-1:-1:-1;;;;;;1696:24:21;-1:-1:-1;;;;;1696:24:21;;;;;;;;-1:-1:-1;1730:25:21;;;:16;1696:24;1730:25;;;;;;;:32;;-1:-1:-1;;1730:32:21;;;;;1796:21;;:28;;:21;;:25;;;;;:28;;:::i;:::-;1772:21;:52;-1:-1:-1;1599:232:21:o;2455:128:23:-;2514:24;2530:7;2514:11;:15;;;;;;:24;;;;:::i;:::-;2553:23;;-1:-1:-1;;;;;2553:23:23;;;;;;;;2455:128;:::o;834:176:26:-;892:7;923:5;;;946:6;;;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:26:o;260:175:25:-;337:18;341:4;347:7;337:3;;;:18;;:::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:25;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:25;424:4;401:27;;;260:175::o;779:200::-;851:4;-1:-1:-1;;;;;875:21:25;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:25;:11;:20;;;;;;;;;;;;;;;779:200::o;71:129:10:-;;;;;;;",
  "deployedSourceMap": "71:129:10:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;71:129:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3439:293:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3439:293:3;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3439:293:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8416:83;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8416:83:3;;:::i;:::-;;8791:98;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8791:98:3;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;8791:98:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8791:98:3;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;-1:-1;8791:98:3;;-1:-1:-1;8791:98:3;-1:-1:-1;8791:98:3;:::i;2703:1555:1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2703:1555:1;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;2703:1555:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2703:1555:1;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;2703:1555:1;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;2703:1555:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2703:1555:1;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;-1:-1;2703:1555:1;;-1:-1:-1;2703:1555:1;-1:-1:-1;2703:1555:1;:::i;1103:19:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1103:19:3;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;1103:19:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2144:113:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2144:113:23;-1:-1:-1;;;;;2144:113:23;;:::i;:::-;;;;;;;;;;;;;;;;;;2240:73:22;;;:::i;4172:332:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4172:332:3;-1:-1:-1;;;;;4172:332:3;;:::i;8042:101::-;;;:::i;2368:81:23:-;;;:::i;7408:108:1:-;;;:::i;6283:145::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;4887:1108:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4887:1108:3;;;-1:-1:-1;;;;;4887:1108:3;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6559:114:1;;;:::i;4426:1656::-;;;:::i;994:91:21:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;994:91:21;-1:-1:-1;;;;;994:91:21;;:::i;8220:101:1:-;;;:::i;7699:102::-;;;:::i;1091:97:21:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1091:97:21;-1:-1:-1;;;;;1091:97:21;;:::i;7983:102:1:-;;;:::i;6803:114::-;;;:::i;7243:105:3:-;;;:::i;2263:99:23:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2263:99:23;-1:-1:-1;;;;;2263:99:23;;:::i;6206:343:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6206:343:3;;;;;;;:::i;2003:105:22:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2003:105:22;-1:-1:-1;;;;;2003:105:22;;:::i;9160:83:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9160:83:3;;:::i;7109:108:1:-;;;:::i;3439:293:3:-;3545:7;3554;3563;3572:4;3578:7;3520:6;2632:21;2646:6;2632:13;:21::i;:::-;2624:49;;;;;-1:-1:-1;;;;;2624:49:3;;;;;;;;;;;;-1:-1:-1;;;;;2624:49:3;;;;;;;;;;;;;;;3601:16;;:::i;:::-;3620:5;3626:6;3620:13;;;;;;;;;;;;;;;;;3601:32;;;;;;;;3620:13;;;;;;;;3601:32;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3601:32:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3601:32:3;;-1:-1:-1;3601:32:3;;-1:-1:-1;3601:32:3;-1:-1:-1;3439:293:3;-1:-1:-1;;;;3439:293:3:o;8416:83::-;8472:20;8485:6;8472:12;:20::i;:::-;8416:83;:::o;8791:98::-;8860:22;8874:7;;8860:22;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;8860:13:3;;-1:-1:-1;;;8860:22:3:i;:::-;8791:98;;:::o;2703:1555:1:-;1428:17;;;;1420:50;;;;;-1:-1:-1;;;;;1420:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;1912:19:22;1920:10;1912:7;:19::i;:::-;1904:75;;;;-1:-1:-1;;;;;1904:75:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2868:35:1;;;2860:99;;;;-1:-1:-1;;;;;2860:99:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3008:18;;2990:36;;2969:146;;;;-1:-1:-1;;;;;2969:146:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3154:1;3133:18;;:22;3125:64;;;;;-1:-1:-1;;;;;3125:64:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;3236:10;3199:19;3221:26;;;:14;:26;;;;;3266:11;;;;-1:-1:-1;;;3266:11:1;;;;3265:12;3257:59;;;;-1:-1:-1;;;;;3257:59:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3331:9;3326:801;3350:18;;3346:1;:22;3326:801;;;3389:14;3406:7;;3414:1;3406:10;;;;;;;;;;;;;3389:27;;3430:11;3444:10;;3455:1;3444:13;;;;;;;;;;;;;;;3430:27;;3850:21;3864:6;3850:13;:21::i;:::-;3842:49;;;;;-1:-1:-1;;;;;3842:49:1;;;;;;;;;;;;-1:-1:-1;;;;;3842:49:1;;;;;;;;;;;;;;;3913:22;3928:6;3913:14;:22::i;:::-;3905:55;;;;;-1:-1:-1;;;;;3905:55:1;;;;;;;;;;;;-1:-1:-1;;;;;3905:55:1;;;;;;;;;;;;;;;3982:19;3995:5;3982:12;:19::i;:::-;3974:45;;;;;-1:-1:-1;;;;;3974:45:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;4034:17;4054:5;4060:6;4054:13;;;;;;;;;;;;;;;;;;4034:33;;4094:21;4109:5;4094:21;;:4;:10;;;:14;;:21;;;;:::i;:::-;4081:10;;;;:34;-1:-1:-1;;3370:3:1;;3326:801;;;-1:-1:-1;4192:4:1;4178:11;;:18;;-1:-1:-1;;;;;;4178:18:1;-1:-1:-1;;;4178:18:1;;;;;4222:8;;4211:40;;;-1:-1:-1;;;;;4232:18:1;;;4211:40;;;4222:8;;4211:40;;;;;;;;;;1989:1:22;2703:1555:1;;;;:::o;1103:19:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1103:19:3;;-1:-1:-1;;;;;1103:19:3;;;;;;;;;;:::o;2144:113:23:-;2203:4;2226:24;:11;2242:7;2226:24;:15;:24;:::i;:::-;2219:31;;2144:113;;;;:::o;2240:73:22:-;2282:24;2295:10;2282:12;:24::i;:::-;2240:73::o;4172:332:3:-;4240:7;;;;;-1:-1:-1;;;;;4300:25:3;;4292:58;;;;;-1:-1:-1;;;;;4292:58:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;4360:16;;:::i;:::-;-1:-1:-1;;;;;;;;;4379:26:3;;;:13;:26;;;;;;;;;;;;4360:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4360:45:3;-1:-1:-1;4360:45:3;4172:332::o;8042:101::-;8119:17;;;;;;;;8042:101::o;2368:81:23:-;2414:28;2431:10;2414:16;:28::i;7408:108:1:-;2513:17:3;;;;;;;2512:18;2504:49;;;;;-1:-1:-1;;;;;2504:49:3;;;;;;;;;;;;-1:-1:-1;;;;;2504:49:3;;;;;;;;;;;;;;;2041:23:23;2053:10;2041:11;:23::i;:::-;2033:87;;;;-1:-1:-1;;;;;2033:87:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7486:23:1;:21;:23::i;6283:145::-;6376:10;:13;6391:11;:14;6407:10;:13;6283:145;;;:::o;4887:1108:3:-;2163:19;;5031:7;;2163:19;;2155:54;;;;;-1:-1:-1;;;;;2155:54:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;5062:8;5071:1;5062:11;;;-1:-1:-1;;;;;;5062:16:3;5054:54;;;;;-1:-1:-1;;;;;5054:54:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5126:25:3;;5118:65;;;;;-1:-1:-1;;;;;5118:65:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5201:26:3;;;5251:1;5201:26;;;;;;;;;;:38;;;;:52;5193:88;;;;;-1:-1:-1;;;;;5193:88:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;5308:5;:12;5688:16;;:::i;:::-;-1:-1:-1;5707:58:3;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5707:58:3;;;;;;;;;;;;;;;5757:4;5707:58;;;;;;-1:-1:-1;5707:58:3;;;;;;27:10:-1;;23:18;;;45:23;;5775:16:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5775:16:3;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5775:16:3;;;;;;;;;;;;;;;;;;;;5830:13;;5707:58;;5757:4;5707:58;;5830:13;;;;;;;;;;;;;;-1:-1:-1;;;;;5801:26:3;;;;;;;;;;;;;5830:13;;;;;;;5801:42;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5801:42:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5801:42:3;;;;;;;;;;;;;;;;;;;5874:18;;:25;;;:22;:25;:::i;:::-;5853:18;:46;5914:51;;;;;;5960:4;5914:51;;;;;;-1:-1:-1;;;;;5914:51:3;;;5929:6;;5914:51;;;;;;;;;;;-1:-1:-1;5982:6:3;4887:1108;-1:-1:-1;;;;4887:1108:3:o;6559:114:1:-;2163:19:3;;;;2155:54;;;;;-1:-1:-1;;;;;2155:54:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;2041:23:23;2053:10;2041:11;:23::i;:::-;2033:87;;;;-1:-1:-1;;;;;2033:87:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6640:26:1;:24;:26::i;4426:1656::-;2284:19:3;;;;2283:20;2275:53;;;;;-1:-1:-1;;;;;2275:53:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;2513:17;;;;;;;2512:18;2504:49;;;;;-1:-1:-1;;;;;2504:49:3;;;;;;;;;;;;-1:-1:-1;;;;;2504:49:3;;;;;;;;;;;;;;;1543:17:1;;;;1542:18;1534:49;;;;;-1:-1:-1;;;;;1534:49:1;;;;;;;;;;;;-1:-1:-1;;;;;1534:49:1;;;;;;;;;;;;;;;2041:23:23;2053:10;2041:11;:23::i;:::-;2033:87;;;;-1:-1:-1;;;;;2033:87:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1765:13:1;;;;1764:14;1756:49;;;;;-1:-1:-1;;;;;1756:49:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;4643:1;4622:18;;:22;4614:54;;;;;-1:-1:-1;;;;;4614:54:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;4678:19;;:::i;:::-;4707:20;;:::i;:::-;4737:21;;:::i;:::-;4768:20;;:::i;:::-;4804:9;4799:881;4823:5;:12;4819:16;;4799:881;;;4866:5;4872:1;4866:8;;;;;;;;;;;;;;;;;4856:18;;;;;;;;4866:8;;;;;;;4856:18;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4856:18:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4856:18:1;4892:51;;;4929:8;:14;;;4913:7;:13;;;:30;4892:51;4888:213;;;5078:8;;4888:213;5301:8;:14;;;5285:7;:13;;;:30;5281:389;;;5422:7;;5385:8;5346:9;-1:-1:-1;5281:389:1;;;5470:9;:15;;;5454:7;:13;;;:31;5450:220;;;5555:7;;5516:9;-1:-1:-1;5450:220:1;;;5603:8;:14;;;5587:7;:13;;;:30;5583:87;;;5648:7;5637:18;;5583:87;4837:3;;4799:881;;;-1:-1:-1;5690:21:1;;:10;:21;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5690:21:1;;;-1:-1:-1;;;;;5690:21:1;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5690:21:1;;;;;;;;;;;;;;;;;;;;;5721:23;;:11;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5754:21;;:10;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5785:13;:20;;;;;-1:-1:-1;5785:20:1;;;;;;5820:74;;;;;5850:22;;;;5820:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5924:11;:14;5940:23;;5965:17;;5909:77;;;;;;-1:-1:-1;;;;;5940:23:1;;;5909:77;;;;;;;;5940:23;5909:77;;;;;;;;;;;;;;6016:10;:13;6031:22;;6055:16;;;6001:74;;;;;;-1:-1:-1;;;;;6031:22:1;;;6001:74;;;;;;;;;;;6073:1;6001:74;;;;;;;;;;;;;;1815:1;;;;4426:1656::o;994:91:21:-;2041:23:23;2053:10;2041:11;:23::i;:::-;2033:87;;;;-1:-1:-1;;;;;2033:87:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1060:18:21;1070:7;1060:9;:18::i;8220:101:1:-;8297:17;;;;8220:101;:::o;7699:102::-;1428:17;;;;1420:50;;;;;-1:-1:-1;;;;;1420:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;2041:23:23;2053:10;2041:11;:23::i;:::-;2033:87;;;;-1:-1:-1;;;;;2033:87:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7776:18:1;:16;:18::i;1091:97:21:-;2041:23:23;2053:10;2041:11;:23::i;:::-;2033:87;;;;-1:-1:-1;;;;;2033:87:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1160:21:21;1173:7;1160:12;:21::i;7983:102:1:-;1543:17;;;;1542:18;1534:49;;;;;-1:-1:-1;;;;;1534:49:1;;;;;;;;;;;;-1:-1:-1;;;;;1534:49:1;;;;;;;;;;;;;;;2041:23:23;2053:10;2041:11;:23::i;:::-;2033:87;;;;-1:-1:-1;;;;;2033:87:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8061:17:1;:15;:17::i;6803:114::-;2284:19:3;;;;2283:20;2275:53;;;;;-1:-1:-1;;;;;2275:53:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;2041:23:23;2053:10;2041:11;:23::i;:::-;2033:87;;;;-1:-1:-1;;;;;2033:87:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6885:25:1;:23;:25::i;7243:105:3:-;7322:19;;;;7243:105;:::o;2263:99:23:-;2041:23;2053:10;2041:11;:23::i;:::-;2033:87;;;;-1:-1:-1;;;;;2033:87:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2333:22;2347:7;2333:13;:22::i;6206:343:3:-;6309:6;2632:21;2646:6;2632:13;:21::i;:::-;2624:49;;;;;-1:-1:-1;;;;;2624:49:3;;;;;;;;;;;;-1:-1:-1;;;;;2624:49:3;;;;;;;;;;;;;;;6340:6;2755:22;2770:6;2755:14;:22::i;:::-;2747:55;;;;;-1:-1:-1;;;;;2747:55:3;;;;;;;;;;;;-1:-1:-1;;;;;2747:55:3;;;;;;;;;;;;;;;2398:17;;;;;;;2390:50;;;;;-1:-1:-1;;;;;2390:50:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;6387:17;6407:5;6413:6;6407:13;;;;;;;;;;;;;;;;;6430:17;6407:13;;;;;6430:17;;;:32;;;6506:16;;;;6497:7;;6477:65;;;;;;;;6407:13;;-1:-1:-1;;;;;;6506:16:3;;;;6497:7;;6477:65;;;;;;;;;;2450:1;2683;6206:343;;;:::o;2003:105:22:-;2058:4;2081:20;:7;2093;2081:20;:11;:20;:::i;9160:83:3:-;9216:20;9229:6;9216:12;:20::i;7109:108:1:-;2398:17:3;;;;;;;2390:50;;;;;-1:-1:-1;;;;;2390:50:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;2041:23:23;2053:10;2041:11;:23::i;:::-;2033:87;;;;-1:-1:-1;;;;;2033:87:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7186:24:1;:22;:24::i;10868:115:3:-;10963:5;:12;-1:-1:-1;10954:21:3;10868:115::o;9973:300::-;10032:6;2632:21;2646:6;2632:13;:21::i;:::-;2624:49;;;;;-1:-1:-1;;;;;2624:49:3;;;;;;;;;;;;-1:-1:-1;;;;;2624:49:3;;;;;;;;;;;;;;;10055:6;2885:22;2900:6;2885:14;:22::i;:::-;2884:23;2876:57;;;;;-1:-1:-1;;;;;2876:57:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;10073:17;10093:5;10099:6;10093:13;;;;;;;;;;;;;;;;10116;10093;;;;;10116;;;:20;;-1:-1:-1;;10116:20:3;10132:4;10116:20;;;;;;10167:18;;10093:13;;-1:-1:-1;10167:25:3;;:18;:25;:22;:25;:::i;:::-;10146:18;:46;;;10234:16;;;10225:7;;10252:13;;;;10207:59;;;10252:13;;;;10207:59;;;;;-1:-1:-1;;;;;10234:16:3;;;;10207:59;;;;;;;;;2943:1;2683;9973:300;;:::o;10315:168::-;10388:9;10383:94;10407:7;:14;10403:1;:18;10383:94;;;10442:24;10455:7;10463:1;10455:10;;;;;;;;;;;;;;10442:12;:24::i;:::-;10423:3;;10383:94;;11025:223;11088:4;11109:21;11123:6;11109:13;:21::i;:::-;11104:65;;-1:-1:-1;11153:5:3;11146:12;;11104:65;11179:16;;:::i;:::-;11198:5;11204:6;11198:13;;;;;;;;;;;;;;;;;11179:32;;;;;;;;11198:13;;;;;;;11179:32;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11179:32:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11025:223:3;;;:::o;9846:115:1:-;9951:2;9942:11;;;;;;;9846:115::o;834:176:26:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;;;938:46:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:26:o;779:200:25:-;851:4;-1:-1:-1;;;;;875:21:25;;867:68;;;;-1:-1:-1;;;;;867:68:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:25;:11;:20;;;;;;;;;;;;;;;779:200::o;9430:234:1:-;9488:27;9507:7;9488:18;:27::i;:::-;-1:-1:-1;;;;;9547:23:1;9525:19;9547:23;;;:14;:23;;;;;9580:12;;:20;;-1:-1:-1;;9580:20:1;;;9430:234::o;1837:205:21:-;1899:31;1922:7;1899:22;:31::i;:::-;-1:-1:-1;;;;;1940:25:21;;1968:5;1940:25;;;:16;:25;;;;;:33;;-1:-1:-1;;1940:33:21;;;2007:21;;:28;;1940:33;2007:28;:25;:28;:::i;:::-;1983:21;:52;-1:-1:-1;1837:205:21:o;9797:134:3:-;9843:17;:24;;-1:-1:-1;;9843:24:3;;;;;;;;;9882:42;;;9906:17;;;;9843:24;9906:17;9882:42;;;;;;;;;;;;;;;9797:134::o;9285:144::-;9334:19;:27;;-1:-1:-1;;9334:27:3;;;9376:46;;;9356:5;9376:46;;;;;;;;;;;;;9285:144::o;8839:472:1:-;9042:24;9058:7;9042:15;:24::i;:::-;9092:10;:17;9119:18;;:::i;:::-;9140:34;;;;;;;;9146:5;9140:34;;;;9153:7;-1:-1:-1;;;;;9140:34:1;;;;;9162:4;9140:34;;;;;;9168:5;9140:34;;;;;9119:55;;9184:10;9200:5;9184:22;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;9184:22:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9184:22:1;;;;;-1:-1:-1;;;;;9184:22:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9242:5;9216:14;:23;9231:7;-1:-1:-1;;;;;9216:23:1;-1:-1:-1;;;;;9216:23:1;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9216:31:1;;;;;-1:-1:-1;;;;;9216:31:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8839:472;;;:::o;8386:136::-;8433:17;:25;;-1:-1:-1;;8433:25:1;;;8473:42;;;8453:5;8473:42;;;;;;;;;;;;;8386:136::o;8586:134::-;8632:17;:24;;-1:-1:-1;;8632:24:1;8652:4;8632:24;;;;;8671:42;;;8632:24;8695:17;;;;8671:42;;;;;;;;;;;;;;8586:134::o;9471:142:3:-;9519:19;:26;;-1:-1:-1;;9519:26:3;9541:4;9519:26;;;;;9560:46;;;9519:26;9586:19;;;;9560:46;;;;;;;;;;;;;;9471:142::o;1599:232:21:-;1658:28;1678:7;1658:19;:28::i;:::-;1696:10;27::-1;;39:1;23:18;;;45:23;;;1696:24:21;;;;-1:-1:-1;;;;;;1696:24:21;-1:-1:-1;;;;;1696:24:21;;;;;;;;-1:-1:-1;1730:25:21;;;:16;1696:24;1730:25;;;;:32;;-1:-1:-1;;1730:32:21;;;;;1796:21;;:28;;:25;:28::i;10525:301:3:-;10584:6;2632:21;2646:6;2632:13;:21::i;:::-;2624:49;;;;;-1:-1:-1;;;;;2624:49:3;;;;;;;;;;;;-1:-1:-1;;;;;2624:49:3;;;;;;;;;;;;;;;10607:6;2755:22;2770:6;2755:14;:22::i;:::-;2747:55;;;;;-1:-1:-1;;;;;2747:55:3;;;;;;;;;;;;-1:-1:-1;;;;;2747:55:3;;;;;;;;;;;;;;;10625:17;10645:5;10651:6;10645:13;;;;;;;;;;;;;;;;;;;;;10668;;;:21;;-1:-1:-1;;10668:21:3;;;10720:18;;10645:13;;-1:-1:-1;10720:25:3;;-1:-1:-1;10720:22:3;:25::i;9619:136::-;9666:17;:25;;-1:-1:-1;;9666:25:3;;;;;9706:42;;;9666:25;9730:17;;;9666:25;9730:17;9706:42;;;;;;;;;;;;;;9619:136::o;1408:185:21:-;1466:27;1485:7;1466:18;:27::i;:::-;-1:-1:-1;;;;;1503:21:21;;1527:5;1503:21;;;:12;:21;;;;;:29;;-1:-1:-1;;1503:29:21;;;1562:17;;:24;;1503:29;1562:24;:21;:24;:::i;:::-;1542:17;:44;-1:-1:-1;1408:185:21:o;2589:136:23:-;2651:27;:11;2670:7;2651:27;:18;:27;:::i;:::-;2693:25;;-1:-1:-1;;;;;2693:25:23;;;;;;;;2589:136;:::o;1274:179:26:-;1332:7;1364:1;1359;:6;;1351:49;;;;;-1:-1:-1;;;;;1351:49:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1422:5:26;;;1274:179::o;1194:208:21:-;1249:24;1265:7;1249:15;:24::i;:::-;1283:6;27:10:-1;;39:1;23:18;;;45:23;;;1283:20:21;;;;-1:-1:-1;;;;;;1283:20:21;-1:-1:-1;;;;;1283:20:21;;;;;;;;-1:-1:-1;1313:21:21;;;:12;1283:20;1313:21;;;;:28;;-1:-1:-1;;1313:28:21;;;;;1371:17;;:24;;:21;:24::i;2455:128:23:-;2514:24;:11;2530:7;2514:24;:15;:24;:::i;:::-;2553:23;;-1:-1:-1;;;;;2553:23:23;;;;;;;;2455:128;:::o;2441:124:22:-;2499:23;:7;2514;2499:23;:14;:23;:::i;:::-;2537:21;;-1:-1:-1;;;;;2537:21:22;;;;;;;;2441:124;:::o;510:180:25:-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;-1:-1:-1;;;;;581:64:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;655:20:25;678:5;655:20;;;;;;;;;;;:28;;-1:-1:-1;;655:28:25;;;510:180::o;2319:116:22:-;2374:20;:7;2386;2374:20;:11;:20;:::i;:::-;2409:19;;-1:-1:-1;;;;;2409:19:22;;;;;;;;2319:116;:::o;260:175:25:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;;;328:63:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:25;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:25;424:4;401:27;;;260:175::o;71:129:10:-;;;;;;;;;-1:-1:-1;71:129:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;71:129:10;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"../core/ContestBracketRegistry.sol\";\n\ncontract ContestBracketRegistryMock is ContestBracketRegistry {\n    constructor() public ContestBracketRegistry(msg.sender) {}\n\n}\n",
  "sourcePath": "/home/odisi/dev/projects/hackapay/contracts/mocks/ContestBracketRegistryMock.sol",
  "ast": {
    "absolutePath": "/home/odisi/dev/projects/hackapay/contracts/mocks/ContestBracketRegistryMock.sol",
    "exportedSymbols": {
      "ContestBracketRegistryMock": [2550]
    },
    "id": 2551,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2538,
        "literals": ["solidity", "^", "0.5", ".0"],
        "nodeType": "PragmaDirective",
        "src": "0:23:10"
      },
      {
        "absolutePath": "/home/odisi/dev/projects/hackapay/contracts/core/ContestBracketRegistry.sol",
        "file": "../core/ContestBracketRegistry.sol",
        "id": 2539,
        "nodeType": "ImportDirective",
        "scope": 2551,
        "sourceUnit": 649,
        "src": "25:44:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2540,
              "name": "ContestBracketRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 648,
              "src": "110:22:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ContestBracketRegistry_$648",
                "typeString": "contract ContestBracketRegistry"
              }
            },
            "id": 2541,
            "nodeType": "InheritanceSpecifier",
            "src": "110:22:10"
          }
        ],
        "contractDependencies": [648, 1698, 3190, 3282, 3396],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2550,
        "linearizedBaseContracts": [2550, 648, 3190, 3282, 3396, 1698],
        "name": "ContestBracketRegistryMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2548,
              "nodeType": "Block",
              "src": "195:2:10",
              "statements": []
            },
            "documentation": null,
            "id": 2549,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2544,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4225,
                      "src": "183:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 2545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "183:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 2546,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2543,
                  "name": "ContestBracketRegistry",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 648,
                  "src": "160:22:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ContestBracketRegistry_$648_$",
                    "typeString": "type(contract ContestBracketRegistry)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "160:34:10"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2542,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "150:2:10"
            },
            "returnParameters": {
              "id": 2547,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "195:0:10"
            },
            "scope": 2550,
            "src": "139:58:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2551,
        "src": "71:129:10"
      }
    ],
    "src": "0:201:10"
  },
  "legacyAST": {
    "absolutePath": "/home/odisi/dev/projects/hackapay/contracts/mocks/ContestBracketRegistryMock.sol",
    "exportedSymbols": {
      "ContestBracketRegistryMock": [2550]
    },
    "id": 2551,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2538,
        "literals": ["solidity", "^", "0.5", ".0"],
        "nodeType": "PragmaDirective",
        "src": "0:23:10"
      },
      {
        "absolutePath": "/home/odisi/dev/projects/hackapay/contracts/core/ContestBracketRegistry.sol",
        "file": "../core/ContestBracketRegistry.sol",
        "id": 2539,
        "nodeType": "ImportDirective",
        "scope": 2551,
        "sourceUnit": 649,
        "src": "25:44:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2540,
              "name": "ContestBracketRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 648,
              "src": "110:22:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ContestBracketRegistry_$648",
                "typeString": "contract ContestBracketRegistry"
              }
            },
            "id": 2541,
            "nodeType": "InheritanceSpecifier",
            "src": "110:22:10"
          }
        ],
        "contractDependencies": [648, 1698, 3190, 3282, 3396],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2550,
        "linearizedBaseContracts": [2550, 648, 3190, 3282, 3396, 1698],
        "name": "ContestBracketRegistryMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2548,
              "nodeType": "Block",
              "src": "195:2:10",
              "statements": []
            },
            "documentation": null,
            "id": 2549,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2544,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4225,
                      "src": "183:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 2545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "183:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 2546,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2543,
                  "name": "ContestBracketRegistry",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 648,
                  "src": "160:22:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ContestBracketRegistry_$648_$",
                    "typeString": "type(contract ContestBracketRegistry)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "160:34:10"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2542,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "150:2:10"
            },
            "returnParameters": {
              "id": 2547,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "195:0:10"
            },
            "scope": 2550,
            "src": "139:58:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2551,
        "src": "71:129:10"
      }
    ],
    "src": "0:201:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-07-31T21:53:16.832Z",
  "devdoc": {
    "methods": {
      "approveTeam(uint256)": {
        "details": "Should be overwritten on inherited contract to add modifier or require statements for access control.",
        "params": {
          "teamId": "{uint256} the ids of the teams to be approved"
        }
      },
      "closeEvaluation()": {
        "details": "Should be overwritten on inherited contract to add modifier or require statements for access control."
      },
      "closeRegistration()": {
        "details": "Overwritten to add modifier for access control."
      },
      "closeSubmission()": {
        "details": "Should be overwritten on inherited contract to add modifier or require statements for access control."
      },
      "getEvaluationStatus()": {
        "return": "{bool} returns {true} if enabled; otherwise, {false}."
      },
      "getRegistrationStatus()": {
        "return": "{bool} returns {true} if enabled; otherwise, {false}."
      },
      "getSubmissionStatus()": {
        "return": "{bool} returns {true} if enabled; otherwise, {false}."
      },
      "getTeam(uint256)": {
        "params": {
          "teamId": "{uint256} the team's unique identifier returned on registration"
        },
        "return": "{bytes32} team's name{address} team's address{bytes32} team's proposal data{bool} team's status: {true} for approved; {false} for reproved;{uint256} team's grade"
      },
      "getTeamByAddress(address)": {
        "params": {
          "teamAddress": "{address} the team's contract address used on registration"
        },
        "return": "{bytes32} team's name{address} team's address{bytes32} team's proposal data{bool} team's status: {true} for approved; {false} for reproved;{uint256} team's grade"
      },
      "getWinnersIds()": {
        "return": "{uint256} First place's id{uint256} Second place's id{uint256} Third place's id"
      },
      "openEvaluation()": {
        "details": "Should be overwritten on inherited contract to add modifier or require statements for access control."
      },
      "openRegistration()": {
        "details": "Overwritten to add modifier for access control."
      },
      "openSubmission()": {
        "details": "Should be overwritten on inherited contract to add modifier or require statements for access control."
      },
      "publishRank()": {
        "details": "emitts an WinnerAnnounced event for each winner (1st, 2nd, 3rd place)."
      },
      "registerTeam(bytes32,address,bytes32)": {
        "details": "Registration process must be open.",
        "params": {
          "teamName": "{bytes32} team's proposal data; could be a hash for a file  on IPFS or for a github link; not required"
        }
      },
      "reproveTeam(uint256)": {
        "details": "Should be overwritten on inherited contract to add modifier or require statements for access control.",
        "params": {
          "teamId": "{uint256} the ids of the teams to be reproved"
        }
      },
      "reproveTeams(uint256[])": {
        "details": "Should be overwritten on inherited contract to add modifier or require statements for access control.",
        "params": {
          "teamIds": "{uint256[]} an array containing the ids of the teams to be reproved"
        }
      },
      "submitEvaluation(uint256[],uint8[])": {
        "details": "The position of teamId and teamGrade must be the same in the array. For example, if teamId \"1\" is sent at {teamIds} array position \"5\" (zero-based), the grade for team \"1\" must be sent at position \"5\" in {teamGrades} array.",
        "params": {
          "teamGrades": "Array of the grades given by the judge for each team.",
          "teamIds": "Array of the ids associated with each team that is going to be evaluated."
        }
      },
      "updateProposalData(uint256,bytes32)": {
        "params": {
          "proposalData": "the updated data for the team's proposal",
          "teamId": "team's unique identifier; required"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "approveTeam(uint256)": {
        "notice": "(re)approves a team in participating in the contest"
      },
      "closeEvaluation()": {
        "notice": "Closes the evaluation process"
      },
      "closeRegistration()": {
        "notice": "Closes the registration process"
      },
      "closeSubmission()": {
        "notice": "Closes the proposal submission process"
      },
      "getEvaluationStatus()": {
        "notice": "Gets the evaluation status"
      },
      "getRegistrationStatus()": {
        "notice": "Gets the registration status"
      },
      "getSubmissionStatus()": {
        "notice": "Gets the submission status"
      },
      "getTeam(uint256)": {
        "notice": "Returns the stored information of a team"
      },
      "getTeamByAddress(address)": {
        "notice": "Returns the stored information of a team, based on a provided address"
      },
      "getWinnersIds()": {
        "notice": "Gets the id of the winner teams."
      },
      "openEvaluation()": {
        "notice": "Opens the evaluation process"
      },
      "openRegistration()": {
        "notice": "Opens the registration process"
      },
      "openSubmission()": {
        "notice": "Opens the proposal submission process"
      },
      "publishRank()": {
        "notice": "Published the ranking results of the contest."
      },
      "registerTeam(bytes32,address,bytes32)": {
        "notice": "Registers a new team in the contest registry."
      },
      "reproveTeam(uint256)": {
        "notice": "reproves a team from participating in the contest"
      },
      "reproveTeams(uint256[])": {
        "notice": "reprove teams from participating in the contest"
      },
      "submitEvaluation(uint256[],uint8[])": {
        "notice": "Allows a judge to submit its evaluation for the teams competing in the contest. The evaluation for all teams must be submitted once."
      },
      "updateProposalData(uint256,bytes32)": {
        "notice": "Updates the proposal data for a specific team."
      }
    }
  }
}
