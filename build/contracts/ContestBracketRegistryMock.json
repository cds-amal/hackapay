{
  "contractName": "ContestBracketRegistryMock",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "EvaluationStatusUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "JudgeAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "JudgeRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "judgeAddress",
          "type": "address"
        }
      ],
      "name": "JudgeVoted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OrganizerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OrganizerRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "RegistrationStatusUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "SubmissionStatusUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "teamId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "teamAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "proposalData",
          "type": "bytes32"
        }
      ],
      "name": "TeamProposalUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "teamId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "teamName",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "teamAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "TeamRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "teamId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "teamAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "TeamStatusUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "teamId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "teamAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "finalGrade",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "rankPosition",
          "type": "uint8"
        }
      ],
      "name": "WinnerAnnouced",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addJudge",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addOrganizer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "teamId",
          "type": "uint256"
        }
      ],
      "name": "approveTeam",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "closeEvaluation",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "closeRegistration",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "closeSubmission",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getEvaluationStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getRegistrationStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSubmissionStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "teamId",
          "type": "uint256"
        }
      ],
      "name": "getTeam",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "teamAddress",
          "type": "address"
        }
      ],
      "name": "getTeamByAddress",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getWinnersIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isJudge",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isOrganizer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "openEvaluation",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "openRegistration",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "openSubmission",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "publishRank",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "teamName",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "teamAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "proposalData",
          "type": "bytes32"
        }
      ],
      "name": "registerTeam",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeJudge",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceJudge",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOrganizer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "teamId",
          "type": "uint256"
        }
      ],
      "name": "reproveTeam",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "teamIds",
          "type": "uint256[]"
        }
      ],
      "name": "reproveTeams",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "teamIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint8[]",
          "name": "teamGrades",
          "type": "uint8[]"
        }
      ],
      "name": "submitEvaluation",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "teams",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "name",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "teamAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "proposalData",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "grade",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "teamId",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "proposalData",
          "type": "bytes32"
        }
      ],
      "name": "updateProposalData",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"EvaluationStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"JudgeAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"JudgeRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"judgeAddress\",\"type\":\"address\"}],\"name\":\"JudgeVoted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OrganizerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OrganizerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"RegistrationStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"SubmissionStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"teamId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"teamAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"proposalData\",\"type\":\"bytes32\"}],\"name\":\"TeamProposalUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"teamId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"teamName\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"teamAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"TeamRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"teamId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"teamAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"TeamStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"teamId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"teamAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"finalGrade\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"rankPosition\",\"type\":\"uint8\"}],\"name\":\"WinnerAnnouced\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addJudge\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addOrganizer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"teamId\",\"type\":\"uint256\"}],\"name\":\"approveTeam\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"closeEvaluation\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"closeRegistration\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"closeSubmission\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getEvaluationStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRegistrationStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSubmissionStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"teamId\",\"type\":\"uint256\"}],\"name\":\"getTeam\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamAddress\",\"type\":\"address\"}],\"name\":\"getTeamByAddress\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getWinnersIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isJudge\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isOrganizer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"openEvaluation\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"openRegistration\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"openSubmission\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"publishRank\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"teamName\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"teamAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"proposalData\",\"type\":\"bytes32\"}],\"name\":\"registerTeam\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeJudge\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceJudge\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOrganizer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"teamId\",\"type\":\"uint256\"}],\"name\":\"reproveTeam\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"teamIds\",\"type\":\"uint256[]\"}],\"name\":\"reproveTeams\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"teamIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint8[]\",\"name\":\"teamGrades\",\"type\":\"uint8[]\"}],\"name\":\"submitEvaluation\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"teams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"teamAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"proposalData\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"grade\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"teamId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"proposalData\",\"type\":\"bytes32\"}],\"name\":\"updateProposalData\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approveTeam(uint256)\":{\"details\":\"Should be overwritten on inherited contract to add modifier or require statements for access control.\",\"params\":{\"teamId\":\"{uint256} the ids of the teams to be approved\"}},\"closeEvaluation()\":{\"details\":\"Should be overwritten on inherited contract to add modifier or require statements for access control.\"},\"closeRegistration()\":{\"details\":\"Overwritten to add modifier for access control.\"},\"closeSubmission()\":{\"details\":\"Should be overwritten on inherited contract to add modifier or require statements for access control.\"},\"getEvaluationStatus()\":{\"return\":\"{bool} returns {true} if enabled; otherwise, {false}.\"},\"getRegistrationStatus()\":{\"return\":\"{bool} returns {true} if enabled; otherwise, {false}.\"},\"getSubmissionStatus()\":{\"return\":\"{bool} returns {true} if enabled; otherwise, {false}.\"},\"getTeam(uint256)\":{\"params\":{\"teamId\":\"{uint256} the team's unique identifier returned on registration\"},\"return\":\"{bytes32} team's name{address} team's address{bytes32} team's proposal data{bool} team's status: {true} for approved; {false} for reproved;{uint256} team's grade\"},\"getTeamByAddress(address)\":{\"params\":{\"teamAddress\":\"{address} the team's contract address used on registration\"},\"return\":\"{bytes32} team's name{address} team's address{bytes32} team's proposal data{bool} team's status: {true} for approved; {false} for reproved;{uint256} team's grade\"},\"getWinnersIds()\":{\"return\":\"{uint256} First place's id{uint256} Second place's id{uint256} Third place's id\"},\"openEvaluation()\":{\"details\":\"Should be overwritten on inherited contract to add modifier or require statements for access control.\"},\"openRegistration()\":{\"details\":\"Overwritten to add modifier for access control.\"},\"openSubmission()\":{\"details\":\"Should be overwritten on inherited contract to add modifier or require statements for access control.\"},\"publishRank()\":{\"details\":\"emitts an WinnerAnnounced event for each winner (1st, 2nd, 3rd place).\"},\"registerTeam(bytes32,address,bytes32)\":{\"details\":\"Registration process must be open.\",\"params\":{\"teamName\":\"{bytes32} team's proposal data; could be a hash for a file  on IPFS or for a github link; not required\"}},\"reproveTeam(uint256)\":{\"details\":\"Should be overwritten on inherited contract to add modifier or require statements for access control.\",\"params\":{\"teamId\":\"{uint256} the ids of the teams to be reproved\"}},\"reproveTeams(uint256[])\":{\"details\":\"Should be overwritten on inherited contract to add modifier or require statements for access control.\",\"params\":{\"teamIds\":\"{uint256[]} an array containing the ids of the teams to be reproved\"}},\"submitEvaluation(uint256[],uint8[])\":{\"details\":\"The position of teamId and teamGrade must be the same in the array. For example, if teamId \\\"1\\\" is sent at {teamIds} array position \\\"5\\\" (zero-based), the grade for team \\\"1\\\" must be sent at position \\\"5\\\" in {teamGrades} array.\",\"params\":{\"teamGrades\":\"Array of the grades given by the judge for each team.\",\"teamIds\":\"Array of the ids associated with each team that is going to be evaluated.\"}},\"updateProposalData(uint256,bytes32)\":{\"params\":{\"proposalData\":\"the updated data for the team's proposal\",\"teamId\":\"team's unique identifier; required\"}}}},\"userdoc\":{\"methods\":{\"approveTeam(uint256)\":{\"notice\":\"(re)approves a team in participating in the contest\"},\"closeEvaluation()\":{\"notice\":\"Closes the evaluation process\"},\"closeRegistration()\":{\"notice\":\"Closes the registration process\"},\"closeSubmission()\":{\"notice\":\"Closes the proposal submission process\"},\"getEvaluationStatus()\":{\"notice\":\"Gets the evaluation status\"},\"getRegistrationStatus()\":{\"notice\":\"Gets the registration status\"},\"getSubmissionStatus()\":{\"notice\":\"Gets the submission status\"},\"getTeam(uint256)\":{\"notice\":\"Returns the stored information of a team\"},\"getTeamByAddress(address)\":{\"notice\":\"Returns the stored information of a team, based on a provided address\"},\"getWinnersIds()\":{\"notice\":\"Gets the id of the winner teams.\"},\"openEvaluation()\":{\"notice\":\"Opens the evaluation process\"},\"openRegistration()\":{\"notice\":\"Opens the registration process\"},\"openSubmission()\":{\"notice\":\"Opens the proposal submission process\"},\"publishRank()\":{\"notice\":\"Published the ranking results of the contest.\"},\"registerTeam(bytes32,address,bytes32)\":{\"notice\":\"Registers a new team in the contest registry.\"},\"reproveTeam(uint256)\":{\"notice\":\"reproves a team from participating in the contest\"},\"reproveTeams(uint256[])\":{\"notice\":\"reprove teams from participating in the contest\"},\"submitEvaluation(uint256[],uint8[])\":{\"notice\":\"Allows a judge to submit its evaluation for the teams competing in the contest. The evaluation for all teams must be submitted once.\"},\"updateProposalData(uint256,bytes32)\":{\"notice\":\"Updates the proposal data for a specific team.\"}}}},\"settings\":{\"compilationTarget\":{\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/mocks/ContestBracketRegistryMock.sol\":\"ContestBracketRegistryMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/core/ContestBracketRegistry.sol\":{\"keccak256\":\"0xc8450bc1076dacac2d10aab8da5c2e3ea83235125ff3bb0d7d85ba1fce06fc70\",\"urls\":[\"bzz-raw://017e7e4a6d1831b43674b1864c9d3794a70301138a86df0f169aed26d054146a\",\"dweb:/ipfs/QmNyQQbFP8pfhsdfGToUFiU64ZaMu6EVXJxFSm7a1bFBDK\"]},\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/core/ContestTeamRegistry.sol\":{\"keccak256\":\"0x929a4e4554b4deab62594780d69c155d584267d672925c61484c2ef97a8fcfcc\",\"urls\":[\"bzz-raw://ef42fa5114cff493fb66993d08af2a80c83cf84bcab87ee3345be47d44c97cc3\",\"dweb:/ipfs/QmV42qJhjNzRC147QKp2TB3PBBezrbowf88xzJPSfUhhwP\"]},\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/mocks/ContestBracketRegistryMock.sol\":{\"keccak256\":\"0xd6912d464172c6438cb4abbf94cebedeeaa1ef7fb90186a9b3cad74eb33099b4\",\"urls\":[\"bzz-raw://7fe26a6ed35063936fbf2c55903ea54db75cc19f479a80a3978a444bcc55673c\",\"dweb:/ipfs/QmZEqsSNzDtmoc1AT7bywiPR4sSFpwmP7YhJPza2dZ6BKR\"]},\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/roles/ContestRoleManager.sol\":{\"keccak256\":\"0xf225bc8f065bb46b32c2c0a2724d97e83d69222872ade01a38edab9d1953bbae\",\"urls\":[\"bzz-raw://143acbd0fe4f9414b60e900f1ecb9842a8717b7afd314ee54609f941332f6d0f\",\"dweb:/ipfs/QmWoonP4jNKQJvr3kmCXg6xbLyy7gKEiJCGYPTJSHNp2Hf\"]},\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/roles/JudgeRole.sol\":{\"keccak256\":\"0xac32e0f91deca1fe40318893cefd7898e1265eb9b117766bc36f1063bf3a757b\",\"urls\":[\"bzz-raw://8ebae6d234d64881c66f4a93e53b44378183c5f161f4d60792162fca53f77756\",\"dweb:/ipfs/QmdJ9Ner6KvV5GAQvnaaumf3bTHnze7oxWeP2RoYuq6kAW\"]},\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/roles/OrganizerRole.sol\":{\"keccak256\":\"0xe071f4139bf8d52b896e8cab889b23fb7974a0f46985ddbe6e92e5de9d971a4b\",\"urls\":[\"bzz-raw://2fb33bd382d1ce6b08d4fe32b435ed346822a32348ca102bc9fda25d08aec083\",\"dweb:/ipfs/QmRkxXmvGNYcEdkUKTTcN5GNh5VqpFT8WubwX76CFcER3i\"]},\"@openzeppelin/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b503380808062000068576040805162461bcd60e51b815260206004820152601460248201527f496e76616c6964207a65726f2061646472657373000000000000000000000000604482015290519081900360640190fd5b6200007c816001600160e01b036200008516565b505050620002c9565b6200009b816200011f60201b620023e81760201c565b6009805460018082019092557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b0319166001600160a01b0384169081179091556000908152600b60209081526040909120805460ff191683179055600a546200011992909162000171811b62001cd517901c565b600a5550565b6200013a816004620001d360201b620025be1790919060201c565b6040516001600160a01b038216907f37e96fc6762bae414e69ea6e2490e63bc46f2a1335de0f6b91f49cf808829bcf90600090a250565b600082820183811015620001cc576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b620001e882826001600160e01b036200026016565b156200023b576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b038216620002a95760405162461bcd60e51b815260040180806020018281038252602281526020018062002ade6022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b61280580620002d96000396000f3fe608060405234801561001057600080fd5b50600436106101a85760003560e01c80637dc673bc116100f9578063d06e4ee711610097578063eaf2f9cd11610071578063eaf2f9cd1461053e578063ed896d6614610561578063f540548b14610587578063ffc6ff1e146105a4576101a8565b8063d06e4ee714610508578063e35fb24114610510578063e4725f0214610518576101a8565b8063a2bce8bd116100d3578063a2bce8bd146104ca578063ae237c77146104d2578063ae2ac4ae146104da578063b2a13f9214610500576101a8565b80637dc673bc1461049457806390d768e41461049c578063927cab47146104a4576101a8565b80634b30b66f11610166578063567ad86211610140578063567ad8621461041a57806358e2f50e14610422578063737a63401461042a5780637385712c14610450576101a8565b80634b30b66f146103e45780634ea701a8146103ec57806354e1db2b14610412576101a8565b80628e0f1b146101ad57806324ba9fab146101ff578063288c4a461461021e5780633e091f641461028e5780633ed2b77a1461035057806341676f15146103aa575b600080fd5b6101ca600480360360208110156101c357600080fd5b50356105ac565b604080519586526001600160a01b03909416602086015284840192909252151560608401526080830152519081900360a00190f35b61021c6004803603602081101561021557600080fd5b5035610696565b005b61021c6004803603602081101561023457600080fd5b81019060208101813564010000000081111561024f57600080fd5b82018360208201111561026157600080fd5b8035906020019184602083028401116401000000008311171561028357600080fd5b5090925090506106a2565b61021c600480360360408110156102a457600080fd5b8101906020810181356401000000008111156102bf57600080fd5b8201836020820111156102d157600080fd5b803590602001918460208302840111640100000000831117156102f357600080fd5b91939092909160208101903564010000000081111561031157600080fd5b82018360208201111561032357600080fd5b8035906020019184602083028401116401000000008311171561034557600080fd5b5090925090506106e2565b61036d6004803603602081101561036657600080fd5b5035610a71565b6040805196875260208701959095526001600160a01b039093168585015260608501919091521515608084015260a0830152519081900360c00190f35b6103d0600480360360208110156103c057600080fd5b50356001600160a01b0316610ac4565b604080519115158252519081900360200190f35b61021c610adf565b6101ca6004803603602081101561040257600080fd5b50356001600160a01b0316610aea565b6103d0610bc5565b61021c610bd3565b61021c610bdc565b610432610c7a565b60408051938452602084019290925282820152519081900360600190f35b6104826004803603606081101561046657600080fd5b508035906001600160a01b036020820135169060400135610c88565b60408051918252519081900360200190f35b61021c611066565b61021c611102565b61021c600480360360208110156104ba57600080fd5b50356001600160a01b03166115c8565b6103d0611615565b61021c61161e565b61021c600480360360208110156104f057600080fd5b50356001600160a01b03166116b8565b61021c611705565b61021c61179e565b6103d0611839565b61021c6004803603602081101561052e57600080fd5b50356001600160a01b0316611842565b61021c6004803603604081101561055457600080fd5b508035906020013561188f565b6103d06004803603602081101561057757600080fd5b50356001600160a01b03166119fb565b61021c6004803603602081101561059d57600080fd5b5035611a0e565b61021c611a17565b6000806000806000856105be81611ab6565b610601576040805162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d19585b481a59608a1b604482015290519081900360640190fd5b61060961263f565b6001888154811061061657fe5b60009182526020918290206040805160c08101825260069390930290910180548352600181015493830184905260028101546001600160a01b0316918301829052600381015460608401819052600482015460ff1615156080850181905260059092015460a0909401849052939c919b5092995091975095509350505050565b61069f81611abd565b50565b6106de828280806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611bff92505050565b5050565b600e5460ff16610730576040805162461bcd60e51b8152602060048201526014602482015273115d985b1d585d1a5bdb881a5cc818db1bdcd95960621b604482015290519081900360640190fd5b610739336119fb565b6107745760405162461bcd60e51b815260040180806020018281038252602b8152602001806126be602b913960400191505060405180910390fd5b8281146107b25760405162461bcd60e51b815260040180806020018281038252603381526020018061277c6033913960400191505060405180910390fd5b60025483146107f25760405162461bcd60e51b815260040180806020018281038252603f81526020018061273d603f913960400191505060405180910390fd5b600060025411610849576040805162461bcd60e51b815260206004820152601d60248201527f4e6f20617070726f766564207465616d7320746f206576616c75617465000000604482015290519081900360640190fd5b336000908152600d602052604090206001810154600160a81b900460ff16156108a35760405162461bcd60e51b815260040180806020018281038252602281526020018061269c6022913960400191505060405180910390fd5b60005b600254811015610a115760008686838181106108be57fe5b90506020020135905060008585848181106108d557fe5b9050602002013560ff1690506108ea82611ab6565b61092d576040805162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d19585b481a59608a1b604482015290519081900360640190fd5b61093682611c2f565b61097e576040805162461bcd60e51b81526020600482015260146024820152731519585b481a5cc81b9bdd08185c1c1c9bdd995960621b604482015290519081900360640190fd5b61098781611cc9565b6109c8576040805162461bcd60e51b815260206004820152600d60248201526c496e76616c696420677261646560981b604482015290519081900360640190fd5b6000600183815481106109d757fe5b90600052602060002090600602019050610a018260ff168260050154611cd590919063ffffffff16565b60059091015550506001016108a6565b5060018101805460ff60a81b1916600160a81b17908190558154604080516001600160a01b0390931683525190917fd62869bbd78965284c34750092d78b62093e2d02b730d0ce696ebdcb371bb5dc919081900360200190a25050505050565b60018181548110610a7e57fe5b600091825260209091206006909102018054600182015460028301546003840154600485015460059095015493955091936001600160a01b039091169260ff9091169086565b6000610ad760048363ffffffff611d3616565b90505b919050565b610ae833611d9d565b565b6000808080806001600160a01b038616610b42576040805162461bcd60e51b8152602060048201526014602482015273496e76616c6964207a65726f206164647265737360601b604482015290519081900360640190fd5b610b4a61263f565b505050506001600160a01b0392831660009081526020818152604091829020825160c0810184528154815260018201549281018390526002820154909616928601839052600381015460608701819052600482015460ff1615156080880181905260059092015460a090970187905291969295919450925090565b600354610100900460ff1690565b610ae833611dcd565b600354610100900460ff1615610c2e576040805162461bcd60e51b815260206004820152601260248201527129bab136b4b9b9b4b7b71034b99037b832b760711b604482015290519081900360640190fd5b610c3733610ac4565b610c725760405162461bcd60e51b81526004018080602001828103825260338152602001806126e96033913960400191505060405180910390fd5b610ae8611e10565b600f54601554601b54909192565b60035460009060ff16610cdb576040805162461bcd60e51b8152602060048201526016602482015275149959da5cdd1c985d1a5bdb881a5cc818db1bdcd95960521b604482015290519081900360640190fd5b8360001a60f81b6001600160f81b031916610d3d576040805162461bcd60e51b815260206004820152601960248201527f5465616d206e616d652063616e6e6f7420626520656d70747900000000000000604482015290519081900360640190fd5b6001600160a01b038316610d98576040805162461bcd60e51b815260206004820152601b60248201527f5465616d20616464726573732063616e6e6f74206265207a65726f0000000000604482015290519081900360640190fd5b6001600160a01b038381166000908152602081905260409020600201541615610e08576040805162461bcd60e51b815260206004820152601760248201527f5465616d20616c72656164792072656769737465726564000000000000000000604482015290519081900360640190fd5b600154610e1361263f565b506040805160c081018252828152602081018781526001600160a01b0387811693830193845260608301878152600160808501818152600060a08701818152835480850185559184905287517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf660069093029283015595517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf782015596517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf8880180546001600160a01b031916919095161790935590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf986015590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfa8501805460ff191691151591909117905590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfb90930192909255815490919083908110610f7b57fe5b600091825260208083206001600160a01b03808a1685529184905260409093206006909202909201805482556001808201548184015560028083015481850180546001600160a01b031916919096161790945560038083015490840155600480830154908401805460ff909216151560ff19909216919091179055600591820154919092015590546110129163ffffffff611cd516565b600255604080518781526001602082015281516001600160a01b0388169285927f443b25596b838f2775d21b1153b87036f08c058fd4702446f1136ab26e5f3b90929081900390910190a350949350505050565b60035460ff166110b6576040805162461bcd60e51b8152602060048201526016602482015275149959da5cdd1c985d1a5bdb881a5cc818db1bdcd95960521b604482015290519081900360640190fd5b6110bf33610ac4565b6110fa5760405162461bcd60e51b81526004018080602001828103825260338152602001806126e96033913960400191505060405180910390fd5b610ae8611e60565b60035460ff1615611151576040805162461bcd60e51b81526020600482015260146024820152732932b3b4b9ba3930ba34b7b71034b99037b832b760611b604482015290519081900360640190fd5b600354610100900460ff16156111a3576040805162461bcd60e51b815260206004820152601260248201527129bab136b4b9b9b4b7b71034b99037b832b760711b604482015290519081900360640190fd5b600e5460ff16156111f0576040805162461bcd60e51b815260206004820152601260248201527122bb30b63ab0ba34b7b71034b99037b832b760711b604482015290519081900360640190fd5b6111f933610ac4565b6112345760405162461bcd60e51b81526004018080602001828103825260338152602001806126e96033913960400191505060405180910390fd5b60215460ff1615611285576040805162461bcd60e51b815260206004820152601660248201527514985b9ac8185b1c9958591e481c1d589b1a5cda195960521b604482015290519081900360640190fd5b6000600254116112d2576040805162461bcd60e51b8152602060048201526013602482015272139bc81d19585b5cc81c9959da5cdd195c9959606a1b604482015290519081900360640190fd5b6112da61263f565b6112e261263f565b6112ea61263f565b6112f261263f565b60005b6001548110156113dd576001818154811061130c57fe5b60009182526020918290206040805160c08101825260069093029091018054835260018101549383019390935260028301546001600160a01b03169082015260038201546060820152600482015460ff16158015608083015260059092015460a082015295508061138457508160a001518560a00151105b1561138e576113d5565b8360a001518560a0015111156113a85784939291506113d5565b8260a001518560a0015111156113c157849291506113d5565b8160a001518560a0015111156113d5578491505b6001016112f5565b508251600f819055602080850151601055604080860151601180546001600160a01b03199081166001600160a01b0393841617918290556060808a01516012556080808b01516013805460ff1990811692151592909217905560a0808d015160148190558c516015558c8a01516016558c890151601780548816918a169190911790558c8501516018558c8401516019805485169115159190911790558c820151601a558b51601b558b8a0151601c558b890151601d8054909716908916179095558a840151601e558a830151601f805484169115159190911790558a01518855602180549091166001908117909155865198895293909416958701959095528584015292840192909252517f78bd43bbb342abb837e10002dd4fcda5ea371db518ce4e9aff10ab136441a99c9281900390910190a1601554601754601a54604080519384526001600160a01b0390921660208401528282015260026060830152517f78bd43bbb342abb837e10002dd4fcda5ea371db518ce4e9aff10ab136441a99c9181900360800190a1601b54601d5460208054604080519485526001600160a01b03909316918401919091528282015260036060830152517f78bd43bbb342abb837e10002dd4fcda5ea371db518ce4e9aff10ab136441a99c9181900360800190a150505050565b6115d133610ac4565b61160c5760405162461bcd60e51b81526004018080602001828103825260338152602001806126e96033913960400191505060405180910390fd5b61069f81611ea0565b600e5460ff1690565b600e5460ff1661166c576040805162461bcd60e51b8152602060048201526014602482015273115d985b1d585d1a5bdb881a5cc818db1bdcd95960621b604482015290519081900360640190fd5b61167533610ac4565b6116b05760405162461bcd60e51b81526004018080602001828103825260338152602001806126e96033913960400191505060405180910390fd5b610ae8612033565b6116c133610ac4565b6116fc5760405162461bcd60e51b81526004018080602001828103825260338152602001806126e96033913960400191505060405180910390fd5b61069f81611d9d565b600e5460ff1615611752576040805162461bcd60e51b815260206004820152601260248201527122bb30b63ab0ba34b7b71034b99037b832b760711b604482015290519081900360640190fd5b61175b33610ac4565b6117965760405162461bcd60e51b81526004018080602001828103825260338152602001806126e96033913960400191505060405180910390fd5b610ae8612073565b60035460ff16156117ed576040805162461bcd60e51b81526020600482015260146024820152732932b3b4b9ba3930ba34b7b71034b99037b832b760611b604482015290519081900360640190fd5b6117f633610ac4565b6118315760405162461bcd60e51b81526004018080602001828103825260338152602001806126e96033913960400191505060405180910390fd5b610ae86120bd565b60035460ff1690565b61184b33610ac4565b6118865760405162461bcd60e51b81526004018080602001828103825260338152602001806126e96033913960400191505060405180910390fd5b61069f81612107565b8161189981611ab6565b6118dc576040805162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d19585b481a59608a1b604482015290519081900360640190fd5b826118e681611c2f565b61192e576040805162461bcd60e51b81526020600482015260146024820152731519585b481a5cc81b9bdd08185c1c1c9bdd995960621b604482015290519081900360640190fd5b600354610100900460ff16611981576040805162461bcd60e51b815260206004820152601460248201527314dd589b5a5cdcda5bdb881a5cc818db1bdcd95960621b604482015290519081900360640190fd5b60006001858154811061199057fe5b60009182526020918290206003600690920201908101869055600281015481546040805189815290519395506001600160a01b039092169390927fa44de9e6ce79675199796005de8516704078af25aaf78ab4be180213882560ee9281900390910190a35050505050565b6000610ad760058363ffffffff611d3616565b61069f8161217e565b600354610100900460ff16611a6a576040805162461bcd60e51b815260206004820152601460248201527314dd589b5a5cdcda5bdb881a5cc818db1bdcd95960621b604482015290519081900360640190fd5b611a7333610ac4565b611aae5760405162461bcd60e51b81526004018080602001828103825260338152602001806126e96033913960400191505060405180910390fd5b610ae8612259565b6001541190565b80611ac781611ab6565b611b0a576040805162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d19585b481a59608a1b604482015290519081900360640190fd5b81611b1481611c2f565b15611b5e576040805162461bcd60e51b81526020600482015260156024820152742a32b0b69034b9903737ba103932b83937bb32b21760591b604482015290519081900360640190fd5b600060018481548110611b6d57fe5b600091825260209091206004600690920201908101805460ff19166001908117909155600254919250611ba6919063ffffffff611cd516565b6002908155810154815460048301546040805160ff90921615158252516001600160a01b03909316927fd903780bcf5bcea81714ac3450a34cb3de7b0735a59883e1eb90edd901a54ad49181900360200190a350505050565b60005b81518110156106de57611c27828281518110611c1a57fe5b602002602001015161217e565b600101611c02565b6000611c3a82611ab6565b611c4657506000610ada565b611c4e61263f565b60018381548110611c5b57fe5b60009182526020918290206040805160c08101825260069093029091018054835260018101549383019390935260028301546001600160a01b03169082015260038201546060820152600482015460ff1615156080820181905260059092015460a090910152915050919050565b600a60ff909116111590565b600082820183811015611d2f576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b60006001600160a01b038216611d7d5760405162461bcd60e51b81526004018080602001828103825260228152602001806127af6022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b611da6816122a4565b6001600160a01b03166000908152600d60205260409020600101805460ff60a01b19169055565b611dd6816122e7565b6001600160a01b0381166000908152600b60205260409020805460ff19169055600a54611e0a90600163ffffffff61232f16565b600a5550565b6003805461ff00191661010090811791829055604080519190920460ff161515815290517f48fbf5c7b70581e7e2145562de373e14a5af56d09f9b96d73545d0d35f71f0889181900360200190a1565b6003805460ff19169055604080516000815290517f78b477400a612eb4ec0a343596323cccfac06b27624264a549d8322c736d055c9181900360200190a1565b611ea981612371565b600c54611eb4612674565b6040518060800160405280838152602001846001600160a01b03168152602001600115158152602001600015158152509050600c81908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010160146101000a81548160ff02191690831515021790555060608201518160010160156101000a81548160ff02191690831515021790555050505080600d6000856001600160a01b03166001600160a01b031681526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010160146101000a81548160ff02191690831515021790555060608201518160010160156101000a81548160ff021916908315150217905550905050505050565b600e805460ff19169055604080516000815290517f0266365b4830894a247179cbad20f3dfe40ba70917925976027d2af68d950bed9181900360200190a1565b600e805460ff1916600117908190556040805160ff9290921615158252517f0266365b4830894a247179cbad20f3dfe40ba70917925976027d2af68d950bed9181900360200190a1565b6003805460ff1916600117908190556040805160ff9290921615158252517f78b477400a612eb4ec0a343596323cccfac06b27624264a549d8322c736d055c9181900360200190a1565b612110816123e8565b6009805460018082019092557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b0319166001600160a01b0384169081179091556000908152600b60205260409020805460ff191682179055600a54611e0a91611cd5565b8061218881611ab6565b6121cb576040805162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d19585b481a59608a1b604482015290519081900360640190fd5b816121d581611c2f565b61221d576040805162461bcd60e51b81526020600482015260146024820152731519585b481a5cc81b9bdd08185c1c1c9bdd995960621b604482015290519081900360640190fd5b60006001848154811061222c57fe5b6000918252602090912060069091020160048101805460ff19169055600254909150611ba690600161232f565b6003805461ff001916908190556040805161010090920460ff1615158252517f48fbf5c7b70581e7e2145562de373e14a5af56d09f9b96d73545d0d35f71f0889181900360200190a1565b6122ad81612430565b6001600160a01b0381166000908152600860205260409020805460ff191690556007546122e190600163ffffffff61232f16565b60075550565b6122f860048263ffffffff61247816565b6040516001600160a01b038216907fc459bd414676a5877fcf10a0d73ecf7e1f672a339650b03e628c4046534300e390600090a250565b6000611d2f83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506124df565b61237a81612576565b6006805460018082019092557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319166001600160a01b0384169081179091556000908152600860205260409020805460ff1916821790556007546122e191611cd5565b6123f960048263ffffffff6125be16565b6040516001600160a01b038216907f37e96fc6762bae414e69ea6e2490e63bc46f2a1335de0f6b91f49cf808829bcf90600090a250565b61244160058263ffffffff61247816565b6040516001600160a01b038216907f32a792a099c63670df7161917c5efb2fdc734cf9f943ebddccbecef87664f2b790600090a250565b6124828282611d36565b6124bd5760405162461bcd60e51b815260040180806020018281038252602181526020018061271c6021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6000818484111561256e5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561253357818101518382015260200161251b565b50505050905090810190601f1680156125605780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b61258760058263ffffffff6125be16565b6040516001600160a01b038216907fe7f15f9ffff540ae14fdebcd9b6d6cc1fc143933338656c99caa595e8b80903990600090a250565b6125c88282611d36565b1561261a576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915290565b6040805160808101825260008082526020820181905291810182905260608101919091529056fe4a7564676520616c7265616479207375626d6974746564206576616c756174696f6e4a75646765526f6c653a2063616c6c657220646f6573206e6f742068617665204a7564676520526f6c652e4f7267616e697a6572526f6c653a2063616c6c657220646f6573206e6f742068617665204f7267616e697a657220526f6c652e526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c657465616d7349647320616e642067726164657320646f206e6f74206d617463682074686520636f756e74696e67206f6620617070726f766564207465616d734c656e677468206f66207465616d7320616e64207465616d47726164657320617272617973206d75737420626520657175616c526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373a265627a7a72315820f380ae8acd9150c2c2030c6375ad937f4cd6127572f6fd2c4aa70dc2a829a42c64736f6c63430005100032526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101a85760003560e01c80637dc673bc116100f9578063d06e4ee711610097578063eaf2f9cd11610071578063eaf2f9cd1461053e578063ed896d6614610561578063f540548b14610587578063ffc6ff1e146105a4576101a8565b8063d06e4ee714610508578063e35fb24114610510578063e4725f0214610518576101a8565b8063a2bce8bd116100d3578063a2bce8bd146104ca578063ae237c77146104d2578063ae2ac4ae146104da578063b2a13f9214610500576101a8565b80637dc673bc1461049457806390d768e41461049c578063927cab47146104a4576101a8565b80634b30b66f11610166578063567ad86211610140578063567ad8621461041a57806358e2f50e14610422578063737a63401461042a5780637385712c14610450576101a8565b80634b30b66f146103e45780634ea701a8146103ec57806354e1db2b14610412576101a8565b80628e0f1b146101ad57806324ba9fab146101ff578063288c4a461461021e5780633e091f641461028e5780633ed2b77a1461035057806341676f15146103aa575b600080fd5b6101ca600480360360208110156101c357600080fd5b50356105ac565b604080519586526001600160a01b03909416602086015284840192909252151560608401526080830152519081900360a00190f35b61021c6004803603602081101561021557600080fd5b5035610696565b005b61021c6004803603602081101561023457600080fd5b81019060208101813564010000000081111561024f57600080fd5b82018360208201111561026157600080fd5b8035906020019184602083028401116401000000008311171561028357600080fd5b5090925090506106a2565b61021c600480360360408110156102a457600080fd5b8101906020810181356401000000008111156102bf57600080fd5b8201836020820111156102d157600080fd5b803590602001918460208302840111640100000000831117156102f357600080fd5b91939092909160208101903564010000000081111561031157600080fd5b82018360208201111561032357600080fd5b8035906020019184602083028401116401000000008311171561034557600080fd5b5090925090506106e2565b61036d6004803603602081101561036657600080fd5b5035610a71565b6040805196875260208701959095526001600160a01b039093168585015260608501919091521515608084015260a0830152519081900360c00190f35b6103d0600480360360208110156103c057600080fd5b50356001600160a01b0316610ac4565b604080519115158252519081900360200190f35b61021c610adf565b6101ca6004803603602081101561040257600080fd5b50356001600160a01b0316610aea565b6103d0610bc5565b61021c610bd3565b61021c610bdc565b610432610c7a565b60408051938452602084019290925282820152519081900360600190f35b6104826004803603606081101561046657600080fd5b508035906001600160a01b036020820135169060400135610c88565b60408051918252519081900360200190f35b61021c611066565b61021c611102565b61021c600480360360208110156104ba57600080fd5b50356001600160a01b03166115c8565b6103d0611615565b61021c61161e565b61021c600480360360208110156104f057600080fd5b50356001600160a01b03166116b8565b61021c611705565b61021c61179e565b6103d0611839565b61021c6004803603602081101561052e57600080fd5b50356001600160a01b0316611842565b61021c6004803603604081101561055457600080fd5b508035906020013561188f565b6103d06004803603602081101561057757600080fd5b50356001600160a01b03166119fb565b61021c6004803603602081101561059d57600080fd5b5035611a0e565b61021c611a17565b6000806000806000856105be81611ab6565b610601576040805162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d19585b481a59608a1b604482015290519081900360640190fd5b61060961263f565b6001888154811061061657fe5b60009182526020918290206040805160c08101825260069390930290910180548352600181015493830184905260028101546001600160a01b0316918301829052600381015460608401819052600482015460ff1615156080850181905260059092015460a0909401849052939c919b5092995091975095509350505050565b61069f81611abd565b50565b6106de828280806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611bff92505050565b5050565b600e5460ff16610730576040805162461bcd60e51b8152602060048201526014602482015273115d985b1d585d1a5bdb881a5cc818db1bdcd95960621b604482015290519081900360640190fd5b610739336119fb565b6107745760405162461bcd60e51b815260040180806020018281038252602b8152602001806126be602b913960400191505060405180910390fd5b8281146107b25760405162461bcd60e51b815260040180806020018281038252603381526020018061277c6033913960400191505060405180910390fd5b60025483146107f25760405162461bcd60e51b815260040180806020018281038252603f81526020018061273d603f913960400191505060405180910390fd5b600060025411610849576040805162461bcd60e51b815260206004820152601d60248201527f4e6f20617070726f766564207465616d7320746f206576616c75617465000000604482015290519081900360640190fd5b336000908152600d602052604090206001810154600160a81b900460ff16156108a35760405162461bcd60e51b815260040180806020018281038252602281526020018061269c6022913960400191505060405180910390fd5b60005b600254811015610a115760008686838181106108be57fe5b90506020020135905060008585848181106108d557fe5b9050602002013560ff1690506108ea82611ab6565b61092d576040805162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d19585b481a59608a1b604482015290519081900360640190fd5b61093682611c2f565b61097e576040805162461bcd60e51b81526020600482015260146024820152731519585b481a5cc81b9bdd08185c1c1c9bdd995960621b604482015290519081900360640190fd5b61098781611cc9565b6109c8576040805162461bcd60e51b815260206004820152600d60248201526c496e76616c696420677261646560981b604482015290519081900360640190fd5b6000600183815481106109d757fe5b90600052602060002090600602019050610a018260ff168260050154611cd590919063ffffffff16565b60059091015550506001016108a6565b5060018101805460ff60a81b1916600160a81b17908190558154604080516001600160a01b0390931683525190917fd62869bbd78965284c34750092d78b62093e2d02b730d0ce696ebdcb371bb5dc919081900360200190a25050505050565b60018181548110610a7e57fe5b600091825260209091206006909102018054600182015460028301546003840154600485015460059095015493955091936001600160a01b039091169260ff9091169086565b6000610ad760048363ffffffff611d3616565b90505b919050565b610ae833611d9d565b565b6000808080806001600160a01b038616610b42576040805162461bcd60e51b8152602060048201526014602482015273496e76616c6964207a65726f206164647265737360601b604482015290519081900360640190fd5b610b4a61263f565b505050506001600160a01b0392831660009081526020818152604091829020825160c0810184528154815260018201549281018390526002820154909616928601839052600381015460608701819052600482015460ff1615156080880181905260059092015460a090970187905291969295919450925090565b600354610100900460ff1690565b610ae833611dcd565b600354610100900460ff1615610c2e576040805162461bcd60e51b815260206004820152601260248201527129bab136b4b9b9b4b7b71034b99037b832b760711b604482015290519081900360640190fd5b610c3733610ac4565b610c725760405162461bcd60e51b81526004018080602001828103825260338152602001806126e96033913960400191505060405180910390fd5b610ae8611e10565b600f54601554601b54909192565b60035460009060ff16610cdb576040805162461bcd60e51b8152602060048201526016602482015275149959da5cdd1c985d1a5bdb881a5cc818db1bdcd95960521b604482015290519081900360640190fd5b8360001a60f81b6001600160f81b031916610d3d576040805162461bcd60e51b815260206004820152601960248201527f5465616d206e616d652063616e6e6f7420626520656d70747900000000000000604482015290519081900360640190fd5b6001600160a01b038316610d98576040805162461bcd60e51b815260206004820152601b60248201527f5465616d20616464726573732063616e6e6f74206265207a65726f0000000000604482015290519081900360640190fd5b6001600160a01b038381166000908152602081905260409020600201541615610e08576040805162461bcd60e51b815260206004820152601760248201527f5465616d20616c72656164792072656769737465726564000000000000000000604482015290519081900360640190fd5b600154610e1361263f565b506040805160c081018252828152602081018781526001600160a01b0387811693830193845260608301878152600160808501818152600060a08701818152835480850185559184905287517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf660069093029283015595517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf782015596517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf8880180546001600160a01b031916919095161790935590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf986015590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfa8501805460ff191691151591909117905590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfb90930192909255815490919083908110610f7b57fe5b600091825260208083206001600160a01b03808a1685529184905260409093206006909202909201805482556001808201548184015560028083015481850180546001600160a01b031916919096161790945560038083015490840155600480830154908401805460ff909216151560ff19909216919091179055600591820154919092015590546110129163ffffffff611cd516565b600255604080518781526001602082015281516001600160a01b0388169285927f443b25596b838f2775d21b1153b87036f08c058fd4702446f1136ab26e5f3b90929081900390910190a350949350505050565b60035460ff166110b6576040805162461bcd60e51b8152602060048201526016602482015275149959da5cdd1c985d1a5bdb881a5cc818db1bdcd95960521b604482015290519081900360640190fd5b6110bf33610ac4565b6110fa5760405162461bcd60e51b81526004018080602001828103825260338152602001806126e96033913960400191505060405180910390fd5b610ae8611e60565b60035460ff1615611151576040805162461bcd60e51b81526020600482015260146024820152732932b3b4b9ba3930ba34b7b71034b99037b832b760611b604482015290519081900360640190fd5b600354610100900460ff16156111a3576040805162461bcd60e51b815260206004820152601260248201527129bab136b4b9b9b4b7b71034b99037b832b760711b604482015290519081900360640190fd5b600e5460ff16156111f0576040805162461bcd60e51b815260206004820152601260248201527122bb30b63ab0ba34b7b71034b99037b832b760711b604482015290519081900360640190fd5b6111f933610ac4565b6112345760405162461bcd60e51b81526004018080602001828103825260338152602001806126e96033913960400191505060405180910390fd5b60215460ff1615611285576040805162461bcd60e51b815260206004820152601660248201527514985b9ac8185b1c9958591e481c1d589b1a5cda195960521b604482015290519081900360640190fd5b6000600254116112d2576040805162461bcd60e51b8152602060048201526013602482015272139bc81d19585b5cc81c9959da5cdd195c9959606a1b604482015290519081900360640190fd5b6112da61263f565b6112e261263f565b6112ea61263f565b6112f261263f565b60005b6001548110156113dd576001818154811061130c57fe5b60009182526020918290206040805160c08101825260069093029091018054835260018101549383019390935260028301546001600160a01b03169082015260038201546060820152600482015460ff16158015608083015260059092015460a082015295508061138457508160a001518560a00151105b1561138e576113d5565b8360a001518560a0015111156113a85784939291506113d5565b8260a001518560a0015111156113c157849291506113d5565b8160a001518560a0015111156113d5578491505b6001016112f5565b508251600f819055602080850151601055604080860151601180546001600160a01b03199081166001600160a01b0393841617918290556060808a01516012556080808b01516013805460ff1990811692151592909217905560a0808d015160148190558c516015558c8a01516016558c890151601780548816918a169190911790558c8501516018558c8401516019805485169115159190911790558c820151601a558b51601b558b8a0151601c558b890151601d8054909716908916179095558a840151601e558a830151601f805484169115159190911790558a01518855602180549091166001908117909155865198895293909416958701959095528584015292840192909252517f78bd43bbb342abb837e10002dd4fcda5ea371db518ce4e9aff10ab136441a99c9281900390910190a1601554601754601a54604080519384526001600160a01b0390921660208401528282015260026060830152517f78bd43bbb342abb837e10002dd4fcda5ea371db518ce4e9aff10ab136441a99c9181900360800190a1601b54601d5460208054604080519485526001600160a01b03909316918401919091528282015260036060830152517f78bd43bbb342abb837e10002dd4fcda5ea371db518ce4e9aff10ab136441a99c9181900360800190a150505050565b6115d133610ac4565b61160c5760405162461bcd60e51b81526004018080602001828103825260338152602001806126e96033913960400191505060405180910390fd5b61069f81611ea0565b600e5460ff1690565b600e5460ff1661166c576040805162461bcd60e51b8152602060048201526014602482015273115d985b1d585d1a5bdb881a5cc818db1bdcd95960621b604482015290519081900360640190fd5b61167533610ac4565b6116b05760405162461bcd60e51b81526004018080602001828103825260338152602001806126e96033913960400191505060405180910390fd5b610ae8612033565b6116c133610ac4565b6116fc5760405162461bcd60e51b81526004018080602001828103825260338152602001806126e96033913960400191505060405180910390fd5b61069f81611d9d565b600e5460ff1615611752576040805162461bcd60e51b815260206004820152601260248201527122bb30b63ab0ba34b7b71034b99037b832b760711b604482015290519081900360640190fd5b61175b33610ac4565b6117965760405162461bcd60e51b81526004018080602001828103825260338152602001806126e96033913960400191505060405180910390fd5b610ae8612073565b60035460ff16156117ed576040805162461bcd60e51b81526020600482015260146024820152732932b3b4b9ba3930ba34b7b71034b99037b832b760611b604482015290519081900360640190fd5b6117f633610ac4565b6118315760405162461bcd60e51b81526004018080602001828103825260338152602001806126e96033913960400191505060405180910390fd5b610ae86120bd565b60035460ff1690565b61184b33610ac4565b6118865760405162461bcd60e51b81526004018080602001828103825260338152602001806126e96033913960400191505060405180910390fd5b61069f81612107565b8161189981611ab6565b6118dc576040805162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d19585b481a59608a1b604482015290519081900360640190fd5b826118e681611c2f565b61192e576040805162461bcd60e51b81526020600482015260146024820152731519585b481a5cc81b9bdd08185c1c1c9bdd995960621b604482015290519081900360640190fd5b600354610100900460ff16611981576040805162461bcd60e51b815260206004820152601460248201527314dd589b5a5cdcda5bdb881a5cc818db1bdcd95960621b604482015290519081900360640190fd5b60006001858154811061199057fe5b60009182526020918290206003600690920201908101869055600281015481546040805189815290519395506001600160a01b039092169390927fa44de9e6ce79675199796005de8516704078af25aaf78ab4be180213882560ee9281900390910190a35050505050565b6000610ad760058363ffffffff611d3616565b61069f8161217e565b600354610100900460ff16611a6a576040805162461bcd60e51b815260206004820152601460248201527314dd589b5a5cdcda5bdb881a5cc818db1bdcd95960621b604482015290519081900360640190fd5b611a7333610ac4565b611aae5760405162461bcd60e51b81526004018080602001828103825260338152602001806126e96033913960400191505060405180910390fd5b610ae8612259565b6001541190565b80611ac781611ab6565b611b0a576040805162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d19585b481a59608a1b604482015290519081900360640190fd5b81611b1481611c2f565b15611b5e576040805162461bcd60e51b81526020600482015260156024820152742a32b0b69034b9903737ba103932b83937bb32b21760591b604482015290519081900360640190fd5b600060018481548110611b6d57fe5b600091825260209091206004600690920201908101805460ff19166001908117909155600254919250611ba6919063ffffffff611cd516565b6002908155810154815460048301546040805160ff90921615158252516001600160a01b03909316927fd903780bcf5bcea81714ac3450a34cb3de7b0735a59883e1eb90edd901a54ad49181900360200190a350505050565b60005b81518110156106de57611c27828281518110611c1a57fe5b602002602001015161217e565b600101611c02565b6000611c3a82611ab6565b611c4657506000610ada565b611c4e61263f565b60018381548110611c5b57fe5b60009182526020918290206040805160c08101825260069093029091018054835260018101549383019390935260028301546001600160a01b03169082015260038201546060820152600482015460ff1615156080820181905260059092015460a090910152915050919050565b600a60ff909116111590565b600082820183811015611d2f576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b60006001600160a01b038216611d7d5760405162461bcd60e51b81526004018080602001828103825260228152602001806127af6022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b611da6816122a4565b6001600160a01b03166000908152600d60205260409020600101805460ff60a01b19169055565b611dd6816122e7565b6001600160a01b0381166000908152600b60205260409020805460ff19169055600a54611e0a90600163ffffffff61232f16565b600a5550565b6003805461ff00191661010090811791829055604080519190920460ff161515815290517f48fbf5c7b70581e7e2145562de373e14a5af56d09f9b96d73545d0d35f71f0889181900360200190a1565b6003805460ff19169055604080516000815290517f78b477400a612eb4ec0a343596323cccfac06b27624264a549d8322c736d055c9181900360200190a1565b611ea981612371565b600c54611eb4612674565b6040518060800160405280838152602001846001600160a01b03168152602001600115158152602001600015158152509050600c81908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010160146101000a81548160ff02191690831515021790555060608201518160010160156101000a81548160ff02191690831515021790555050505080600d6000856001600160a01b03166001600160a01b031681526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010160146101000a81548160ff02191690831515021790555060608201518160010160156101000a81548160ff021916908315150217905550905050505050565b600e805460ff19169055604080516000815290517f0266365b4830894a247179cbad20f3dfe40ba70917925976027d2af68d950bed9181900360200190a1565b600e805460ff1916600117908190556040805160ff9290921615158252517f0266365b4830894a247179cbad20f3dfe40ba70917925976027d2af68d950bed9181900360200190a1565b6003805460ff1916600117908190556040805160ff9290921615158252517f78b477400a612eb4ec0a343596323cccfac06b27624264a549d8322c736d055c9181900360200190a1565b612110816123e8565b6009805460018082019092557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b0319166001600160a01b0384169081179091556000908152600b60205260409020805460ff191682179055600a54611e0a91611cd5565b8061218881611ab6565b6121cb576040805162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d19585b481a59608a1b604482015290519081900360640190fd5b816121d581611c2f565b61221d576040805162461bcd60e51b81526020600482015260146024820152731519585b481a5cc81b9bdd08185c1c1c9bdd995960621b604482015290519081900360640190fd5b60006001848154811061222c57fe5b6000918252602090912060069091020160048101805460ff19169055600254909150611ba690600161232f565b6003805461ff001916908190556040805161010090920460ff1615158252517f48fbf5c7b70581e7e2145562de373e14a5af56d09f9b96d73545d0d35f71f0889181900360200190a1565b6122ad81612430565b6001600160a01b0381166000908152600860205260409020805460ff191690556007546122e190600163ffffffff61232f16565b60075550565b6122f860048263ffffffff61247816565b6040516001600160a01b038216907fc459bd414676a5877fcf10a0d73ecf7e1f672a339650b03e628c4046534300e390600090a250565b6000611d2f83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506124df565b61237a81612576565b6006805460018082019092557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319166001600160a01b0384169081179091556000908152600860205260409020805460ff1916821790556007546122e191611cd5565b6123f960048263ffffffff6125be16565b6040516001600160a01b038216907f37e96fc6762bae414e69ea6e2490e63bc46f2a1335de0f6b91f49cf808829bcf90600090a250565b61244160058263ffffffff61247816565b6040516001600160a01b038216907f32a792a099c63670df7161917c5efb2fdc734cf9f943ebddccbecef87664f2b790600090a250565b6124828282611d36565b6124bd5760405162461bcd60e51b815260040180806020018281038252602181526020018061271c6021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6000818484111561256e5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561253357818101518382015260200161251b565b50505050905090810190601f1680156125605780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b61258760058263ffffffff6125be16565b6040516001600160a01b038216907fe7f15f9ffff540ae14fdebcd9b6d6cc1fc143933338656c99caa595e8b80903990600090a250565b6125c88282611d36565b1561261a576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915290565b6040805160808101825260008082526020820181905291810182905260608101919091529056fe4a7564676520616c7265616479207375626d6974746564206576616c756174696f6e4a75646765526f6c653a2063616c6c657220646f6573206e6f742068617665204a7564676520526f6c652e4f7267616e697a6572526f6c653a2063616c6c657220646f6573206e6f742068617665204f7267616e697a657220526f6c652e526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c657465616d7349647320616e642067726164657320646f206e6f74206d617463682074686520636f756e74696e67206f6620617070726f766564207465616d734c656e677468206f66207465616d7320616e64207465616d47726164657320617272617973206d75737420626520657175616c526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373a265627a7a72315820f380ae8acd9150c2c2030c6375ad937f4cd6127572f6fd2c4aa70dc2a829a42c64736f6c63430005100032",
  "sourceMap": "71:129:9:-;;;139:58;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;183:10:9;;;1881:30:22;1873:63;;;;;-1:-1:-1;;;1873:63:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;1946:31;1960:16;-1:-1:-1;;;;;1946:13:22;:31;:::i;:::-;1816:168;887:93:20;1978:108:1;71:129:9;;1591:232:20;1650:28;1670:7;1650:19;;;;;:28;;:::i;:::-;1688:10;27::-1;;39:1;23:18;;;45:23;;;1688:24:20;;;;-1:-1:-1;;;;;;1688:24:20;-1:-1:-1;;;;;1688:24:20;;;;;;;;-1:-1:-1;1722:25:20;;;:16;1688:24;1722:25;;;;;;;:32;;-1:-1:-1;;1722:32:20;;;;;1788:21;;:28;;:21;;:25;;;;;:28;;:::i;:::-;1764:21;:52;-1:-1:-1;1591:232:20:o;2447:128:22:-;2506:24;2522:7;2506:11;:15;;;;;;:24;;;;:::i;:::-;2545:23;;-1:-1:-1;;;;;2545:23:22;;;;;;;;2447:128;:::o;834:176:25:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:25:o;260:175:24:-;337:18;341:4;347:7;-1:-1:-1;;;;;337:3:24;:18;:::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:24;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:24;424:4;401:27;;;260:175::o;779:200::-;851:4;-1:-1:-1;;;;;875:21:24;;867:68;;;;-1:-1:-1;;;867:68:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:24;:11;:20;;;;;;;;;;;;;;;779:200::o;71:129:9:-;;;;;;;",
  "deployedSourceMap": "71:129:9:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;71:129:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3431:293:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3431:293:3;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3431:293:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8408:83;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8408:83:3;;:::i;:::-;;8783:98;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8783:98:3;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;8783:98:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8783:98:3;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;-1:-1;8783:98:3;;-1:-1:-1;8783:98:3;-1:-1:-1;8783:98:3;:::i;2695:1555:1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2695:1555:1;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;2695:1555:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2695:1555:1;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;2695:1555:1;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;2695:1555:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2695:1555:1;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;-1:-1;2695:1555:1;;-1:-1:-1;2695:1555:1;-1:-1:-1;2695:1555:1;:::i;1095:19:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1095:19:3;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;1095:19:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2136:113:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2136:113:22;-1:-1:-1;;;;;2136:113:22;;:::i;:::-;;;;;;;;;;;;;;;;;;2232:73:21;;;:::i;4164:332:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4164:332:3;-1:-1:-1;;;;;4164:332:3;;:::i;8034:101::-;;;:::i;2360:81:22:-;;;:::i;7400:108:1:-;;;:::i;6275:145::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;4879:1108:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4879:1108:3;;;-1:-1:-1;;;;;4879:1108:3;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6551:114:1;;;:::i;4418:1656::-;;;:::i;986:91:20:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;986:91:20;-1:-1:-1;;;;;986:91:20;;:::i;8212:101:1:-;;;:::i;7691:102::-;;;:::i;1083:97:20:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1083:97:20;-1:-1:-1;;;;;1083:97:20;;:::i;7975:102:1:-;;;:::i;6795:114::-;;;:::i;7235:105:3:-;;;:::i;2255:99:22:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2255:99:22;-1:-1:-1;;;;;2255:99:22;;:::i;6198:343:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6198:343:3;;;;;;;:::i;1995:105:21:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1995:105:21;-1:-1:-1;;;;;1995:105:21;;:::i;9152:83:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9152:83:3;;:::i;7101:108:1:-;;;:::i;3431:293:3:-;3537:7;3546;3555;3564:4;3570:7;3512:6;2624:21;2638:6;2624:13;:21::i;:::-;2616:49;;;;;-1:-1:-1;;;2616:49:3;;;;;;;;;;;;-1:-1:-1;;;2616:49:3;;;;;;;;;;;;;;;3593:16;;:::i;:::-;3612:5;3618:6;3612:13;;;;;;;;;;;;;;;;;3593:32;;;;;;;;3612:13;;;;;;;;3593:32;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3593:32:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3593:32:3;;-1:-1:-1;3593:32:3;;-1:-1:-1;3593:32:3;-1:-1:-1;3431:293:3;-1:-1:-1;;;;3431:293:3:o;8408:83::-;8464:20;8477:6;8464:12;:20::i;:::-;8408:83;:::o;8783:98::-;8852:22;8866:7;;8852:22;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;8852:13:3;;-1:-1:-1;;;8852:22:3:i;:::-;8783:98;;:::o;2695:1555:1:-;1420:17;;;;1412:50;;;;;-1:-1:-1;;;1412:50:1;;;;;;;;;;;;-1:-1:-1;;;1412:50:1;;;;;;;;;;;;;;;1904:19:21;1912:10;1904:7;:19::i;:::-;1896:75;;;;-1:-1:-1;;;1896:75:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2860:35:1;;;2852:99;;;;-1:-1:-1;;;2852:99:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3000:18;;2982:36;;2961:146;;;;-1:-1:-1;;;2961:146:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3146:1;3125:18;;:22;3117:64;;;;;-1:-1:-1;;;3117:64:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;3228:10;3191:19;3213:26;;;:14;:26;;;;;3258:11;;;;-1:-1:-1;;;3258:11:1;;;;3257:12;3249:59;;;;-1:-1:-1;;;3249:59:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3323:9;3318:801;3342:18;;3338:1;:22;3318:801;;;3381:14;3398:7;;3406:1;3398:10;;;;;;;;;;;;;3381:27;;3422:11;3436:10;;3447:1;3436:13;;;;;;;;;;;;;;;3422:27;;3842:21;3856:6;3842:13;:21::i;:::-;3834:49;;;;;-1:-1:-1;;;3834:49:1;;;;;;;;;;;;-1:-1:-1;;;3834:49:1;;;;;;;;;;;;;;;3905:22;3920:6;3905:14;:22::i;:::-;3897:55;;;;;-1:-1:-1;;;3897:55:1;;;;;;;;;;;;-1:-1:-1;;;3897:55:1;;;;;;;;;;;;;;;3974:19;3987:5;3974:12;:19::i;:::-;3966:45;;;;;-1:-1:-1;;;3966:45:1;;;;;;;;;;;;-1:-1:-1;;;3966:45:1;;;;;;;;;;;;;;;4026:17;4046:5;4052:6;4046:13;;;;;;;;;;;;;;;;;;4026:33;;4086:21;4101:5;4086:21;;:4;:10;;;:14;;:21;;;;:::i;:::-;4073:10;;;;:34;-1:-1:-1;;3362:3:1;;3318:801;;;-1:-1:-1;4184:4:1;4170:11;;:18;;-1:-1:-1;;;;4170:18:1;-1:-1:-1;;;4170:18:1;;;;;4214:8;;4203:40;;;-1:-1:-1;;;;;4224:18:1;;;4203:40;;;4214:8;;4203:40;;;;;;;;;;1981:1:21;2695:1555:1;;;;:::o;1095:19:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1095:19:3;;-1:-1:-1;;;;;1095:19:3;;;;;;;;;;:::o;2136:113:22:-;2195:4;2218:24;:11;2234:7;2218:24;:15;:24;:::i;:::-;2211:31;;2136:113;;;;:::o;2232:73:21:-;2274:24;2287:10;2274:12;:24::i;:::-;2232:73::o;4164:332:3:-;4232:7;;;;;-1:-1:-1;;;;;4292:25:3;;4284:58;;;;;-1:-1:-1;;;4284:58:3;;;;;;;;;;;;-1:-1:-1;;;4284:58:3;;;;;;;;;;;;;;;4352:16;;:::i;:::-;-1:-1:-1;;;;;;;;;4371:26:3;;;:13;:26;;;;;;;;;;;;4352:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4352:45:3;-1:-1:-1;4352:45:3;4164:332::o;8034:101::-;8111:17;;;;;;;;8034:101::o;2360:81:22:-;2406:28;2423:10;2406:16;:28::i;7400:108:1:-;2505:17:3;;;;;;;2504:18;2496:49;;;;;-1:-1:-1;;;2496:49:3;;;;;;;;;;;;-1:-1:-1;;;2496:49:3;;;;;;;;;;;;;;;2033:23:22;2045:10;2033:11;:23::i;:::-;2025:87;;;;-1:-1:-1;;;2025:87:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7478:23:1;:21;:23::i;6275:145::-;6368:10;:13;6383:11;:14;6399:10;:13;6275:145;;;:::o;4879:1108:3:-;2155:19;;5023:7;;2155:19;;2147:54;;;;;-1:-1:-1;;;2147:54:3;;;;;;;;;;;;-1:-1:-1;;;2147:54:3;;;;;;;;;;;;;;;5054:8;5063:1;5054:11;;;-1:-1:-1;;;;;;5054:16:3;5046:54;;;;;-1:-1:-1;;;5046:54:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5118:25:3;;5110:65;;;;;-1:-1:-1;;;5110:65:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5193:26:3;;;5243:1;5193:26;;;;;;;;;;:38;;;;:52;5185:88;;;;;-1:-1:-1;;;5185:88:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;5300:5;:12;5680:16;;:::i;:::-;-1:-1:-1;5699:58:3;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5699:58:3;;;;;;;;;;;;;;;5749:4;5699:58;;;;;;-1:-1:-1;5699:58:3;;;;;;27:10:-1;;23:18;;;45:23;;5767:16:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5767:16:3;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5767:16:3;;;;;;;;;;;;;;;;;;;;5822:13;;5699:58;;5749:4;5699:58;;5822:13;;;;;;;;;;;;;;-1:-1:-1;;;;;5793:26:3;;;;;;;;;;;;;5822:13;;;;;;;5793:42;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5793:42:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5793:42:3;;;;;;;;;;;;;;;;;;;5866:18;;:25;;;:22;:25;:::i;:::-;5845:18;:46;5906:51;;;;;;5952:4;5906:51;;;;;;-1:-1:-1;;;;;5906:51:3;;;5921:6;;5906:51;;;;;;;;;;;-1:-1:-1;5974:6:3;4879:1108;-1:-1:-1;;;;4879:1108:3:o;6551:114:1:-;2155:19:3;;;;2147:54;;;;;-1:-1:-1;;;2147:54:3;;;;;;;;;;;;-1:-1:-1;;;2147:54:3;;;;;;;;;;;;;;;2033:23:22;2045:10;2033:11;:23::i;:::-;2025:87;;;;-1:-1:-1;;;2025:87:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6632:26:1;:24;:26::i;4418:1656::-;2276:19:3;;;;2275:20;2267:53;;;;;-1:-1:-1;;;2267:53:3;;;;;;;;;;;;-1:-1:-1;;;2267:53:3;;;;;;;;;;;;;;;2505:17;;;;;;;2504:18;2496:49;;;;;-1:-1:-1;;;2496:49:3;;;;;;;;;;;;-1:-1:-1;;;2496:49:3;;;;;;;;;;;;;;;1535:17:1;;;;1534:18;1526:49;;;;;-1:-1:-1;;;1526:49:1;;;;;;;;;;;;-1:-1:-1;;;1526:49:1;;;;;;;;;;;;;;;2033:23:22;2045:10;2033:11;:23::i;:::-;2025:87;;;;-1:-1:-1;;;2025:87:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1757:13:1;;;;1756:14;1748:49;;;;;-1:-1:-1;;;1748:49:1;;;;;;;;;;;;-1:-1:-1;;;1748:49:1;;;;;;;;;;;;;;;4635:1;4614:18;;:22;4606:54;;;;;-1:-1:-1;;;4606:54:1;;;;;;;;;;;;-1:-1:-1;;;4606:54:1;;;;;;;;;;;;;;;4670:19;;:::i;:::-;4699:20;;:::i;:::-;4729:21;;:::i;:::-;4760:20;;:::i;:::-;4796:9;4791:881;4815:5;:12;4811:16;;4791:881;;;4858:5;4864:1;4858:8;;;;;;;;;;;;;;;;;4848:18;;;;;;;;4858:8;;;;;;;4848:18;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4848:18:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4848:18:1;4884:51;;;4921:8;:14;;;4905:7;:13;;;:30;4884:51;4880:213;;;5070:8;;4880:213;5293:8;:14;;;5277:7;:13;;;:30;5273:389;;;5414:7;;5377:8;5338:9;-1:-1:-1;5273:389:1;;;5462:9;:15;;;5446:7;:13;;;:31;5442:220;;;5547:7;;5508:9;-1:-1:-1;5442:220:1;;;5595:8;:14;;;5579:7;:13;;;:30;5575:87;;;5640:7;5629:18;;5575:87;4829:3;;4791:881;;;-1:-1:-1;5682:21:1;;:10;:21;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5682:21:1;;;-1:-1:-1;;;;;5682:21:1;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5682:21:1;;;;;;;;;;;;;;;;;;;;;5713:23;;:11;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5746:21;;:10;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5777:13;:20;;;;;-1:-1:-1;5777:20:1;;;;;;5812:74;;;;;5842:22;;;;5812:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5916:11;:14;5932:23;;5957:17;;5901:77;;;;;;-1:-1:-1;;;;;5932:23:1;;;5901:77;;;;;;;;5932:23;5901:77;;;;;;;;;;;;;;6008:10;:13;6023:22;;6047:16;;;5993:74;;;;;;-1:-1:-1;;;;;6023:22:1;;;5993:74;;;;;;;;;;;6065:1;5993:74;;;;;;;;;;;;;;1807:1;;;;4418:1656::o;986:91:20:-;2033:23:22;2045:10;2033:11;:23::i;:::-;2025:87;;;;-1:-1:-1;;;2025:87:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1052:18:20;1062:7;1052:9;:18::i;8212:101:1:-;8289:17;;;;8212:101;:::o;7691:102::-;1420:17;;;;1412:50;;;;;-1:-1:-1;;;1412:50:1;;;;;;;;;;;;-1:-1:-1;;;1412:50:1;;;;;;;;;;;;;;;2033:23:22;2045:10;2033:11;:23::i;:::-;2025:87;;;;-1:-1:-1;;;2025:87:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7768:18:1;:16;:18::i;1083:97:20:-;2033:23:22;2045:10;2033:11;:23::i;:::-;2025:87;;;;-1:-1:-1;;;2025:87:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1152:21:20;1165:7;1152:12;:21::i;7975:102:1:-;1535:17;;;;1534:18;1526:49;;;;;-1:-1:-1;;;1526:49:1;;;;;;;;;;;;-1:-1:-1;;;1526:49:1;;;;;;;;;;;;;;;2033:23:22;2045:10;2033:11;:23::i;:::-;2025:87;;;;-1:-1:-1;;;2025:87:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8053:17:1;:15;:17::i;6795:114::-;2276:19:3;;;;2275:20;2267:53;;;;;-1:-1:-1;;;2267:53:3;;;;;;;;;;;;-1:-1:-1;;;2267:53:3;;;;;;;;;;;;;;;2033:23:22;2045:10;2033:11;:23::i;:::-;2025:87;;;;-1:-1:-1;;;2025:87:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6877:25:1;:23;:25::i;7235:105:3:-;7314:19;;;;7235:105;:::o;2255:99:22:-;2033:23;2045:10;2033:11;:23::i;:::-;2025:87;;;;-1:-1:-1;;;2025:87:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2325:22;2339:7;2325:13;:22::i;6198:343:3:-;6301:6;2624:21;2638:6;2624:13;:21::i;:::-;2616:49;;;;;-1:-1:-1;;;2616:49:3;;;;;;;;;;;;-1:-1:-1;;;2616:49:3;;;;;;;;;;;;;;;6332:6;2747:22;2762:6;2747:14;:22::i;:::-;2739:55;;;;;-1:-1:-1;;;2739:55:3;;;;;;;;;;;;-1:-1:-1;;;2739:55:3;;;;;;;;;;;;;;;2390:17;;;;;;;2382:50;;;;;-1:-1:-1;;;2382:50:3;;;;;;;;;;;;-1:-1:-1;;;2382:50:3;;;;;;;;;;;;;;;6379:17;6399:5;6405:6;6399:13;;;;;;;;;;;;;;;;;6422:17;6399:13;;;;;6422:17;;;:32;;;6498:16;;;;6489:7;;6469:65;;;;;;;;6399:13;;-1:-1:-1;;;;;;6498:16:3;;;;6489:7;;6469:65;;;;;;;;;;2442:1;2675;6198:343;;;:::o;1995:105:21:-;2050:4;2073:20;:7;2085;2073:20;:11;:20;:::i;9152:83:3:-;9208:20;9221:6;9208:12;:20::i;7101:108:1:-;2390:17:3;;;;;;;2382:50;;;;;-1:-1:-1;;;2382:50:3;;;;;;;;;;;;-1:-1:-1;;;2382:50:3;;;;;;;;;;;;;;;2033:23:22;2045:10;2033:11;:23::i;:::-;2025:87;;;;-1:-1:-1;;;2025:87:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7178:24:1;:22;:24::i;10860:115:3:-;10955:5;:12;-1:-1:-1;10946:21:3;10860:115::o;9965:300::-;10024:6;2624:21;2638:6;2624:13;:21::i;:::-;2616:49;;;;;-1:-1:-1;;;2616:49:3;;;;;;;;;;;;-1:-1:-1;;;2616:49:3;;;;;;;;;;;;;;;10047:6;2877:22;2892:6;2877:14;:22::i;:::-;2876:23;2868:57;;;;;-1:-1:-1;;;2868:57:3;;;;;;;;;;;;-1:-1:-1;;;2868:57:3;;;;;;;;;;;;;;;10065:17;10085:5;10091:6;10085:13;;;;;;;;;;;;;;;;10108;10085;;;;;10108;;;:20;;-1:-1:-1;;10108:20:3;10124:4;10108:20;;;;;;10159:18;;10085:13;;-1:-1:-1;10159:25:3;;:18;:25;:22;:25;:::i;:::-;10138:18;:46;;;10226:16;;;10217:7;;10244:13;;;;10199:59;;;10244:13;;;;10199:59;;;;;-1:-1:-1;;;;;10226:16:3;;;;10199:59;;;;;;;;;2935:1;2675;9965:300;;:::o;10307:168::-;10380:9;10375:94;10399:7;:14;10395:1;:18;10375:94;;;10434:24;10447:7;10455:1;10447:10;;;;;;;;;;;;;;10434:12;:24::i;:::-;10415:3;;10375:94;;11017:223;11080:4;11101:21;11115:6;11101:13;:21::i;:::-;11096:65;;-1:-1:-1;11145:5:3;11138:12;;11096:65;11171:16;;:::i;:::-;11190:5;11196:6;11190:13;;;;;;;;;;;;;;;;;11171:32;;;;;;;;11190:13;;;;;;;11171:32;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11171:32:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11017:223:3;;;:::o;9838:115:1:-;9943:2;9934:11;;;;;;;9838:115::o;834:176:25:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:25:o;779:200:24:-;851:4;-1:-1:-1;;;;;875:21:24;;867:68;;;;-1:-1:-1;;;867:68:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:24;:11;:20;;;;;;;;;;;;;;;779:200::o;9422:234:1:-;9480:27;9499:7;9480:18;:27::i;:::-;-1:-1:-1;;;;;9539:23:1;9517:19;9539:23;;;:14;:23;;;;;9572:12;;:20;;-1:-1:-1;;;;9572:20:1;;;9422:234::o;1829:205:20:-;1891:31;1914:7;1891:22;:31::i;:::-;-1:-1:-1;;;;;1932:25:20;;1960:5;1932:25;;;:16;:25;;;;;:33;;-1:-1:-1;;1932:33:20;;;1999:21;;:28;;1932:33;1999:28;:25;:28;:::i;:::-;1975:21;:52;-1:-1:-1;1829:205:20:o;9789:134:3:-;9835:17;:24;;-1:-1:-1;;9835:24:3;;;;;;;;;9874:42;;;9898:17;;;;9835:24;9898:17;9874:42;;;;;;;;;;;;;;;9789:134::o;9277:144::-;9326:19;:27;;-1:-1:-1;;9326:27:3;;;9368:46;;;9348:5;9368:46;;;;;;;;;;;;;9277:144::o;8831:472:1:-;9034:24;9050:7;9034:15;:24::i;:::-;9084:10;:17;9111:18;;:::i;:::-;9132:34;;;;;;;;9138:5;9132:34;;;;9145:7;-1:-1:-1;;;;;9132:34:1;;;;;9154:4;9132:34;;;;;;9160:5;9132:34;;;;;9111:55;;9176:10;9192:5;9176:22;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;9176:22:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9176:22:1;;;;;-1:-1:-1;;;;;9176:22:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9234:5;9208:14;:23;9223:7;-1:-1:-1;;;;;9208:23:1;-1:-1:-1;;;;;9208:23:1;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9208:31:1;;;;;-1:-1:-1;;;;;9208:31:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8831:472;;;:::o;8378:136::-;8425:17;:25;;-1:-1:-1;;8425:25:1;;;8465:42;;;8445:5;8465:42;;;;;;;;;;;;;8378:136::o;8578:134::-;8624:17;:24;;-1:-1:-1;;8624:24:1;8644:4;8624:24;;;;;8663:42;;;8624:24;8687:17;;;;8663:42;;;;;;;;;;;;;;8578:134::o;9463:142:3:-;9511:19;:26;;-1:-1:-1;;9511:26:3;9533:4;9511:26;;;;;9552:46;;;9511:26;9578:19;;;;9552:46;;;;;;;;;;;;;;9463:142::o;1591:232:20:-;1650:28;1670:7;1650:19;:28::i;:::-;1688:10;27::-1;;39:1;23:18;;;45:23;;;1688:24:20;;;;-1:-1:-1;;;;;;1688:24:20;-1:-1:-1;;;;;1688:24:20;;;;;;;;-1:-1:-1;1722:25:20;;;:16;1688:24;1722:25;;;;:32;;-1:-1:-1;;1722:32:20;;;;;1788:21;;:28;;:25;:28::i;10517:301:3:-;10576:6;2624:21;2638:6;2624:13;:21::i;:::-;2616:49;;;;;-1:-1:-1;;;2616:49:3;;;;;;;;;;;;-1:-1:-1;;;2616:49:3;;;;;;;;;;;;;;;10599:6;2747:22;2762:6;2747:14;:22::i;:::-;2739:55;;;;;-1:-1:-1;;;2739:55:3;;;;;;;;;;;;-1:-1:-1;;;2739:55:3;;;;;;;;;;;;;;;10617:17;10637:5;10643:6;10637:13;;;;;;;;;;;;;;;;;;;;;10660;;;:21;;-1:-1:-1;;10660:21:3;;;10712:18;;10637:13;;-1:-1:-1;10712:25:3;;-1:-1:-1;10712:22:3;:25::i;9611:136::-;9658:17;:25;;-1:-1:-1;;9658:25:3;;;;;9698:42;;;9658:25;9722:17;;;9658:25;9722:17;9698:42;;;;;;;;;;;;;;9611:136::o;1400:185:20:-;1458:27;1477:7;1458:18;:27::i;:::-;-1:-1:-1;;;;;1495:21:20;;1519:5;1495:21;;;:12;:21;;;;;:29;;-1:-1:-1;;1495:29:20;;;1554:17;;:24;;1495:29;1554:24;:21;:24;:::i;:::-;1534:17;:44;-1:-1:-1;1400:185:20:o;2581:136:22:-;2643:27;:11;2662:7;2643:27;:18;:27;:::i;:::-;2685:25;;-1:-1:-1;;;;;2685:25:22;;;;;;;;2581:136;:::o;1274:134:25:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;1186:208:20:-;1241:24;1257:7;1241:15;:24::i;:::-;1275:6;27:10:-1;;39:1;23:18;;;45:23;;;1275:20:20;;;;-1:-1:-1;;;;;;1275:20:20;-1:-1:-1;;;;;1275:20:20;;;;;;;;-1:-1:-1;1305:21:20;;;:12;1275:20;1305:21;;;;:28;;-1:-1:-1;;1305:28:20;;;;;1363:17;;:24;;:21;:24::i;2447:128:22:-;2506:24;:11;2522:7;2506:24;:15;:24;:::i;:::-;2545:23;;-1:-1:-1;;;;;2545:23:22;;;;;;;;2447:128;:::o;2433:124:21:-;2491:23;:7;2506;2491:23;:14;:23;:::i;:::-;2529:21;;-1:-1:-1;;;;;2529:21:21;;;;;;;;2433:124;:::o;510:180:24:-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;-1:-1:-1;;;581:64:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;655:20:24;678:5;655:20;;;;;;;;;;;:28;;-1:-1:-1;;655:28:24;;;510:180::o;1732:187:25:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:25;;;1732:187::o;2311:116:21:-;2366:20;:7;2378;2366:20;:11;:20;:::i;:::-;2401:19;;-1:-1:-1;;;;;2401:19:21;;;;;;;;2311:116;:::o;260:175:24:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:24;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:24;424:4;401:27;;;260:175::o;71:129:9:-;;;;;;;;;-1:-1:-1;71:129:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;71:129:9;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity 0.5.16;\n\nimport \"../core/ContestBracketRegistry.sol\";\n\ncontract ContestBracketRegistryMock is ContestBracketRegistry {\n    constructor() public ContestBracketRegistry(msg.sender) {}\n\n}\n",
  "sourcePath": "/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/mocks/ContestBracketRegistryMock.sol",
  "ast": {
    "absolutePath": "/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/mocks/ContestBracketRegistryMock.sol",
    "exportedSymbols": {
      "ContestBracketRegistryMock": [2547]
    },
    "id": 2548,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2535,
        "literals": ["solidity", "0.5", ".16"],
        "nodeType": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "absolutePath": "/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/core/ContestBracketRegistry.sol",
        "file": "../core/ContestBracketRegistry.sol",
        "id": 2536,
        "nodeType": "ImportDirective",
        "scope": 2548,
        "sourceUnit": 649,
        "src": "25:44:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2537,
              "name": "ContestBracketRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 648,
              "src": "110:22:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ContestBracketRegistry_$648",
                "typeString": "contract ContestBracketRegistry"
              }
            },
            "id": 2538,
            "nodeType": "InheritanceSpecifier",
            "src": "110:22:9"
          }
        ],
        "contractDependencies": [648, 1698, 3187, 3279, 3393],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2547,
        "linearizedBaseContracts": [2547, 648, 3187, 3279, 3393, 1698],
        "name": "ContestBracketRegistryMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2545,
              "nodeType": "Block",
              "src": "195:2:9",
              "statements": []
            },
            "documentation": null,
            "id": 2546,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2541,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4276,
                      "src": "183:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 2542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "183:10:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 2543,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2540,
                  "name": "ContestBracketRegistry",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 648,
                  "src": "160:22:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ContestBracketRegistry_$648_$",
                    "typeString": "type(contract ContestBracketRegistry)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "160:34:9"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2539,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "150:2:9"
            },
            "returnParameters": {
              "id": 2544,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "195:0:9"
            },
            "scope": 2547,
            "src": "139:58:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2548,
        "src": "71:129:9"
      }
    ],
    "src": "0:201:9"
  },
  "legacyAST": {
    "absolutePath": "/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/mocks/ContestBracketRegistryMock.sol",
    "exportedSymbols": {
      "ContestBracketRegistryMock": [2547]
    },
    "id": 2548,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2535,
        "literals": ["solidity", "0.5", ".16"],
        "nodeType": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "absolutePath": "/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/core/ContestBracketRegistry.sol",
        "file": "../core/ContestBracketRegistry.sol",
        "id": 2536,
        "nodeType": "ImportDirective",
        "scope": 2548,
        "sourceUnit": 649,
        "src": "25:44:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2537,
              "name": "ContestBracketRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 648,
              "src": "110:22:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ContestBracketRegistry_$648",
                "typeString": "contract ContestBracketRegistry"
              }
            },
            "id": 2538,
            "nodeType": "InheritanceSpecifier",
            "src": "110:22:9"
          }
        ],
        "contractDependencies": [648, 1698, 3187, 3279, 3393],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2547,
        "linearizedBaseContracts": [2547, 648, 3187, 3279, 3393, 1698],
        "name": "ContestBracketRegistryMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2545,
              "nodeType": "Block",
              "src": "195:2:9",
              "statements": []
            },
            "documentation": null,
            "id": 2546,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2541,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4276,
                      "src": "183:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 2542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "183:10:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 2543,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2540,
                  "name": "ContestBracketRegistry",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 648,
                  "src": "160:22:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ContestBracketRegistry_$648_$",
                    "typeString": "type(contract ContestBracketRegistry)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "160:34:9"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2539,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "150:2:9"
            },
            "returnParameters": {
              "id": 2544,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "195:0:9"
            },
            "scope": 2547,
            "src": "139:58:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2548,
        "src": "71:129:9"
      }
    ],
    "src": "0:201:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-03-09T03:26:21.870Z",
  "devdoc": {
    "methods": {
      "approveTeam(uint256)": {
        "details": "Should be overwritten on inherited contract to add modifier or require statements for access control.",
        "params": {
          "teamId": "{uint256} the ids of the teams to be approved"
        }
      },
      "closeEvaluation()": {
        "details": "Should be overwritten on inherited contract to add modifier or require statements for access control."
      },
      "closeRegistration()": {
        "details": "Overwritten to add modifier for access control."
      },
      "closeSubmission()": {
        "details": "Should be overwritten on inherited contract to add modifier or require statements for access control."
      },
      "getEvaluationStatus()": {
        "return": "{bool} returns {true} if enabled; otherwise, {false}."
      },
      "getRegistrationStatus()": {
        "return": "{bool} returns {true} if enabled; otherwise, {false}."
      },
      "getSubmissionStatus()": {
        "return": "{bool} returns {true} if enabled; otherwise, {false}."
      },
      "getTeam(uint256)": {
        "params": {
          "teamId": "{uint256} the team's unique identifier returned on registration"
        },
        "return": "{bytes32} team's name{address} team's address{bytes32} team's proposal data{bool} team's status: {true} for approved; {false} for reproved;{uint256} team's grade"
      },
      "getTeamByAddress(address)": {
        "params": {
          "teamAddress": "{address} the team's contract address used on registration"
        },
        "return": "{bytes32} team's name{address} team's address{bytes32} team's proposal data{bool} team's status: {true} for approved; {false} for reproved;{uint256} team's grade"
      },
      "getWinnersIds()": {
        "return": "{uint256} First place's id{uint256} Second place's id{uint256} Third place's id"
      },
      "openEvaluation()": {
        "details": "Should be overwritten on inherited contract to add modifier or require statements for access control."
      },
      "openRegistration()": {
        "details": "Overwritten to add modifier for access control."
      },
      "openSubmission()": {
        "details": "Should be overwritten on inherited contract to add modifier or require statements for access control."
      },
      "publishRank()": {
        "details": "emitts an WinnerAnnounced event for each winner (1st, 2nd, 3rd place)."
      },
      "registerTeam(bytes32,address,bytes32)": {
        "details": "Registration process must be open.",
        "params": {
          "teamName": "{bytes32} team's proposal data; could be a hash for a file  on IPFS or for a github link; not required"
        }
      },
      "reproveTeam(uint256)": {
        "details": "Should be overwritten on inherited contract to add modifier or require statements for access control.",
        "params": {
          "teamId": "{uint256} the ids of the teams to be reproved"
        }
      },
      "reproveTeams(uint256[])": {
        "details": "Should be overwritten on inherited contract to add modifier or require statements for access control.",
        "params": {
          "teamIds": "{uint256[]} an array containing the ids of the teams to be reproved"
        }
      },
      "submitEvaluation(uint256[],uint8[])": {
        "details": "The position of teamId and teamGrade must be the same in the array. For example, if teamId \"1\" is sent at {teamIds} array position \"5\" (zero-based), the grade for team \"1\" must be sent at position \"5\" in {teamGrades} array.",
        "params": {
          "teamGrades": "Array of the grades given by the judge for each team.",
          "teamIds": "Array of the ids associated with each team that is going to be evaluated."
        }
      },
      "updateProposalData(uint256,bytes32)": {
        "params": {
          "proposalData": "the updated data for the team's proposal",
          "teamId": "team's unique identifier; required"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "approveTeam(uint256)": {
        "notice": "(re)approves a team in participating in the contest"
      },
      "closeEvaluation()": {
        "notice": "Closes the evaluation process"
      },
      "closeRegistration()": {
        "notice": "Closes the registration process"
      },
      "closeSubmission()": {
        "notice": "Closes the proposal submission process"
      },
      "getEvaluationStatus()": {
        "notice": "Gets the evaluation status"
      },
      "getRegistrationStatus()": {
        "notice": "Gets the registration status"
      },
      "getSubmissionStatus()": {
        "notice": "Gets the submission status"
      },
      "getTeam(uint256)": {
        "notice": "Returns the stored information of a team"
      },
      "getTeamByAddress(address)": {
        "notice": "Returns the stored information of a team, based on a provided address"
      },
      "getWinnersIds()": {
        "notice": "Gets the id of the winner teams."
      },
      "openEvaluation()": {
        "notice": "Opens the evaluation process"
      },
      "openRegistration()": {
        "notice": "Opens the registration process"
      },
      "openSubmission()": {
        "notice": "Opens the proposal submission process"
      },
      "publishRank()": {
        "notice": "Published the ranking results of the contest."
      },
      "registerTeam(bytes32,address,bytes32)": {
        "notice": "Registers a new team in the contest registry."
      },
      "reproveTeam(uint256)": {
        "notice": "reproves a team from participating in the contest"
      },
      "reproveTeams(uint256[])": {
        "notice": "reprove teams from participating in the contest"
      },
      "submitEvaluation(uint256[],uint8[])": {
        "notice": "Allows a judge to submit its evaluation for the teams competing in the contest. The evaluation for all teams must be submitted once."
      },
      "updateProposalData(uint256,bytes32)": {
        "notice": "Updates the proposal data for a specific team."
      }
    }
  }
}
