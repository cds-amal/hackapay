{
  "contractName": "ContestTeamMock",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "splitPrize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addAttendee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getActiveMembers",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAttendee",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getActiveMembersCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isPaused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceAttendee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "_unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "datetime",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "totalPrize",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "membersCount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "memberPrize",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "datetime",
          "type": "uint256"
        }
      ],
      "name": "PrizeSplit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AttendeeAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AttendeeRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "datetime",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getReservedBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAvailableBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"splitPrize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addAttendee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getActiveMembers\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAttendee\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAvailableBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getActiveMembersCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getReservedBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceAttendee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"_unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"datetime\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"totalPrize\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"membersCount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"memberPrize\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"datetime\",\"type\":\"uint256\"}],\"name\":\"PrizeSplit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AttendeeAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AttendeeRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"datetime\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"_unpause()\":{\"details\":\"Internal implementation that lifts the paused state.\"},\"isPaused()\":{\"return\":\"{true} if the contract is paused; otherwise, {false}.\"},\"pause()\":{\"details\":\"Implements the onlyAttendee modifier for access control.\"},\"splitPrize()\":{\"details\":\"Implements the \\\"withdraw pattern\\\" by allocating balances to team  members, so they can request a withdraw once the split is done.\"},\"unpause()\":{\"details\":\"Implements the onlyAttendee modifier for access control.\"},\"withdraw(uint256)\":{\"details\":\"Implements the \\\"withdraw pattern\\\" allowing members to withdraw funds. The method is public, so inactive members (that renounced membership) are still able to withdraw funds in case balance > 0. \"}}},\"userdoc\":{\"methods\":{\"balanceOf()\":{\"notice\":\"Get the balance of a team member\"},\"deposit()\":{\"notice\":\"Allows the contract to receive funds.\"},\"getActiveMembers()\":{\"notice\":\"Gets the active members in the team.\"},\"getActiveMembersCount()\":{\"notice\":\"Gets the number of active team members.\"},\"isPaused()\":{\"notice\":\"Returns if the contract is paused or not.\"},\"pause()\":{\"notice\":\"Trigger the paused state.\"},\"splitPrize()\":{\"notice\":\"Splits the available's contract balance between active team members.\"},\"unpause()\":{\"notice\":\"Lifts the paused state.\"},\"withdraw(uint256)\":{\"notice\":\"Allows a team member to withdraw its funds from the contract.\"}}}},\"settings\":{\"compilationTarget\":{\"/home/odisi/dev/projects/hackapay/contracts/mocks/ContestTeamMock.sol\":\"ContestTeamMock\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/odisi/dev/projects/hackapay/contracts/core/ContestTeam.sol\":{\"keccak256\":\"0x49c84c73afaf24b099c5f9704e18c3b5679fcefb4ef90e4280a05f81c235cbb9\",\"urls\":[\"bzzr://fa3c8b137f50cb2ee5966282f0046dfc0e8823b4cb2502904b78e6ddea97522d\"]},\"/home/odisi/dev/projects/hackapay/contracts/lifecycle/Pausable.sol\":{\"keccak256\":\"0x13c9c60ded6c062f523ae97e0ccce959b4445fb9350261ec676fcffa86f7cff0\",\"urls\":[\"bzzr://2034c8bfd384b991114c6221e97e3aa1c5b78e020b2c302c17451a31fc584047\"]},\"/home/odisi/dev/projects/hackapay/contracts/mocks/ContestTeamMock.sol\":{\"keccak256\":\"0xb84f37ec3d6d2114e5c750b877df4edfa8cc05d969498e71cea837347f05658e\",\"urls\":[\"bzzr://a84a98862c60b51bcc614d26671e16e725c333a673ef5994eb771968f2bab1e4\"]},\"/home/odisi/dev/projects/hackapay/contracts/payment/IPayable.sol\":{\"keccak256\":\"0x49e6a16932e8828c2ece3b77a4c7591154387269fd2a903a0604910e338a9193\",\"urls\":[\"bzzr://0c8990ac44cc8b1f5377c64fe13c96d712ef8c244c5098b0aba5b0590aded55c\"]},\"/home/odisi/dev/projects/hackapay/contracts/payment/Payable.sol\":{\"keccak256\":\"0x7de3e12a72891731a3f10f0fccb8d321dfef6efdaa35566abb61025f6615b868\",\"urls\":[\"bzzr://21548ca1039974bfa7923c5f11bf1460dbe70e613230f8a75cbc376cd388844a\"]},\"/home/odisi/dev/projects/hackapay/contracts/roles/AttendeeRole.sol\":{\"keccak256\":\"0xf8ef8e18fdf08c1383677dbff203e540202c3399db85f4d647906cab30d92795\",\"urls\":[\"bzzr://2ac29edb59391155b1c9b07f05764d2a60ee7c73f2c8fe01d62d362f03a61f18\"]},\"openzeppelin-solidity/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzzr://bd34c1ce05b5b2b3a62fc02e160f6805b1cadd476854664f433c685b2fda8dad\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzzr://1604f5b6d6e916c154efd8c6720cda069e5ba32dfa0a9dedf2b42e5b02d07f89\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b503380600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620000b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f496e76616c6964207a65726f206164647265737300000000000000000000000081525060200191505060405180910390fd5b620000c981620000ec60201b60201c565b506000600160006101000a81548160ff0219169083151502179055505062000518565b600160009054906101000a900460ff161562000170576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f436f6e747261637420697320706175736564000000000000000000000000000081525060200191505060405180910390fd5b62000186816200026a60201b620016191760201c565b60028190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620002616001600354620002cb60201b620011d81790919060201c565b60038190555050565b620002858160006200035460201b620017cf1790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167ff965229cbef17c17a2ced10d89ec5f669942d8dd77bd8a5debcaed392434504e60405160405180910390a250565b6000808284019050838110156200034a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6200036682826200043860201b60201c565b15620003da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620004c1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018062001fe66022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b611abe80620005286000396000f3fe6080604052600436106100f35760003560e01c8063809dab6a1161008a578063d0e30db011610059578063d0e30db014610379578063d9a1554914610383578063fb1da543146103ae578063fc8234cb146103c5576100f3565b8063809dab6a146102dd5780638456cb59146103085780638f7c85191461031f578063b187bd261461034a576100f3565b80633f4ba83a116100c65780633f4ba83a146101c65780634876aebc146101dd5780636cad259014610249578063722713f7146102b2576100f3565b806307057382146100f8578063102462541461010f57806312065fe0146101605780632e1a7d4d1461018b575b600080fd5b34801561010457600080fd5b5061010d6103dc565b005b34801561011b57600080fd5b5061015e6004803603602081101561013257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108b1565b005b34801561016c57600080fd5b5061017561091b565b6040518082815260200191505060405180910390f35b34801561019757600080fd5b506101c4600480360360208110156101ae57600080fd5b810190808035906020019092919050505061093a565b005b3480156101d257600080fd5b506101db610b41565b005b3480156101e957600080fd5b506101f2610ba9565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561023557808201518184015260208101905061021a565b505050509050019250505060405180910390f35b34801561025557600080fd5b506102986004803603602081101561026c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cfb565b604051808215151515815260200191505060405180910390f35b3480156102be57600080fd5b506102c7610d18565b6040518082815260200191505060405180910390f35b3480156102e957600080fd5b506102f2610dbd565b6040518082815260200191505060405180910390f35b34801561031457600080fd5b5061031d610df0565b005b34801561032b57600080fd5b50610334610e58565b6040518082815260200191505060405180910390f35b34801561035657600080fd5b5061035f610e62565b604051808215151515815260200191505060405180910390f35b610381610e79565b005b34801561038f57600080fd5b50610398610f23565b6040518082815260200191505060405180910390f35b3480156103ba57600080fd5b506103c3610f2d565b005b3480156103d157600080fd5b506103da610f38565b005b6103e533610cfb565b61043a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180611a3b6031913960400191505060405180910390fd5b600160009054906101000a900460ff16156104bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f436f6e747261637420697320706175736564000000000000000000000000000081525060200191505060405180910390fd5b60006104eb6006543073ffffffffffffffffffffffffffffffffffffffff163161103a90919063ffffffff16565b905060008111610563576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f436f6e74657374616e745465616d2062616c616e63652069732030000000000081525060200191505060405180910390fd5b600061057a600354836110c390919063ffffffff16565b9050600081116105f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4d656d626572207072697a65206973203000000000000000000000000000000081525060200191505060405180910390fd5b600061060082600354611152565b9050600080600090505b6002805490508110156107655760006002828154811061062657fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060011515600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415610757576106fe85600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111d890919063ffffffff16565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061075485846111d890919063ffffffff16565b92505b50808060010191505061060a565b5061077b846006546111d890919063ffffffff16565b6006819055508181146107d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806119896024913960400191505060405180910390fd5b6006543073ffffffffffffffffffffffffffffffffffffffff16311461084a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806119ad602a913960400191505060405180910390fd5b423373ffffffffffffffffffffffffffffffffffffffff167f347ce84d9ed7334a67bdbc36e6519fbbc870a22468c5fa79fcbb5d68f5bc220d866003548760405180848152602001838152602001828152602001935050505060405180910390a350505050565b6108ba33610cfb565b61090f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180611a3b6031913960400191505060405180910390fd5b61091881611260565b50565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156109ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4e6f7420656e6f7567682062616c616e6365000000000000000000000000000081525060200191505060405180910390fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050610a46828261103a90919063ffffffff16565b905080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610aa18260065461103a90919063ffffffff16565b6006819055503373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610aed573d6000803e3d6000fd5b50423373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568846040518082815260200191505060405180910390a35050565b610b4a33610cfb565b610b9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180611a3b6031913960400191505060405180910390fd5b610ba76113c9565b565b60606002805490506003541115610bbf57600080fd5b6060600354604051908082528060200260200182016040528015610bf25781602001602082028038833980820191505090505b50905060008090505b600280549050811015610cf357600060028281548110610c1757fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060011515600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415610ce55780838381518110610caa57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b508080600101915050610bfb565b508091505090565b6000610d118260006113d390919063ffffffff16565b9050919050565b6000610d2333610cfb565b610d78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180611a3b6031913960400191505060405180910390fd5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6000610deb6006543073ffffffffffffffffffffffffffffffffffffffff163161103a90919063ffffffff16565b905090565b610df933610cfb565b610e4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180611a3b6031913960400191505060405180910390fd5b610e566114b1565b565b6000600354905090565b6000600160009054906101000a900460ff16905090565b60003411610ed2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806119686021913960400191505060405180910390fd5b423373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15346040518082815260200191505060405180910390a3565b6000600654905090565b610f36336114bb565b565b600160009054906101000a900460ff16610fba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f436f6e7472616374206973206e6f74207061757365640000000000000000000081525060200191505060405180910390fd5b6000600160006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b6000828211156110b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600080821161113a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b600082848161114557fe5b0490508091505092915050565b60008083141561116557600090506111d2565b600082840290508284828161117657fe5b04146111cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806119f86021913960400191505060405180910390fd5b809150505b92915050565b600080828401905083811015611256576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600160009054906101000a900460ff16156112e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f436f6e747261637420697320706175736564000000000000000000000000000081525060200191505060405180910390fd5b6112ec81611619565b60028190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506113c060016003546111d890919063ffffffff16565b60038190555050565b6113d1610f38565b565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561145a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611a196022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6114b9611673565b565b600160009054906101000a900460ff161561153e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f436f6e747261637420697320706175736564000000000000000000000000000081525060200191505060405180910390fd5b600160035411611599576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180611a6c6027913960400191505060405180910390fd5b6115a281611775565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611610600160035461103a90919063ffffffff16565b60038190555050565b61162d8160006117cf90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167ff965229cbef17c17a2ced10d89ec5f669942d8dd77bd8a5debcaed392434504e60405160405180910390a250565b600160009054906101000a900460ff16156116f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f436f6e747261637420697320706175736564000000000000000000000000000081525060200191505060405180910390fd5b60018060006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b6117898160006118aa90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fac9358f7f807517a7bfea84ce37617a495e55d78f95d2efadcdfbf94817220e060405160405180910390a250565b6117d982826113d3565b1561184c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6118b482826113d3565b611909576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806119d76021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505056fe6d73672e76616c7565206d757374206265206772656174686572207468616e2030496e76616c69642073706c6974206265747765656e20616374697665206d656d6265727352657365727665642062616c616e63656420776173206e6f7420757064617465642070726f7065726c79526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373417474656e646565526f6c653a2063616c6c657220646f6573206e6f74206861766520417474656e64656520526f6c652e43616e6e6f742072656d6f7665206c617374206d656d6265722066726f6d20636f6e7472616374a165627a7a723058207ca202a0885f827fdc883c1670a38d16d3ca8058058bab0dc28abc92b72b06260029526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
  "deployedBytecode": "",
  "sourceMap": "121:502:13:-;;;200:47;8:9:-1;5:2;;;30:1;27;20:12;5:2;200:47:13;233:10;1896:15:3;1661:1:21;1634:29;;:15;:29;;;;1626:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1698:29;1711:15;1698:12;;;:29;;:::i;:::-;1570:164;1108:5:8;1098:7;;:15;;;;;;;;;;;;;;;;;;1829:97:3;121:502:13;;6283:248:3;1487:7:8;;;;;;;;;;;1486:8;1478:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6355:27:3;6374:7;6355:18;;;;;:27;;:::i;:::-;6392:11;6409:7;6392:25;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;6392:25:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6456:4;6427:17;:26;6445:7;6427:26;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;6495:29;6522:1;6495:22;;:26;;;;;;:29;;;;:::i;:::-;6470:22;:54;;;;6283:248;:::o;2186:125:21:-;2244:23;2259:7;2244:10;:14;;;;;;:23;;;;:::i;:::-;2296:7;2282:22;;;;;;;;;;;;2186:125;:::o;834:176:27:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;260:175:26:-;337:18;341:4;347:7;337:3;;;:18;;:::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;779:200::-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;121:502:13:-;;;;;;;",
  "deployedSourceMap": "121:502:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2181:1752:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2181:1752:3;;;:::i;:::-;;1999:96:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1999:96:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1999:96:21;;;;;;;;;;;;;;;;;;;:::i;:::-;;524:97:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;524:97:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4253:511:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4253:511:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4253:511:3;;;;;;;;;;;;;;;;;:::i;:::-;;6090:71;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6090:71:3;;;:::i;:::-;;4823:598;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4823:598:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4823:598:3;;;;;;;;;;;;;;;;;1882:111:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1882:111:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1882:111:21;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5649:108:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5649:108:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;391:127:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;391:127:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5891:67:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5891:67:3;;;:::i;:::-;;5483:111;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5483:111:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1271:78:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1271:78:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;348:162:20;;;:::i;:::-;;286:99:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;286:99:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2101:79:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2101:79:21;;;:::i;:::-;;2448:105:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2448:105:8;;;:::i;:::-;;2181:1752:3;1782:22:21;1793:10;1782;:22::i;:::-;1774:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1487:7:8;;;;;;;;;;;1486:8;1478:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2346:24:3;2373:42;2399:15;;2381:4;2373:21;;;:25;;:42;;;;:::i;:::-;2346:69;;2452:1;2433:16;:20;2425:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2496:13;2512:44;2533:22;;2512:16;:20;;:44;;;;:::i;:::-;2496:60;;2582:1;2574:5;:9;2566:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2616:28;2647:43;2660:5;2667:22;;2647:12;:43::i;:::-;2616:74;;2700:24;2740:13;2756:1;2740:17;;2735:364;2767:11;:18;;;;2759:5;:26;2735:364;;;2810:14;2827:11;2839:5;2827:18;;;;;;;;;;;;;;;;;;;;;;;;;2810:35;;2940:4;2911:33;;:17;:25;2929:6;2911:25;;;;;;;;;;;;;;;;;;;;;;;;;:33;;;2907:182;;;2983:27;3004:5;2983:8;:16;2992:6;2983:16;;;;;;;;;;;;;;;;:20;;:27;;;;:::i;:::-;2964:8;:16;2973:6;2964:16;;;;;;;;;;;;;;;:46;;;;3047:27;3068:5;3047:16;:20;;:27;;;;:::i;:::-;3028:46;;2907:182;2735:364;2787:7;;;;;;;2735:364;;;;3202:37;3222:16;3202:15;;:19;;:37;;;;:::i;:::-;3184:15;:55;;;;3669:20;3649:16;:40;3641:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3773:15;;3756:4;3748:21;;;:40;3740:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3922:3;3861:10;3850:76;;;3873:16;3891:22;;3915:5;3850:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1527:1:8;;;;2181:1752:3:o;1999:96:21:-;1782:22;1793:10;1782;:22::i;:::-;1774:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2067:21;2080:7;2067:12;:21::i;:::-;1999:96;:::o;524:97:13:-;567:7;601:4;593:21;;;586:28;;524:97;:::o;4253:511:3:-;4338:6;4314:8;:20;4323:10;4314:20;;;;;;;;;;;;;;;;:30;;4306:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4377:22;4402:8;:20;4411:10;4402:20;;;;;;;;;;;;;;;;4377:45;;4449:26;4468:6;4449:14;:18;;:26;;;;:::i;:::-;4432:43;;4508:14;4485:8;:20;4494:10;4485:20;;;;;;;;;;;;;;;:37;;;;4645:27;4665:6;4645:15;;:19;;:27;;;;:::i;:::-;4627:15;:45;;;;4682:10;:19;;:27;4702:6;4682:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4682:27:3;4753:3;4733:10;4724:33;;;4745:6;4724:33;;;;;;;;;;;;;;;;;;4253:511;;:::o;6090:71::-;1782:22:21;1793:10;1782;:22::i;:::-;1774:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6139:15:3;:13;:15::i;:::-;6090:71::o;4823:598::-;4872:16;4934:11;:18;;;;4908:22;;:44;;4900:53;;;;;;4963:30;5010:22;;4996:37;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;4996:37:3;;;;4963:70;;5155:13;5171:1;5155:17;;5150:235;5182:11;:18;;;;5174:5;:26;5150:235;;;5225:14;5242:11;5254:5;5242:18;;;;;;;;;;;;;;;;;;;;;;;;;5225:35;;5307:4;5278:33;;:17;:25;5296:6;5278:25;;;;;;;;;;;;;;;;;;;;;;;;;:33;;;5274:101;;;5354:6;5331:13;5345:5;5331:20;;;;;;;;;;;;;:29;;;;;;;;;;;5274:101;5150:235;5202:7;;;;;;;5150:235;;;;5401:13;5394:20;;;4823:598;:::o;1882:111:21:-;1940:4;1963:23;1978:7;1963:10;:14;;:23;;;;:::i;:::-;1956:30;;1882:111;;;:::o;5649:108:3:-;5704:7;1782:22:21;1793:10;1782;:22::i;:::-;1774:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5730:8:3;:20;5739:10;5730:20;;;;;;;;;;;;;;;;5723:27;;5649:108;:::o;391:127:13:-;443:7;469:42;495:15;;477:4;469:21;;;:25;;:42;;;;:::i;:::-;462:49;;391:127;:::o;5891:67:3:-;1782:22:21;1793:10;1782;:22::i;:::-;1774:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5938:13:3;:11;:13::i;:::-;5891:67::o;5483:111::-;5539:7;5565:22;;5558:29;;5483:111;:::o;1271:78:8:-;1312:4;1335:7;;;;;;;;;;;1328:14;;1271:78;:::o;348:162:20:-;414:1;402:9;:13;394:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;499:3;476:10;468:35;;;488:9;468:35;;;;;;;;;;;;;;;;;;348:162::o;286:99:13:-;337:7;363:15;;356:22;;286:99;:::o;2101:79:21:-;2146:27;2162:10;2146:15;:27::i;:::-;2101:79::o;2448:105:8:-;1665:7;;;;;;;;;;;1657:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2506:5;2496:7;;:15;;;;;;;;;;;;;;;;;;2526:20;2535:10;2526:20;;;;;;;;;;;;;;;;;;;;;;2448:105::o;1274:179:27:-;1332:7;1364:1;1359;:6;;1351:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1410:9;1426:1;1422;:5;1410:17;;1445:1;1438:8;;;1274:179;;;;:::o;2606:326::-;2664:7;2761:1;2757;:5;2749:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2803:9;2819:1;2815;:5;;;;;;2803:17;;2924:1;2917:8;;;2606:326;;;;:::o;1693:458::-;1751:7;1996:1;1991;:6;1987:45;;;2020:1;2013:8;;;;1987:45;2042:9;2058:1;2054;:5;2042:17;;2086:1;2081;2077;:5;;;;;;:10;2069:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2143:1;2136:8;;;1693:458;;;;;:::o;834:176::-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;6283:248:3:-;1487:7:8;;;;;;;;;;;1486:8;1478:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6355:27:3;6374:7;6355:18;:27::i;:::-;6392:11;6409:7;6392:25;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;6392:25:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6456:4;6427:17;:26;6445:7;6427:26;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;6495:29;6522:1;6495:22;;:26;;:29;;;;:::i;:::-;6470:22;:54;;;;6283:248;:::o;2143:53:8:-;2179:10;:8;:10::i;:::-;2143:53::o;779:200:26:-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;1906:49:8:-;1940:8;:6;:8::i;:::-;1906:49::o;6653:374:3:-;1487:7:8;;;;;;;;;;;1486:8;1478:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6827:1:3;6802:22;;:26;6794:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6882:30;6904:7;6882:21;:30::i;:::-;6951:5;6922:17;:26;6940:7;6922:26;;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;6991:29;7018:1;6991:22;;:26;;:29;;;;:::i;:::-;6966:22;:54;;;;6653:374;:::o;2186:125:21:-;2244:23;2259:7;2244:10;:14;;:23;;;;:::i;:::-;2296:7;2282:22;;;;;;;;;;;;2186:125;:::o;2271:105:8:-;1487:7;;;;;;;;;;;1486:8;1478:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2332:4;2322:7;;:14;;;;;;;;;;;;;;;;;;2351:18;2358:10;2351:18;;;;;;;;;;;;;;;;;;;;;;2271:105::o;2317:133:21:-;2378:26;2396:7;2378:10;:17;;:26;;;;:::i;:::-;2435:7;2419:24;;;;;;;;;;;;2317:133;:::o;260:175:26:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;510:180::-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;678:5;655:4;:11;;:20;667:7;655:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;510:180;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\n\nimport \"../core/ContestTeam.sol\";\n\ncontract ContestTeamMock is ContestTeam {\n    using SafeMath for uint256;\n\n    constructor() public ContestTeam(msg.sender) {}\n\n    // Helper testing functions.\n    function getReservedBalance() public view returns (uint256) {\n        return reservedBalance;\n    }\n\n    function getAvailableBalance() public view returns (uint256) {\n        return address(this).balance.sub(reservedBalance);\n    }\n\n    function getBalance() public view returns (uint256) {\n        return address(this).balance;\n    }\n}\n",
  "sourcePath": "/home/odisi/dev/projects/hackapay/contracts/mocks/ContestTeamMock.sol",
  "ast": {
    "absolutePath": "/home/odisi/dev/projects/hackapay/contracts/mocks/ContestTeamMock.sol",
    "exportedSymbols": {
      "ContestTeamMock": [2366]
    },
    "id": 2367,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2317,
        "literals": ["solidity", "^", "0.5", ".0"],
        "nodeType": "PragmaDirective",
        "src": "0:23:13"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 2318,
        "nodeType": "ImportDirective",
        "scope": 2367,
        "sourceUnit": 3946,
        "src": "25:59:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/odisi/dev/projects/hackapay/contracts/core/ContestTeam.sol",
        "file": "../core/ContestTeam.sol",
        "id": 2319,
        "nodeType": "ImportDirective",
        "scope": 2367,
        "sourceUnit": 1092,
        "src": "86:33:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2320,
              "name": "ContestTeam",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1091,
              "src": "149:11:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ContestTeam_$1091",
                "typeString": "contract ContestTeam"
              }
            },
            "id": 2321,
            "nodeType": "InheritanceSpecifier",
            "src": "149:11:13"
          }
        ],
        "contractDependencies": [1091, 2215, 2599, 2633, 2747],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2366,
        "linearizedBaseContracts": [2366, 1091, 2215, 2747, 2633, 2599],
        "name": "ContestTeamMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2324,
            "libraryName": {
              "contractScope": null,
              "id": 2322,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3945,
              "src": "173:8:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3945",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "167:27:13",
            "typeName": {
              "id": 2323,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "186:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 2331,
              "nodeType": "Block",
              "src": "245:2:13",
              "statements": []
            },
            "documentation": null,
            "id": 2332,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2327,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3960,
                      "src": "233:3:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 2328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "233:10:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 2329,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2326,
                  "name": "ContestTeam",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1091,
                  "src": "221:11:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ContestTeam_$1091_$",
                    "typeString": "type(contract ContestTeam)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "221:23:13"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "211:2:13"
            },
            "returnParameters": {
              "id": 2330,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "245:0:13"
            },
            "scope": 2366,
            "src": "200:47:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2339,
              "nodeType": "Block",
              "src": "346:39:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2337,
                    "name": "reservedBalance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 703,
                    "src": "363:15:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2336,
                  "id": 2338,
                  "nodeType": "Return",
                  "src": "356:22:13"
                }
              ]
            },
            "documentation": null,
            "id": 2340,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getReservedBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2333,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "313:2:13"
            },
            "returnParameters": {
              "id": 2336,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2335,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2340,
                  "src": "337:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2334,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "337:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "336:9:13"
            },
            "scope": 2366,
            "src": "286:99:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2353,
              "nodeType": "Block",
              "src": "452:66:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2350,
                        "name": "reservedBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 703,
                        "src": "495:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2346,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4016,
                              "src": "477:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ContestTeamMock_$2366",
                                "typeString": "contract ContestTeamMock"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ContestTeamMock_$2366",
                                "typeString": "contract ContestTeamMock"
                              }
                            ],
                            "id": 2345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "469:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "469:13:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "469:21:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3864,
                      "src": "469:25:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "469:42:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2344,
                  "id": 2352,
                  "nodeType": "Return",
                  "src": "462:49:13"
                }
              ]
            },
            "documentation": null,
            "id": 2354,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAvailableBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2341,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "419:2:13"
            },
            "returnParameters": {
              "id": 2344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2343,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2354,
                  "src": "443:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2342,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "443:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "442:9:13"
            },
            "scope": 2366,
            "src": "391:127:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2364,
              "nodeType": "Block",
              "src": "576:45:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2360,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4016,
                          "src": "601:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ContestTeamMock_$2366",
                            "typeString": "contract ContestTeamMock"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ContestTeamMock_$2366",
                            "typeString": "contract ContestTeamMock"
                          }
                        ],
                        "id": 2359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "593:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 2361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "593:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "593:21:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2358,
                  "id": 2363,
                  "nodeType": "Return",
                  "src": "586:28:13"
                }
              ]
            },
            "documentation": null,
            "id": 2365,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2355,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "543:2:13"
            },
            "returnParameters": {
              "id": 2358,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2357,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2365,
                  "src": "567:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2356,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "567:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "566:9:13"
            },
            "scope": 2366,
            "src": "524:97:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2367,
        "src": "121:502:13"
      }
    ],
    "src": "0:624:13"
  },
  "legacyAST": {
    "absolutePath": "/home/odisi/dev/projects/hackapay/contracts/mocks/ContestTeamMock.sol",
    "exportedSymbols": {
      "ContestTeamMock": [2366]
    },
    "id": 2367,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2317,
        "literals": ["solidity", "^", "0.5", ".0"],
        "nodeType": "PragmaDirective",
        "src": "0:23:13"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 2318,
        "nodeType": "ImportDirective",
        "scope": 2367,
        "sourceUnit": 3946,
        "src": "25:59:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/odisi/dev/projects/hackapay/contracts/core/ContestTeam.sol",
        "file": "../core/ContestTeam.sol",
        "id": 2319,
        "nodeType": "ImportDirective",
        "scope": 2367,
        "sourceUnit": 1092,
        "src": "86:33:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2320,
              "name": "ContestTeam",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1091,
              "src": "149:11:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ContestTeam_$1091",
                "typeString": "contract ContestTeam"
              }
            },
            "id": 2321,
            "nodeType": "InheritanceSpecifier",
            "src": "149:11:13"
          }
        ],
        "contractDependencies": [1091, 2215, 2599, 2633, 2747],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2366,
        "linearizedBaseContracts": [2366, 1091, 2215, 2747, 2633, 2599],
        "name": "ContestTeamMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2324,
            "libraryName": {
              "contractScope": null,
              "id": 2322,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3945,
              "src": "173:8:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3945",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "167:27:13",
            "typeName": {
              "id": 2323,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "186:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 2331,
              "nodeType": "Block",
              "src": "245:2:13",
              "statements": []
            },
            "documentation": null,
            "id": 2332,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2327,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3960,
                      "src": "233:3:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 2328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "233:10:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 2329,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2326,
                  "name": "ContestTeam",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1091,
                  "src": "221:11:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ContestTeam_$1091_$",
                    "typeString": "type(contract ContestTeam)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "221:23:13"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "211:2:13"
            },
            "returnParameters": {
              "id": 2330,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "245:0:13"
            },
            "scope": 2366,
            "src": "200:47:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2339,
              "nodeType": "Block",
              "src": "346:39:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2337,
                    "name": "reservedBalance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 703,
                    "src": "363:15:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2336,
                  "id": 2338,
                  "nodeType": "Return",
                  "src": "356:22:13"
                }
              ]
            },
            "documentation": null,
            "id": 2340,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getReservedBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2333,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "313:2:13"
            },
            "returnParameters": {
              "id": 2336,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2335,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2340,
                  "src": "337:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2334,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "337:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "336:9:13"
            },
            "scope": 2366,
            "src": "286:99:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2353,
              "nodeType": "Block",
              "src": "452:66:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2350,
                        "name": "reservedBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 703,
                        "src": "495:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2346,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4016,
                              "src": "477:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ContestTeamMock_$2366",
                                "typeString": "contract ContestTeamMock"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ContestTeamMock_$2366",
                                "typeString": "contract ContestTeamMock"
                              }
                            ],
                            "id": 2345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "469:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "469:13:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "469:21:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3864,
                      "src": "469:25:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "469:42:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2344,
                  "id": 2352,
                  "nodeType": "Return",
                  "src": "462:49:13"
                }
              ]
            },
            "documentation": null,
            "id": 2354,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAvailableBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2341,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "419:2:13"
            },
            "returnParameters": {
              "id": 2344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2343,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2354,
                  "src": "443:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2342,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "443:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "442:9:13"
            },
            "scope": 2366,
            "src": "391:127:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2364,
              "nodeType": "Block",
              "src": "576:45:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2360,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4016,
                          "src": "601:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ContestTeamMock_$2366",
                            "typeString": "contract ContestTeamMock"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ContestTeamMock_$2366",
                            "typeString": "contract ContestTeamMock"
                          }
                        ],
                        "id": 2359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "593:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 2361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "593:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "593:21:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2358,
                  "id": 2363,
                  "nodeType": "Return",
                  "src": "586:28:13"
                }
              ]
            },
            "documentation": null,
            "id": 2365,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2355,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "543:2:13"
            },
            "returnParameters": {
              "id": 2358,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2357,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2365,
                  "src": "567:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2356,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "567:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "566:9:13"
            },
            "scope": 2366,
            "src": "524:97:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2367,
        "src": "121:502:13"
      }
    ],
    "src": "0:624:13"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-07-29T15:59:47.397Z",
  "devdoc": {
    "methods": {
      "_unpause()": {
        "details": "Internal implementation that lifts the paused state."
      },
      "isPaused()": {
        "return": "{true} if the contract is paused; otherwise, {false}."
      },
      "pause()": {
        "details": "Implements the onlyAttendee modifier for access control."
      },
      "splitPrize()": {
        "details": "Implements the \"withdraw pattern\" by allocating balances to team  members, so they can request a withdraw once the split is done."
      },
      "unpause()": {
        "details": "Implements the onlyAttendee modifier for access control."
      },
      "withdraw(uint256)": {
        "details": "Implements the \"withdraw pattern\" allowing members to withdraw funds. The method is public, so inactive members (that renounced membership) are still able to withdraw funds in case balance > 0. "
      }
    }
  },
  "userdoc": {
    "methods": {
      "balanceOf()": {
        "notice": "Get the balance of a team member"
      },
      "deposit()": {
        "notice": "Allows the contract to receive funds."
      },
      "getActiveMembers()": {
        "notice": "Gets the active members in the team."
      },
      "getActiveMembersCount()": {
        "notice": "Gets the number of active team members."
      },
      "isPaused()": {
        "notice": "Returns if the contract is paused or not."
      },
      "pause()": {
        "notice": "Trigger the paused state."
      },
      "splitPrize()": {
        "notice": "Splits the available's contract balance between active team members."
      },
      "unpause()": {
        "notice": "Lifts the paused state."
      },
      "withdraw(uint256)": {
        "notice": "Allows a team member to withdraw its funds from the contract."
      }
    }
  }
}
