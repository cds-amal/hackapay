{
  "contractName": "ContestTeamMock",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "splitPrize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addAttendee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getActiveMembers",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAttendee",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getActiveMembersCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isPaused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceAttendee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "_unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "datetime",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "totalPrize",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "membersCount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "memberPrize",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "datetime",
          "type": "uint256"
        }
      ],
      "name": "PrizeSplit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AttendeeAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AttendeeRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "datetime",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getReservedBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAvailableBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"splitPrize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addAttendee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getActiveMembers\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAttendee\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAvailableBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getActiveMembersCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getReservedBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceAttendee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"_unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"datetime\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"totalPrize\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"membersCount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"memberPrize\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"datetime\",\"type\":\"uint256\"}],\"name\":\"PrizeSplit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AttendeeAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AttendeeRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"datetime\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"_unpause()\":{\"details\":\"Internal implementation that lifts the paused state.\"},\"balanceOf()\":{\"return\":\"The balance of a team member\"},\"getActiveMembers()\":{\"return\":\"An array of addresses representing the accounts of active members \"},\"getActiveMembersCount()\":{\"return\":\"{uint256} Count of active members\"},\"isPaused()\":{\"return\":\"{true} if the contract is paused; otherwise, {false}.\"},\"pause()\":{\"details\":\"Implements the onlyAttendee modifier for access control.\"},\"splitPrize()\":{\"details\":\"Implements the \\\"withdraw pattern\\\" by allocating balances to team  members, so they can request a withdraw once the split is done.\"},\"unpause()\":{\"details\":\"Implements the onlyAttendee modifier for access control.\"},\"withdraw(uint256)\":{\"details\":\"Implements the \\\"withdraw pattern\\\" allowing members to withdraw funds. The method is public, so inactive members (that renounced membership) are still able to withdraw funds in case balance > 0. \"}}},\"userdoc\":{\"methods\":{\"balanceOf()\":{\"notice\":\"Get the balance of a team member\"},\"deposit()\":{\"notice\":\"Allows the contract to receive funds.\"},\"getActiveMembers()\":{\"notice\":\"Gets the active members in the team.\"},\"getActiveMembersCount()\":{\"notice\":\"Gets the number of active team members.\"},\"isPaused()\":{\"notice\":\"Returns if the contract is paused or not.\"},\"pause()\":{\"notice\":\"Trigger the paused state.\"},\"splitPrize()\":{\"notice\":\"Splits the available's contract balance between active team members.\"},\"unpause()\":{\"notice\":\"Lifts the paused state.\"},\"withdraw(uint256)\":{\"notice\":\"Allows a team member to withdraw its funds from the contract.\"}}}},\"settings\":{\"compilationTarget\":{\"/home/odisi/dev/projects/hackapay/contracts/mocks/ContestTeamMock.sol\":\"ContestTeamMock\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/odisi/dev/projects/hackapay/contracts/core/ContestTeam.sol\":{\"keccak256\":\"0x209a588e85dc7c8f0eb042b4e572e34d581b844aa56cacbb8bb3cd0f6bc2b0a5\",\"urls\":[\"bzzr://d99f1cc01b76252daa0124e40892e990ef9c3d3a7bc86036d2924905540b1bbe\"]},\"/home/odisi/dev/projects/hackapay/contracts/lifecycle/Pausable.sol\":{\"keccak256\":\"0x13c9c60ded6c062f523ae97e0ccce959b4445fb9350261ec676fcffa86f7cff0\",\"urls\":[\"bzzr://2034c8bfd384b991114c6221e97e3aa1c5b78e020b2c302c17451a31fc584047\"]},\"/home/odisi/dev/projects/hackapay/contracts/mocks/ContestTeamMock.sol\":{\"keccak256\":\"0xb84f37ec3d6d2114e5c750b877df4edfa8cc05d969498e71cea837347f05658e\",\"urls\":[\"bzzr://a84a98862c60b51bcc614d26671e16e725c333a673ef5994eb771968f2bab1e4\"]},\"/home/odisi/dev/projects/hackapay/contracts/payment/IPayable.sol\":{\"keccak256\":\"0x49e6a16932e8828c2ece3b77a4c7591154387269fd2a903a0604910e338a9193\",\"urls\":[\"bzzr://0c8990ac44cc8b1f5377c64fe13c96d712ef8c244c5098b0aba5b0590aded55c\"]},\"/home/odisi/dev/projects/hackapay/contracts/payment/Payable.sol\":{\"keccak256\":\"0x7de3e12a72891731a3f10f0fccb8d321dfef6efdaa35566abb61025f6615b868\",\"urls\":[\"bzzr://21548ca1039974bfa7923c5f11bf1460dbe70e613230f8a75cbc376cd388844a\"]},\"/home/odisi/dev/projects/hackapay/contracts/roles/AttendeeRole.sol\":{\"keccak256\":\"0x6d8a1612736c806680064dbb20da3b25b19fb68b0ea157764abe8c4d6c2c1014\",\"urls\":[\"bzzr://10fa9d24bf0beff77a21dcec481550e6ea770cbaa5266e33689676520469d8bf\"]},\"openzeppelin-solidity/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzzr://bd34c1ce05b5b2b3a62fc02e160f6805b1cadd476854664f433c685b2fda8dad\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzzr://1604f5b6d6e916c154efd8c6720cda069e5ba32dfa0a9dedf2b42e5b02d07f89\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b503380806200008157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f496e76616c6964207a65726f2061646472657373000000000000000000000000604482015290519081900360640190fd5b6200009281620000a460201b60201c565b50506001805460ff19169055620003a6565b60015460ff16156200011757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f436f6e7472616374206973207061757365640000000000000000000000000000604482015290519081900360640190fd5b6200012d81620001b160201b62000e7f1760201c565b6002805460018082019092557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0384169081179091556000908152600460209081526040909120805460ff191683179055600354620001ab92909162000203811b62000c0417901c565b60035550565b620001cc8160006200027f60201b62000fa31790919060201c565b6040516001600160a01b038216907ff965229cbef17c17a2ced10d89ec5f669942d8dd77bd8a5debcaed392434504e90600090a250565b6000828201838110156200027857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6200029182826200032360201b60201c565b15620002fe57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b03821662000386576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806200159e6022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6111e880620003b66000396000f3fe6080604052600436106100f35760003560e01c8063809dab6a1161008a578063d0e30db011610059578063d0e30db0146102bd578063d9a15549146102c5578063fb1da543146102da578063fc8234cb146102ef576100f3565b8063809dab6a146102695780638456cb591461027e5780638f7c851914610293578063b187bd26146102a8576100f3565b80633f4ba83a116100c65780633f4ba83a146101935780634876aebc146101a85780636cad25901461020d578063722713f714610254576100f3565b806307057382146100f8578063102462541461010f57806312065fe0146101425780632e1a7d4d14610169575b600080fd5b34801561010457600080fd5b5061010d610304565b005b34801561011b57600080fd5b5061010d6004803603602081101561013257600080fd5b50356001600160a01b031661062a565b34801561014e57600080fd5b5061015761067d565b60408051918252519081900360200190f35b34801561017557600080fd5b5061010d6004803603602081101561018c57600080fd5b5035610682565b34801561019f57600080fd5b5061010d61079d565b3480156101b457600080fd5b506101bd6107ee565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156101f95781810151838201526020016101e1565b505050509050019250505060405180910390f35b34801561021957600080fd5b506102406004803603602081101561023057600080fd5b50356001600160a01b03166108c1565b604080519115158252519081900360200190f35b34801561026057600080fd5b506101576108d9565b34801561027557600080fd5b50610157610936565b34801561028a57600080fd5b5061010d610953565b34801561029f57600080fd5b506101576109a2565b3480156102b457600080fd5b506102406109a8565b61010d6109b1565b3480156102d157600080fd5b50610157610a2c565b3480156102e657600080fd5b5061010d610a32565b3480156102fb57600080fd5b5061010d610a3b565b61030d336108c1565b61034b57604051600160e51b62461bcd0281526004018080602001828103825260318152602001806111656031913960400191505060405180910390fd5b60015460ff161561039e5760408051600160e51b62461bcd0281526020600482015260126024820152600160721b7110dbdb9d1c9858dd081a5cc81c185d5cd95902604482015290519081900360640190fd5b6006546000906103b69030319063ffffffff610ad416565b9050600081116104105760408051600160e51b62461bcd02815260206004820152601b60248201527f436f6e74657374616e745465616d2062616c616e636520697320300000000000604482015290519081900360640190fd5b600061042760035483610b3490919063ffffffff16565b9050600081116104815760408051600160e51b62461bcd02815260206004820152601160248201527f4d656d626572207072697a652069732030000000000000000000000000000000604482015290519081900360640190fd5b600061048f82600354610ba1565b90506000805b600254811015610541576000600282815481106104ae57fe5b60009182526020808320909101546001600160a01b0316808352600490915260409091205490915060ff16151560011415610538576001600160a01b03811660009081526005602052604090205461050c908663ffffffff610c0416565b6001600160a01b038216600090815260056020526040902055610535838663ffffffff610c0416565b92505b50600101610495565b50600654610555908563ffffffff610c0416565b60065580821461059957604051600160e51b62461bcd0281526004018080602001828103825260248152602001806110b36024913960400191505060405180910390fd5b6006543031146105dd57604051600160e51b62461bcd02815260040180806020018281038252602a8152602001806110d7602a913960400191505060405180910390fd5b60035460408051868152602081019290925281810185905251429133917f347ce84d9ed7334a67bdbc36e6519fbbc870a22468c5fa79fcbb5d68f5bc220d9181900360600190a350505050565b610633336108c1565b61067157604051600160e51b62461bcd0281526004018080602001828103825260318152602001806111656031913960400191505060405180910390fd5b61067a81610c61565b50565b303190565b336000908152600560205260409020548111156106e95760408051600160e51b62461bcd02815260206004820152601260248201527f4e6f7420656e6f7567682062616c616e63650000000000000000000000000000604482015290519081900360640190fd5b33600090815260056020526040902054610709818363ffffffff610ad416565b336000908152600560205260409020819055600654909150610731908363ffffffff610ad416565b600655604051339083156108fc029084906000818181858888f19350505050158015610761573d6000803e3d6000fd5b50604080518381529051429133917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689181900360200190a35050565b6107a6336108c1565b6107e457604051600160e51b62461bcd0281526004018080602001828103825260318152602001806111656031913960400191505060405180910390fd5b6107ec610d31565b565b600254600354606091101561080257600080fd5b6060600354604051908082528060200260200182016040528015610830578160200160208202803883390190505b50905060005b6002548110156108bb5760006002828154811061084f57fe5b60009182526020808320909101546001600160a01b0316808352600490915260409091205490915060ff161515600114156108b2578083838151811061089157fe5b60200260200101906001600160a01b031690816001600160a01b0316815250505b50600101610836565b50905090565b60006108d3818363ffffffff610d3916565b92915050565b60006108e4336108c1565b61092257604051600160e51b62461bcd0281526004018080602001828103825260318152602001806111656031913960400191505060405180910390fd5b503360009081526005602052604090205490565b60065460009061094e9030319063ffffffff610ad416565b905090565b61095c336108c1565b61099a57604051600160e51b62461bcd0281526004018080602001828103825260318152602001806111656031913960400191505060405180910390fd5b6107ec610da3565b60035490565b60015460ff1690565b600034116109f357604051600160e51b62461bcd0281526004018080602001828103825260218152602001806110926021913960400191505060405180910390fd5b604080513481529051429133917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159181900360200190a3565b60065490565b6107ec33610dab565b60015460ff16610a955760408051600160e51b62461bcd02815260206004820152601660248201527f436f6e7472616374206973206e6f742070617573656400000000000000000000604482015290519081900360640190fd5b6001805460ff191690556040805133815290517f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa9181900360200190a1565b600082821115610b2e5760408051600160e51b62461bcd02815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6000808211610b8d5760408051600160e51b62461bcd02815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b6000828481610b9857fe5b04949350505050565b600082610bb0575060006108d3565b82820282848281610bbd57fe5b0414610bfd57604051600160e51b62461bcd0281526004018080602001828103825260218152602001806111226021913960400191505060405180910390fd5b9392505050565b600082820183811015610bfd5760408051600160e51b62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60015460ff1615610cb45760408051600160e51b62461bcd0281526020600482015260126024820152600160721b7110dbdb9d1c9858dd081a5cc81c185d5cd95902604482015290519081900360640190fd5b610cbd81610e7f565b6002805460018082019092557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0384169081179091556000908152600460205260409020805460ff191682179055600354610d2b91610c04565b60035550565b6107ec610a3b565b60006001600160a01b038216610d8357604051600160e51b62461bcd0281526004018080602001828103825260228152602001806111436022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6107ec610ec7565b60015460ff1615610dfe5760408051600160e51b62461bcd0281526020600482015260126024820152600160721b7110dbdb9d1c9858dd081a5cc81c185d5cd95902604482015290519081900360640190fd5b600160035411610e4257604051600160e51b62461bcd0281526004018080602001828103825260278152602001806111966027913960400191505060405180910390fd5b610e4b81610f5b565b6001600160a01b0381166000908152600460205260409020805460ff19169055600354610d2b90600163ffffffff610ad416565b610e9060008263ffffffff610fa316565b6040516001600160a01b038216907ff965229cbef17c17a2ced10d89ec5f669942d8dd77bd8a5debcaed392434504e90600090a250565b60015460ff1615610f1a5760408051600160e51b62461bcd0281526020600482015260126024820152600160721b7110dbdb9d1c9858dd081a5cc81c185d5cd95902604482015290519081900360640190fd5b6001805460ff1916811790556040805133815290517f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589181900360200190a1565b610f6c60008263ffffffff61102716565b6040516001600160a01b038216907fac9358f7f807517a7bfea84ce37617a495e55d78f95d2efadcdfbf94817220e090600090a250565b610fad8282610d39565b156110025760408051600160e51b62461bcd02815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6110318282610d39565b61106f57604051600160e51b62461bcd0281526004018080602001828103825260218152602001806111016021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff1916905556fe6d73672e76616c7565206d757374206265206772656174686572207468616e2030496e76616c69642073706c6974206265747765656e20616374697665206d656d6265727352657365727665642062616c616e63656420776173206e6f7420757064617465642070726f7065726c79526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373417474656e646565526f6c653a2063616c6c657220646f6573206e6f74206861766520417474656e64656520526f6c652e43616e6e6f742072656d6f7665206c617374206d656d6265722066726f6d20636f6e7472616374a165627a7a72305820a279ef7924ee8cc5b76ffc9d7634d0eb0d42007f4399f043a205faba7ef862bb0029526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
  "deployedBytecode": "0x6080604052600436106100f35760003560e01c8063809dab6a1161008a578063d0e30db011610059578063d0e30db0146102bd578063d9a15549146102c5578063fb1da543146102da578063fc8234cb146102ef576100f3565b8063809dab6a146102695780638456cb591461027e5780638f7c851914610293578063b187bd26146102a8576100f3565b80633f4ba83a116100c65780633f4ba83a146101935780634876aebc146101a85780636cad25901461020d578063722713f714610254576100f3565b806307057382146100f8578063102462541461010f57806312065fe0146101425780632e1a7d4d14610169575b600080fd5b34801561010457600080fd5b5061010d610304565b005b34801561011b57600080fd5b5061010d6004803603602081101561013257600080fd5b50356001600160a01b031661062a565b34801561014e57600080fd5b5061015761067d565b60408051918252519081900360200190f35b34801561017557600080fd5b5061010d6004803603602081101561018c57600080fd5b5035610682565b34801561019f57600080fd5b5061010d61079d565b3480156101b457600080fd5b506101bd6107ee565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156101f95781810151838201526020016101e1565b505050509050019250505060405180910390f35b34801561021957600080fd5b506102406004803603602081101561023057600080fd5b50356001600160a01b03166108c1565b604080519115158252519081900360200190f35b34801561026057600080fd5b506101576108d9565b34801561027557600080fd5b50610157610936565b34801561028a57600080fd5b5061010d610953565b34801561029f57600080fd5b506101576109a2565b3480156102b457600080fd5b506102406109a8565b61010d6109b1565b3480156102d157600080fd5b50610157610a2c565b3480156102e657600080fd5b5061010d610a32565b3480156102fb57600080fd5b5061010d610a3b565b61030d336108c1565b61034b57604051600160e51b62461bcd0281526004018080602001828103825260318152602001806111656031913960400191505060405180910390fd5b60015460ff161561039e5760408051600160e51b62461bcd0281526020600482015260126024820152600160721b7110dbdb9d1c9858dd081a5cc81c185d5cd95902604482015290519081900360640190fd5b6006546000906103b69030319063ffffffff610ad416565b9050600081116104105760408051600160e51b62461bcd02815260206004820152601b60248201527f436f6e74657374616e745465616d2062616c616e636520697320300000000000604482015290519081900360640190fd5b600061042760035483610b3490919063ffffffff16565b9050600081116104815760408051600160e51b62461bcd02815260206004820152601160248201527f4d656d626572207072697a652069732030000000000000000000000000000000604482015290519081900360640190fd5b600061048f82600354610ba1565b90506000805b600254811015610541576000600282815481106104ae57fe5b60009182526020808320909101546001600160a01b0316808352600490915260409091205490915060ff16151560011415610538576001600160a01b03811660009081526005602052604090205461050c908663ffffffff610c0416565b6001600160a01b038216600090815260056020526040902055610535838663ffffffff610c0416565b92505b50600101610495565b50600654610555908563ffffffff610c0416565b60065580821461059957604051600160e51b62461bcd0281526004018080602001828103825260248152602001806110b36024913960400191505060405180910390fd5b6006543031146105dd57604051600160e51b62461bcd02815260040180806020018281038252602a8152602001806110d7602a913960400191505060405180910390fd5b60035460408051868152602081019290925281810185905251429133917f347ce84d9ed7334a67bdbc36e6519fbbc870a22468c5fa79fcbb5d68f5bc220d9181900360600190a350505050565b610633336108c1565b61067157604051600160e51b62461bcd0281526004018080602001828103825260318152602001806111656031913960400191505060405180910390fd5b61067a81610c61565b50565b303190565b336000908152600560205260409020548111156106e95760408051600160e51b62461bcd02815260206004820152601260248201527f4e6f7420656e6f7567682062616c616e63650000000000000000000000000000604482015290519081900360640190fd5b33600090815260056020526040902054610709818363ffffffff610ad416565b336000908152600560205260409020819055600654909150610731908363ffffffff610ad416565b600655604051339083156108fc029084906000818181858888f19350505050158015610761573d6000803e3d6000fd5b50604080518381529051429133917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689181900360200190a35050565b6107a6336108c1565b6107e457604051600160e51b62461bcd0281526004018080602001828103825260318152602001806111656031913960400191505060405180910390fd5b6107ec610d31565b565b600254600354606091101561080257600080fd5b6060600354604051908082528060200260200182016040528015610830578160200160208202803883390190505b50905060005b6002548110156108bb5760006002828154811061084f57fe5b60009182526020808320909101546001600160a01b0316808352600490915260409091205490915060ff161515600114156108b2578083838151811061089157fe5b60200260200101906001600160a01b031690816001600160a01b0316815250505b50600101610836565b50905090565b60006108d3818363ffffffff610d3916565b92915050565b60006108e4336108c1565b61092257604051600160e51b62461bcd0281526004018080602001828103825260318152602001806111656031913960400191505060405180910390fd5b503360009081526005602052604090205490565b60065460009061094e9030319063ffffffff610ad416565b905090565b61095c336108c1565b61099a57604051600160e51b62461bcd0281526004018080602001828103825260318152602001806111656031913960400191505060405180910390fd5b6107ec610da3565b60035490565b60015460ff1690565b600034116109f357604051600160e51b62461bcd0281526004018080602001828103825260218152602001806110926021913960400191505060405180910390fd5b604080513481529051429133917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159181900360200190a3565b60065490565b6107ec33610dab565b60015460ff16610a955760408051600160e51b62461bcd02815260206004820152601660248201527f436f6e7472616374206973206e6f742070617573656400000000000000000000604482015290519081900360640190fd5b6001805460ff191690556040805133815290517f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa9181900360200190a1565b600082821115610b2e5760408051600160e51b62461bcd02815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6000808211610b8d5760408051600160e51b62461bcd02815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b6000828481610b9857fe5b04949350505050565b600082610bb0575060006108d3565b82820282848281610bbd57fe5b0414610bfd57604051600160e51b62461bcd0281526004018080602001828103825260218152602001806111226021913960400191505060405180910390fd5b9392505050565b600082820183811015610bfd5760408051600160e51b62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60015460ff1615610cb45760408051600160e51b62461bcd0281526020600482015260126024820152600160721b7110dbdb9d1c9858dd081a5cc81c185d5cd95902604482015290519081900360640190fd5b610cbd81610e7f565b6002805460018082019092557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0384169081179091556000908152600460205260409020805460ff191682179055600354610d2b91610c04565b60035550565b6107ec610a3b565b60006001600160a01b038216610d8357604051600160e51b62461bcd0281526004018080602001828103825260228152602001806111436022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6107ec610ec7565b60015460ff1615610dfe5760408051600160e51b62461bcd0281526020600482015260126024820152600160721b7110dbdb9d1c9858dd081a5cc81c185d5cd95902604482015290519081900360640190fd5b600160035411610e4257604051600160e51b62461bcd0281526004018080602001828103825260278152602001806111966027913960400191505060405180910390fd5b610e4b81610f5b565b6001600160a01b0381166000908152600460205260409020805460ff19169055600354610d2b90600163ffffffff610ad416565b610e9060008263ffffffff610fa316565b6040516001600160a01b038216907ff965229cbef17c17a2ced10d89ec5f669942d8dd77bd8a5debcaed392434504e90600090a250565b60015460ff1615610f1a5760408051600160e51b62461bcd0281526020600482015260126024820152600160721b7110dbdb9d1c9858dd081a5cc81c185d5cd95902604482015290519081900360640190fd5b6001805460ff1916811790556040805133815290517f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589181900360200190a1565b610f6c60008263ffffffff61102716565b6040516001600160a01b038216907fac9358f7f807517a7bfea84ce37617a495e55d78f95d2efadcdfbf94817220e090600090a250565b610fad8282610d39565b156110025760408051600160e51b62461bcd02815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6110318282610d39565b61106f57604051600160e51b62461bcd0281526004018080602001828103825260218152602001806111016021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff1916905556fe6d73672e76616c7565206d757374206265206772656174686572207468616e2030496e76616c69642073706c6974206265747765656e20616374697665206d656d6265727352657365727665642062616c616e63656420776173206e6f7420757064617465642070726f7065726c79526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373417474656e646565526f6c653a2063616c6c657220646f6573206e6f74206861766520417474656e64656520526f6c652e43616e6e6f742072656d6f7665206c617374206d656d6265722066726f6d20636f6e7472616374a165627a7a72305820a279ef7924ee8cc5b76ffc9d7634d0eb0d42007f4399f043a205faba7ef862bb0029",
  "sourceMap": "121:502:12:-;;;200:47;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;233:10:12;;1882:29:20;1874:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1946:29;1959:15;1946:12;;;:29;;:::i;:::-;-1:-1:-1;;1098:7:8;:15;;-1:-1:-1;;1098:15:8;;;121:502:12;;6584:248:2;1487:7:8;;;;1486:8;1478:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6656:27:2;6675:7;6656:18;;;;;:27;;:::i;:::-;6693:11;27:10:-1;;39:1;23:18;;;45:23;;;6693:25:2;;;;-1:-1:-1;;;;;;6693:25:2;-1:-1:-1;;;;;6693:25:2;;;;;;;;-1:-1:-1;6728:26:2;;;:17;6693:25;6728:26;;;;;;;:33;;-1:-1:-1;;6728:33:2;;;;;6796:22;;:29;;:22;;:26;;;;;:29;;:::i;:::-;6771:22;:54;-1:-1:-1;6584:248:2:o;2434:125:20:-;2492:23;2507:7;2492:10;:14;;;;;;:23;;;;:::i;:::-;2530:22;;-1:-1:-1;;;;;2530:22:20;;;;;;;;2434:125;:::o;834:176:26:-;892:7;923:5;;;946:6;;;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:26:o;260:175:25:-;337:18;341:4;347:7;337:3;;;:18;;:::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:25;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:25;424:4;401:27;;;260:175::o;779:200::-;851:4;-1:-1:-1;;;;;875:21:25;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:25;:11;:20;;;;;;;;;;;;;;;779:200::o;121:502:12:-;;;;;;;",
  "deployedSourceMap": "121:502:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2304:1752:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2304:1752:2;;;:::i;:::-;;2247:96:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2247:96:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2247:96:20;-1:-1:-1;;;;;2247:96:20;;:::i;524:97:12:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;524:97:12;;;:::i;:::-;;;;;;;;;;;;;;;;4376:511:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4376:511:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4376:511:2;;:::i;6391:71::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6391:71:2;;;:::i;5029:598::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5029:598:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5029:598:2;;;;;;;;;;;;;;;;;2130:111:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2130:111:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2130:111:20;-1:-1:-1;;;;;2130:111:20;;:::i;:::-;;;;;;;;;;;;;;;;;;5950:108:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5950:108:2;;;:::i;391:127:12:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;391:127:12;;;:::i;6192:67:2:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6192:67:2;;;:::i;5739:111::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5739:111:2;;;:::i;1271:78:8:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1271:78:8;;;:::i;348:162:19:-;;;:::i;286:99:12:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;286:99:12;;;:::i;2349:79:20:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2349:79:20;;;:::i;2448:105:8:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2448:105:8;;;:::i;2304:1752:2:-;2030:22:20;2041:10;2030;:22::i;:::-;2022:84;;;;-1:-1:-1;;;;;2022:84:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1487:7:8;;;;1486:8;1478:39;;;;;-1:-1:-1;;;;;1478:39:8;;;;;;;;;;;;-1:-1:-1;;;;;1478:39:8;;;;;;;;;;;;;;;2522:15:2;;2469:24;;2496:42;;2504:4;2496:21;;:42;:25;:42;:::i;:::-;2469:69;;2575:1;2556:16;:20;2548:60;;;;;-1:-1:-1;;;;;2548:60:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;2619:13;2635:44;2656:22;;2635:16;:20;;:44;;;;:::i;:::-;2619:60;;2705:1;2697:5;:9;2689:39;;;;;-1:-1:-1;;;;;2689:39:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;2739:28;2770:43;2783:5;2790:22;;2770:12;:43::i;:::-;2739:74;-1:-1:-1;2823:24:2;;2858:364;2890:11;:18;2882:26;;2858:364;;;2933:14;2950:11;2962:5;2950:18;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2950:18:2;3034:25;;;:17;:25;;;;;;;;2950:18;;-1:-1:-1;3034:25:2;;:33;;2950:18;3034:33;3030:182;;;-1:-1:-1;;;;;3106:16:2;;;;;;:8;:16;;;;;;:27;;3127:5;3106:27;:20;:27;:::i;:::-;-1:-1:-1;;;;;3087:16:2;;;;;;:8;:16;;;;;:46;3170:27;:16;3191:5;3170:27;:20;:27;:::i;:::-;3151:46;;3030:182;-1:-1:-1;2910:7:2;;2858:364;;;-1:-1:-1;3325:15:2;;:37;;3345:16;3325:37;:19;:37;:::i;:::-;3307:15;:55;3772:40;;;3764:89;;;;-1:-1:-1;;;;;3764:89:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3896:15;;3879:4;3871:21;:40;3863:95;;;;-1:-1:-1;;;;;3863:95:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4014:22;;3973:76;;;;;;;;;;;;;;;;;;;;4045:3;;3984:10;;3973:76;;;;;;;;;1527:1:8;;;;2304:1752:2:o;2247:96:20:-;2030:22;2041:10;2030;:22::i;:::-;2022:84;;;;-1:-1:-1;;;;;2022:84:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2315:21;2328:7;2315:12;:21::i;:::-;2247:96;:::o;524:97:12:-;601:4;593:21;524:97;:::o;4376:511:2:-;4446:10;4437:20;;;;:8;:20;;;;;;:30;-1:-1:-1;4437:30:2;4429:61;;;;;-1:-1:-1;;;;;4429:61:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;4534:10;4500:22;4525:20;;;:8;:20;;;;;;4572:26;4525:20;4591:6;4572:26;:18;:26;:::i;:::-;4617:10;4608:20;;;;:8;:20;;;;;:37;;;4768:15;;4555:43;;-1:-1:-1;4768:27:2;;4788:6;4768:27;:19;:27;:::i;:::-;4750:15;:45;4805:27;;:10;;:27;;;;;4825:6;;4805:27;;;;4825:6;4805:10;:27;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;4847:33:2;;;;;;;;4876:3;;4856:10;;4847:33;;;;;;;;;4376:511;;:::o;6391:71::-;2030:22:20;2041:10;2030;:22::i;:::-;2022:84;;;;-1:-1:-1;;;;;2022:84:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6440:15:2;:13;:15::i;:::-;6391:71::o;5029:598::-;5140:11;:18;5114:22;;5078:16;;-1:-1:-1;5114:44:2;5106:53;;;;;;5169:30;5216:22;;5202:37;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;5202:37:2;-1:-1:-1;5169:70:2;-1:-1:-1;5361:13:2;5356:235;5388:11;:18;5380:26;;5356:235;;;5431:14;5448:11;5460:5;5448:18;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5448:18:2;5484:25;;;:17;:25;;;;;;;;5448:18;;-1:-1:-1;5484:25:2;;:33;;5448:18;5484:33;5480:101;;;5560:6;5537:13;5551:5;5537:20;;;;;;;;;;;;;:29;-1:-1:-1;;;;;5537:29:2;;;-1:-1:-1;;;;;5537:29:2;;;;;5480:101;-1:-1:-1;5408:7:2;;5356:235;;;-1:-1:-1;5607:13:2;-1:-1:-1;5029:598:2;:::o;2130:111:20:-;2188:4;2211:23;2188:4;2226:7;2211:23;:14;:23;:::i;:::-;2204:30;2130:111;-1:-1:-1;;2130:111:20:o;5950:108:2:-;6005:7;2030:22:20;2041:10;2030;:22::i;:::-;2022:84;;;;-1:-1:-1;;;;;2022:84:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6040:10:2;6031:20;;;;:8;:20;;;;;;5950:108;:::o;391:127:12:-;495:15;;443:7;;469:42;;477:4;469:21;;:42;:25;:42;:::i;:::-;462:49;;391:127;:::o;6192:67:2:-;2030:22:20;2041:10;2030;:22::i;:::-;2022:84;;;;-1:-1:-1;;;;;2022:84:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6239:13:2;:11;:13::i;5739:111::-;5821:22;;5739:111;:::o;1271:78:8:-;1335:7;;;;1271:78;:::o;348:162:19:-;414:1;402:9;:13;394:59;;;;-1:-1:-1;;;;;394:59:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;468:35;;;488:9;468:35;;;;499:3;;476:10;;468:35;;;;;;;;;348:162::o;286:99:12:-;363:15;;286:99;:::o;2349:79:20:-;2394:27;2410:10;2394:15;:27::i;2448:105:8:-;1665:7;;;;1657:42;;;;;-1:-1:-1;;;;;1657:42:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;2496:7;:15;;-1:-1:-1;;2496:15:8;;;2526:20;;;2535:10;2526:20;;;;;;;;;;;;;2448:105::o;1274:179:26:-;1332:7;1364:1;1359;:6;;1351:49;;;;;-1:-1:-1;;;;;1351:49:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1422:5:26;;;1274:179::o;2606:326::-;2664:7;2761:1;2757;:5;2749:44;;;;;-1:-1:-1;;;;;2749:44:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;2803:9;2819:1;2815;:5;;;;;;;2606:326;-1:-1:-1;;;;2606:326:26:o;1693:458::-;1751:7;1991:6;1987:45;;-1:-1:-1;2020:1:26;2013:8;;1987:45;2054:5;;;2058:1;2054;:5;:1;2077:5;;;;;:10;2069:56;;;;-1:-1:-1;;;;;2069:56:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2143:1;1693:458;-1:-1:-1;;;1693:458:26:o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;;;938:46:26;;;;;;;;;;;;;;;;;;;;;;;;;;;6584:248:2;1487:7:8;;;;1486:8;1478:39;;;;;-1:-1:-1;;;;;1478:39:8;;;;;;;;;;;;-1:-1:-1;;;;;1478:39:8;;;;;;;;;;;;;;;6656:27:2;6675:7;6656:18;:27::i;:::-;6693:11;27:10:-1;;39:1;23:18;;;45:23;;;6693:25:2;;;;-1:-1:-1;;;;;;6693:25:2;-1:-1:-1;;;;;6693:25:2;;;;;;;;-1:-1:-1;6728:26:2;;;:17;6693:25;6728:26;;;;:33;;-1:-1:-1;;6728:33:2;;;;;6796:22;;:29;;:26;:29::i;:::-;6771:22;:54;-1:-1:-1;6584:248:2:o;2143:53:8:-;2179:10;:8;:10::i;779:200:25:-;851:4;-1:-1:-1;;;;;875:21:25;;867:68;;;;-1:-1:-1;;;;;867:68:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:25;:11;:20;;;;;;;;;;;;;;;779:200::o;1906:49:8:-;1940:8;:6;:8::i;6954:374:2:-;1487:7:8;;;;1486:8;1478:39;;;;;-1:-1:-1;;;;;1478:39:8;;;;;;;;;;;;-1:-1:-1;;;;;1478:39:8;;;;;;;;;;;;;;;7128:1:2;7103:22;;:26;7095:78;;;;-1:-1:-1;;;;;7095:78:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7183:30;7205:7;7183:21;:30::i;:::-;-1:-1:-1;;;;;7223:26:2;;7252:5;7223:26;;;:17;:26;;;;;:34;;-1:-1:-1;;7223:34:2;;;7292:22;;:29;;7223:34;7292:29;:26;:29;:::i;2434:125:20:-;2492:23;:10;2507:7;2492:23;:14;:23;:::i;:::-;2530:22;;-1:-1:-1;;;;;2530:22:20;;;;;;;;2434:125;:::o;2271:105:8:-;1487:7;;;;1486:8;1478:39;;;;;-1:-1:-1;;;;;1478:39:8;;;;;;;;;;;;-1:-1:-1;;;;;1478:39:8;;;;;;;;;;;;;;;2332:4;2322:14;;-1:-1:-1;;2322:14:8;;;;;2351:18;;;2358:10;2351:18;;;;;;;;;;;;;2271:105::o;2565:133:20:-;2626:26;:10;2644:7;2626:26;:17;:26;:::i;:::-;2667:24;;-1:-1:-1;;;;;2667:24:20;;;;;;;;2565:133;:::o;260:175:25:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;;;328:63:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:25;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:25;424:4;401:27;;;260:175::o;510:180::-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;-1:-1:-1;;;;;581:64:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;655:20:25;678:5;655:20;;;;;;;;;;;:28;;-1:-1:-1;;655:28:25;;;510:180::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\n\nimport \"../core/ContestTeam.sol\";\n\ncontract ContestTeamMock is ContestTeam {\n    using SafeMath for uint256;\n\n    constructor() public ContestTeam(msg.sender) {}\n\n    // Helper testing functions.\n    function getReservedBalance() public view returns (uint256) {\n        return reservedBalance;\n    }\n\n    function getAvailableBalance() public view returns (uint256) {\n        return address(this).balance.sub(reservedBalance);\n    }\n\n    function getBalance() public view returns (uint256) {\n        return address(this).balance;\n    }\n}\n",
  "sourcePath": "/home/odisi/dev/projects/hackapay/contracts/mocks/ContestTeamMock.sol",
  "ast": {
    "absolutePath": "/home/odisi/dev/projects/hackapay/contracts/mocks/ContestTeamMock.sol",
    "exportedSymbols": {
      "ContestTeamMock": [2639]
    },
    "id": 2640,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2590,
        "literals": ["solidity", "^", "0.5", ".0"],
        "nodeType": "PragmaDirective",
        "src": "0:23:12"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 2591,
        "nodeType": "ImportDirective",
        "scope": 2640,
        "sourceUnit": 4219,
        "src": "25:59:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/odisi/dev/projects/hackapay/contracts/core/ContestTeam.sol",
        "file": "../core/ContestTeam.sol",
        "id": 2592,
        "nodeType": "ImportDirective",
        "scope": 2640,
        "sourceUnit": 1067,
        "src": "86:33:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2593,
              "name": "ContestTeam",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1066,
              "src": "149:11:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ContestTeam_$1066",
                "typeString": "contract ContestTeam"
              }
            },
            "id": 2594,
            "nodeType": "InheritanceSpecifier",
            "src": "149:11:12"
          }
        ],
        "contractDependencies": [1066, 2494, 2872, 2906, 3020],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2639,
        "linearizedBaseContracts": [2639, 1066, 2494, 3020, 2906, 2872],
        "name": "ContestTeamMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2597,
            "libraryName": {
              "contractScope": null,
              "id": 2595,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4218,
              "src": "173:8:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$4218",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "167:27:12",
            "typeName": {
              "id": 2596,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "186:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 2604,
              "nodeType": "Block",
              "src": "245:2:12",
              "statements": []
            },
            "documentation": null,
            "id": 2605,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2600,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4233,
                      "src": "233:3:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 2601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "233:10:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 2602,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2599,
                  "name": "ContestTeam",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1066,
                  "src": "221:11:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ContestTeam_$1066_$",
                    "typeString": "type(contract ContestTeam)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "221:23:12"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "211:2:12"
            },
            "returnParameters": {
              "id": 2603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "245:0:12"
            },
            "scope": 2639,
            "src": "200:47:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2612,
              "nodeType": "Block",
              "src": "346:39:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2610,
                    "name": "reservedBalance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 678,
                    "src": "363:15:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2609,
                  "id": 2611,
                  "nodeType": "Return",
                  "src": "356:22:12"
                }
              ]
            },
            "documentation": null,
            "id": 2613,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getReservedBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2606,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "313:2:12"
            },
            "returnParameters": {
              "id": 2609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2608,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2613,
                  "src": "337:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2607,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "337:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "336:9:12"
            },
            "scope": 2639,
            "src": "286:99:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2626,
              "nodeType": "Block",
              "src": "452:66:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2623,
                        "name": "reservedBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 678,
                        "src": "495:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2619,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4287,
                              "src": "477:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ContestTeamMock_$2639",
                                "typeString": "contract ContestTeamMock"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ContestTeamMock_$2639",
                                "typeString": "contract ContestTeamMock"
                              }
                            ],
                            "id": 2618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "469:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "469:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "469:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4137,
                      "src": "469:25:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "469:42:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2617,
                  "id": 2625,
                  "nodeType": "Return",
                  "src": "462:49:12"
                }
              ]
            },
            "documentation": null,
            "id": 2627,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAvailableBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2614,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "419:2:12"
            },
            "returnParameters": {
              "id": 2617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2616,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2627,
                  "src": "443:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2615,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "443:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "442:9:12"
            },
            "scope": 2639,
            "src": "391:127:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2637,
              "nodeType": "Block",
              "src": "576:45:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2633,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4287,
                          "src": "601:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ContestTeamMock_$2639",
                            "typeString": "contract ContestTeamMock"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ContestTeamMock_$2639",
                            "typeString": "contract ContestTeamMock"
                          }
                        ],
                        "id": 2632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "593:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 2634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "593:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "593:21:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2631,
                  "id": 2636,
                  "nodeType": "Return",
                  "src": "586:28:12"
                }
              ]
            },
            "documentation": null,
            "id": 2638,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "543:2:12"
            },
            "returnParameters": {
              "id": 2631,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2630,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2638,
                  "src": "567:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2629,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "567:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "566:9:12"
            },
            "scope": 2639,
            "src": "524:97:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2640,
        "src": "121:502:12"
      }
    ],
    "src": "0:624:12"
  },
  "legacyAST": {
    "absolutePath": "/home/odisi/dev/projects/hackapay/contracts/mocks/ContestTeamMock.sol",
    "exportedSymbols": {
      "ContestTeamMock": [2639]
    },
    "id": 2640,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2590,
        "literals": ["solidity", "^", "0.5", ".0"],
        "nodeType": "PragmaDirective",
        "src": "0:23:12"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 2591,
        "nodeType": "ImportDirective",
        "scope": 2640,
        "sourceUnit": 4219,
        "src": "25:59:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/odisi/dev/projects/hackapay/contracts/core/ContestTeam.sol",
        "file": "../core/ContestTeam.sol",
        "id": 2592,
        "nodeType": "ImportDirective",
        "scope": 2640,
        "sourceUnit": 1067,
        "src": "86:33:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2593,
              "name": "ContestTeam",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1066,
              "src": "149:11:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ContestTeam_$1066",
                "typeString": "contract ContestTeam"
              }
            },
            "id": 2594,
            "nodeType": "InheritanceSpecifier",
            "src": "149:11:12"
          }
        ],
        "contractDependencies": [1066, 2494, 2872, 2906, 3020],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2639,
        "linearizedBaseContracts": [2639, 1066, 2494, 3020, 2906, 2872],
        "name": "ContestTeamMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2597,
            "libraryName": {
              "contractScope": null,
              "id": 2595,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4218,
              "src": "173:8:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$4218",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "167:27:12",
            "typeName": {
              "id": 2596,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "186:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 2604,
              "nodeType": "Block",
              "src": "245:2:12",
              "statements": []
            },
            "documentation": null,
            "id": 2605,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2600,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4233,
                      "src": "233:3:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 2601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "233:10:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 2602,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2599,
                  "name": "ContestTeam",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1066,
                  "src": "221:11:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ContestTeam_$1066_$",
                    "typeString": "type(contract ContestTeam)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "221:23:12"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "211:2:12"
            },
            "returnParameters": {
              "id": 2603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "245:0:12"
            },
            "scope": 2639,
            "src": "200:47:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2612,
              "nodeType": "Block",
              "src": "346:39:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2610,
                    "name": "reservedBalance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 678,
                    "src": "363:15:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2609,
                  "id": 2611,
                  "nodeType": "Return",
                  "src": "356:22:12"
                }
              ]
            },
            "documentation": null,
            "id": 2613,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getReservedBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2606,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "313:2:12"
            },
            "returnParameters": {
              "id": 2609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2608,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2613,
                  "src": "337:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2607,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "337:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "336:9:12"
            },
            "scope": 2639,
            "src": "286:99:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2626,
              "nodeType": "Block",
              "src": "452:66:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2623,
                        "name": "reservedBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 678,
                        "src": "495:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2619,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4287,
                              "src": "477:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ContestTeamMock_$2639",
                                "typeString": "contract ContestTeamMock"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ContestTeamMock_$2639",
                                "typeString": "contract ContestTeamMock"
                              }
                            ],
                            "id": 2618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "469:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "469:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "469:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4137,
                      "src": "469:25:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "469:42:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2617,
                  "id": 2625,
                  "nodeType": "Return",
                  "src": "462:49:12"
                }
              ]
            },
            "documentation": null,
            "id": 2627,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAvailableBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2614,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "419:2:12"
            },
            "returnParameters": {
              "id": 2617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2616,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2627,
                  "src": "443:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2615,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "443:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "442:9:12"
            },
            "scope": 2639,
            "src": "391:127:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2637,
              "nodeType": "Block",
              "src": "576:45:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2633,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4287,
                          "src": "601:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ContestTeamMock_$2639",
                            "typeString": "contract ContestTeamMock"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ContestTeamMock_$2639",
                            "typeString": "contract ContestTeamMock"
                          }
                        ],
                        "id": 2632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "593:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 2634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "593:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "593:21:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2631,
                  "id": 2636,
                  "nodeType": "Return",
                  "src": "586:28:12"
                }
              ]
            },
            "documentation": null,
            "id": 2638,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "543:2:12"
            },
            "returnParameters": {
              "id": 2631,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2630,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2638,
                  "src": "567:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2629,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "567:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "566:9:12"
            },
            "scope": 2639,
            "src": "524:97:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2640,
        "src": "121:502:12"
      }
    ],
    "src": "0:624:12"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-07-31T17:11:29.870Z",
  "devdoc": {
    "methods": {
      "_unpause()": {
        "details": "Internal implementation that lifts the paused state."
      },
      "balanceOf()": {
        "return": "The balance of a team member"
      },
      "getActiveMembers()": {
        "return": "An array of addresses representing the accounts of active members "
      },
      "getActiveMembersCount()": {
        "return": "{uint256} Count of active members"
      },
      "isPaused()": {
        "return": "{true} if the contract is paused; otherwise, {false}."
      },
      "pause()": {
        "details": "Implements the onlyAttendee modifier for access control."
      },
      "splitPrize()": {
        "details": "Implements the \"withdraw pattern\" by allocating balances to team  members, so they can request a withdraw once the split is done."
      },
      "unpause()": {
        "details": "Implements the onlyAttendee modifier for access control."
      },
      "withdraw(uint256)": {
        "details": "Implements the \"withdraw pattern\" allowing members to withdraw funds. The method is public, so inactive members (that renounced membership) are still able to withdraw funds in case balance > 0. "
      }
    }
  },
  "userdoc": {
    "methods": {
      "balanceOf()": {
        "notice": "Get the balance of a team member"
      },
      "deposit()": {
        "notice": "Allows the contract to receive funds."
      },
      "getActiveMembers()": {
        "notice": "Gets the active members in the team."
      },
      "getActiveMembersCount()": {
        "notice": "Gets the number of active team members."
      },
      "isPaused()": {
        "notice": "Returns if the contract is paused or not."
      },
      "pause()": {
        "notice": "Trigger the paused state."
      },
      "splitPrize()": {
        "notice": "Splits the available's contract balance between active team members."
      },
      "unpause()": {
        "notice": "Lifts the paused state."
      },
      "withdraw(uint256)": {
        "notice": "Allows a team member to withdraw its funds from the contract."
      }
    }
  }
}
