{
  "contractName": "ContestTeamMock",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AttendeeAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AttendeeRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "datetime",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalPrize",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "membersCount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "memberPrize",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "datetime",
          "type": "uint256"
        }
      ],
      "name": "PrizeSplit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "datetime",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "_unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addAttendee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getActiveMembers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getActiveMembersCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAttendee",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceAttendee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "splitPrize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getReservedBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAvailableBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AttendeeAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AttendeeRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"datetime\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalPrize\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"membersCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"memberPrize\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"datetime\",\"type\":\"uint256\"}],\"name\":\"PrizeSplit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"datetime\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[],\"name\":\"_unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addAttendee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getActiveMembers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getActiveMembersCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAvailableBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getReservedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAttendee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceAttendee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"splitPrize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"_unpause()\":{\"details\":\"Internal implementation that lifts the paused state.\"},\"balanceOf()\":{\"return\":\"The balance of a team member\"},\"getActiveMembers()\":{\"return\":\"An array of addresses representing the accounts of active members\"},\"getActiveMembersCount()\":{\"return\":\"{uint256} Count of active members\"},\"isPaused()\":{\"return\":\"{true} if the contract is paused; otherwise, {false}.\"},\"pause()\":{\"details\":\"Implements the onlyAttendee modifier for access control.\"},\"splitPrize()\":{\"details\":\"Implements the \\\"withdraw pattern\\\" by allocating balances to team  members, so they can request a withdraw once the split is done.\"},\"unpause()\":{\"details\":\"Implements the onlyAttendee modifier for access control.\"},\"withdraw(uint256)\":{\"details\":\"Implements the \\\"withdraw pattern\\\" allowing members to withdraw funds. The method is public, so inactive members (that renounced membership) are still able to withdraw funds in case balance > 0. \"}}},\"userdoc\":{\"methods\":{\"balanceOf()\":{\"notice\":\"Get the balance of a team member\"},\"deposit()\":{\"notice\":\"Allows the contract to receive funds.\"},\"getActiveMembers()\":{\"notice\":\"Gets the active members in the team.\"},\"getActiveMembersCount()\":{\"notice\":\"Gets the number of active team members.\"},\"isPaused()\":{\"notice\":\"Returns if the contract is paused or not.\"},\"pause()\":{\"notice\":\"Trigger the paused state.\"},\"splitPrize()\":{\"notice\":\"Splits the available's contract balance between active team members.\"},\"unpause()\":{\"notice\":\"Lifts the paused state.\"},\"withdraw(uint256)\":{\"notice\":\"Allows a team member to withdraw its funds from the contract.\"}}}},\"settings\":{\"compilationTarget\":{\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/mocks/ContestTeamMock.sol\":\"ContestTeamMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/core/ContestTeam.sol\":{\"keccak256\":\"0x781c06cc1eee138ff6cd0f0eb880c7da011e21daf1dbc4124aaedebf583b9c52\",\"urls\":[\"bzz-raw://924a4b9054b85cc848eb1efafeffedebcc95bd83a5b6756ef8669b4f8c64f340\",\"dweb:/ipfs/QmTKJnczdfxGnKjxVa67CN3gzs79LdYcShqmi5q1N1W9VB\"]},\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/lifecycle/Pausable.sol\":{\"keccak256\":\"0x2314c8759b9bda6c2cb5dcc99b0add0b17db0b019cd33a2a5becdff30a456da3\",\"urls\":[\"bzz-raw://8bbf8609f574db7e97a064400391a0f8c1abe79433fa75c1b1f6baafe325a46b\",\"dweb:/ipfs/QmTJcAMjTasCEQpEBeemVggywmr7KrWGomJhr3pU5aLMvP\"]},\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/mocks/ContestTeamMock.sol\":{\"keccak256\":\"0x7beb3cb71561799934b08452afc670374511fabc9b50023f8d04c47504dfb0e9\",\"urls\":[\"bzz-raw://70a3589ced769c30e4724e8096a02c9dec09c3108b78ea10ff69ac26fec26b85\",\"dweb:/ipfs/QmcXxLnHqaE2jnKvbM4r3vgLZuWWaUMpZPnShnRG3QXi31\"]},\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/payment/IPayable.sol\":{\"keccak256\":\"0xb94cf25b516d077f8b3070bd3334aaedeb6bb4d5ddd025f196800b06f622b4db\",\"urls\":[\"bzz-raw://bd43ea25ee0e2f607a72550c26f8f43ae258412ddeabd80c5c1d536c850db665\",\"dweb:/ipfs/QmTPY3dX8FDwh4V6EBSGohiGoFMGrii3zE3u2vQfmbnehp\"]},\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/payment/Payable.sol\":{\"keccak256\":\"0x6eac2d42c4537946f2895a68e7e0923e6c448dbed9374a8a14643fc0405f5598\",\"urls\":[\"bzz-raw://046a8e0ebad9e8a6544c10d650c75f6d285b33bc79bdb7271ce20f526264a4de\",\"dweb:/ipfs/QmWmSAMe957bMfBkEB67KyAbX3STyYQSG3xo5DLjprVAxC\"]},\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/roles/AttendeeRole.sol\":{\"keccak256\":\"0xb8d02d384f4c6d33bab6afea9cb2001b08198908614877724fba7e63568be98b\",\"urls\":[\"bzz-raw://ed3543e6008fa8fa1839224ca6445454a56f0fbd3fffeb7b5ab55debf3e0466d\",\"dweb:/ipfs/QmPc2HhW8h25NEhLCHHmcRH2YYZ6V4wvLdpqdHU32pxHdg\"]},\"@openzeppelin/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5033808062000067576040805162461bcd60e51b815260206004820152601460248201527f496e76616c6964207a65726f2061646472657373000000000000000000000000604482015290519081900360640190fd5b6200007b816001600160e01b036200008d16565b50506001805460ff191690556200031f565b60015460ff1615620000db576040805162461bcd60e51b815260206004820152601260248201527110dbdb9d1c9858dd081a5cc81c185d5cd95960721b604482015290519081900360640190fd5b620000f1816200017560201b62000ece1760201c565b6002805460018082019092557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0384169081179091556000908152600460209081526040909120805460ff1916831790556003546200016f929091620001c7811b62000b6c17901c565b60035550565b620001908160006200022960201b62000fec1790919060201c565b6040516001600160a01b038216907ff965229cbef17c17a2ced10d89ec5f669942d8dd77bd8a5debcaed392434504e90600090a250565b60008282018381101562000222576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6200023e82826001600160e01b03620002b616565b1562000291576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b038216620002ff5760405162461bcd60e51b8152600401808060200182810382526022815260200180620015636022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b611234806200032f6000396000f3fe6080604052600436106100f35760003560e01c8063809dab6a1161008a578063d0e30db011610059578063d0e30db0146102bd578063d9a15549146102c5578063fb1da543146102da578063fc8234cb146102ef576100f3565b8063809dab6a146102695780638456cb591461027e5780638f7c851914610293578063b187bd26146102a8576100f3565b80633f4ba83a116100c65780633f4ba83a146101935780634876aebc146101a85780636cad25901461020d578063722713f714610254576100f3565b806307057382146100f8578063102462541461010f57806312065fe0146101425780632e1a7d4d14610169575b600080fd5b34801561010457600080fd5b5061010d610304565b005b34801561011b57600080fd5b5061010d6004803603602081101561013257600080fd5b50356001600160a01b0316610607565b34801561014e57600080fd5b50610157610657565b60408051918252519081900360200190f35b34801561017557600080fd5b5061010d6004803603602081101561018c57600080fd5b503561065b565b34801561019f57600080fd5b5061010d610768565b3480156101b457600080fd5b506101bd6107b6565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156101f95781810151838201526020016101e1565b505050509050019250505060405180910390f35b34801561021957600080fd5b506102406004803603602081101561023057600080fd5b50356001600160a01b0316610889565b604080519115158252519081900360200190f35b34801561026057600080fd5b506101576108a1565b34801561027557600080fd5b506101576108fb565b34801561028a57600080fd5b5061010d610917565b34801561029f57600080fd5b50610157610963565b3480156102b457600080fd5b50610240610969565b61010d610972565b3480156102d157600080fd5b506101576109ea565b3480156102e657600080fd5b5061010d6109f0565b3480156102fb57600080fd5b5061010d6109f9565b61030d33610889565b6103485760405162461bcd60e51b81526004018080602001828103825260318152602001806111a86031913960400191505060405180910390fd5b60015460ff1615610395576040805162461bcd60e51b815260206004820152601260248201527110dbdb9d1c9858dd081a5cc81c185d5cd95960721b604482015290519081900360640190fd5b60006103ac60065447610a8890919063ffffffff16565b905060008111610403576040805162461bcd60e51b815260206004820152601b60248201527f436f6e74657374616e745465616d2062616c616e636520697320300000000000604482015290519081900360640190fd5b600061041a60035483610ad190919063ffffffff16565b905060008111610465576040805162461bcd60e51b815260206004820152601160248201527004d656d626572207072697a65206973203607c1b604482015290519081900360640190fd5b600061047382600354610b13565b90506000805b6002548110156105255760006002828154811061049257fe5b60009182526020808320909101546001600160a01b0316808352600490915260409091205490915060ff1615156001141561051c576001600160a01b0381166000908152600560205260409020546104f0908663ffffffff610b6c16565b6001600160a01b038216600090815260056020526040902055610519838663ffffffff610b6c16565b92505b50600101610479565b50600654610539908563ffffffff610b6c16565b60065580821461057a5760405162461bcd60e51b81526004018080602001828103825260248152602001806110f66024913960400191505060405180910390fd5b60065447146105ba5760405162461bcd60e51b815260040180806020018281038252602a81526020018061111a602a913960400191505060405180910390fd5b60035460408051868152602081019290925281810185905251429133917f347ce84d9ed7334a67bdbc36e6519fbbc870a22468c5fa79fcbb5d68f5bc220d9181900360600190a350505050565b61061033610889565b61064b5760405162461bcd60e51b81526004018080602001828103825260318152602001806111a86031913960400191505060405180910390fd5b61065481610bc6565b50565b4790565b336000908152600560205260409020548111156106b4576040805162461bcd60e51b81526020600482015260126024820152714e6f7420656e6f7567682062616c616e636560701b604482015290519081900360640190fd5b336000908152600560205260409020546106d4818363ffffffff610a8816565b3360009081526005602052604090208190556006549091506106fc908363ffffffff610a8816565b600655604051339083156108fc029084906000818181858888f1935050505015801561072c573d6000803e3d6000fd5b50604080518381529051429133917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689181900360200190a35050565b61077133610889565b6107ac5760405162461bcd60e51b81526004018080602001828103825260318152602001806111a86031913960400191505060405180910390fd5b6107b4610c90565b565b60025460035460609110156107ca57600080fd5b60606003546040519080825280602002602001820160405280156107f8578160200160208202803883390190505b50905060005b6002548110156108835760006002828154811061081757fe5b60009182526020808320909101546001600160a01b0316808352600490915260409091205490915060ff1615156001141561087a578083838151811061085957fe5b60200260200101906001600160a01b031690816001600160a01b0316815250505b506001016107fe565b50905090565b600061089b818363ffffffff610c9816565b92915050565b60006108ac33610889565b6108e75760405162461bcd60e51b81526004018080602001828103825260318152602001806111a86031913960400191505060405180910390fd5b503360009081526005602052604090205490565b600061091260065447610a8890919063ffffffff16565b905090565b61092033610889565b61095b5760405162461bcd60e51b81526004018080602001828103825260318152602001806111a86031913960400191505060405180910390fd5b6107b4610cff565b60035490565b60015460ff1690565b600034116109b15760405162461bcd60e51b81526004018080602001828103825260218152602001806110d56021913960400191505060405180910390fd5b604080513481529051429133917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159181900360200190a3565b60065490565b6107b433610d07565b60015460ff16610a49576040805162461bcd60e51b815260206004820152601660248201527510dbdb9d1c9858dd081a5cc81b9bdd081c185d5cd95960521b604482015290519081900360640190fd5b6001805460ff191690556040805133815290517f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa9181900360200190a1565b6000610aca83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610dd2565b9392505050565b6000610aca83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610e69565b600082610b225750600061089b565b82820282848281610b2f57fe5b0414610aca5760405162461bcd60e51b81526004018080602001828103825260218152602001806111656021913960400191505060405180910390fd5b600082820183811015610aca576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60015460ff1615610c13576040805162461bcd60e51b815260206004820152601260248201527110dbdb9d1c9858dd081a5cc81c185d5cd95960721b604482015290519081900360640190fd5b610c1c81610ece565b6002805460018082019092557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0384169081179091556000908152600460205260409020805460ff191682179055600354610c8a91610b6c565b60035550565b6107b46109f9565b60006001600160a01b038216610cdf5760405162461bcd60e51b81526004018080602001828103825260228152602001806111866022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6107b4610f16565b60015460ff1615610d54576040805162461bcd60e51b815260206004820152601260248201527110dbdb9d1c9858dd081a5cc81c185d5cd95960721b604482015290519081900360640190fd5b600160035411610d955760405162461bcd60e51b81526004018080602001828103825260278152602001806111d96027913960400191505060405180910390fd5b610d9e81610fa4565b6001600160a01b0381166000908152600460205260409020805460ff19169055600354610c8a90600163ffffffff610a8816565b60008184841115610e615760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610e26578181015183820152602001610e0e565b50505050905090810190601f168015610e535780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008183610eb85760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610e26578181015183820152602001610e0e565b506000838581610ec457fe5b0495945050505050565b610edf60008263ffffffff610fec16565b6040516001600160a01b038216907ff965229cbef17c17a2ced10d89ec5f669942d8dd77bd8a5debcaed392434504e90600090a250565b60015460ff1615610f63576040805162461bcd60e51b815260206004820152601260248201527110dbdb9d1c9858dd081a5cc81c185d5cd95960721b604482015290519081900360640190fd5b6001805460ff1916811790556040805133815290517f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589181900360200190a1565b610fb560008263ffffffff61106d16565b6040516001600160a01b038216907fac9358f7f807517a7bfea84ce37617a495e55d78f95d2efadcdfbf94817220e090600090a250565b610ff68282610c98565b15611048576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6110778282610c98565b6110b25760405162461bcd60e51b81526004018080602001828103825260218152602001806111446021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff1916905556fe6d73672e76616c7565206d757374206265206772656174686572207468616e2030496e76616c69642073706c6974206265747765656e20616374697665206d656d6265727352657365727665642062616c616e63656420776173206e6f7420757064617465642070726f7065726c79526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373417474656e646565526f6c653a2063616c6c657220646f6573206e6f74206861766520417474656e64656520526f6c652e43616e6e6f742072656d6f7665206c617374206d656d6265722066726f6d20636f6e7472616374a265627a7a7231582050a49807b9fd3a5e3f02c02a36eadfc9ce0dad6f2351cd61c0d6366d2cadf5e164736f6c63430005100032526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
  "deployedBytecode": "",
  "sourceMap": "113:502:11:-;;;192:47;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;225:10:11;;1874:29:19;1866:62;;;;;-1:-1:-1;;;1866:62:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;1938:29;1951:15;-1:-1:-1;;;;;1938:12:19;:29;:::i;:::-;-1:-1:-1;;1098:7:7;:15;;-1:-1:-1;;1098:15:7;;;113:502:11;;6575:248:2;1487:7:7;;;;1486:8;1478:39;;;;;-1:-1:-1;;;1478:39:7;;;;;;;;;;;;-1:-1:-1;;;1478:39:7;;;;;;;;;;;;;;;6647:27:2;6666:7;6647:18;;;;;:27;;:::i;:::-;6684:11;27:10:-1;;39:1;23:18;;;45:23;;;6684:25:2;;;;-1:-1:-1;;;;;;6684:25:2;-1:-1:-1;;;;;6684:25:2;;;;;;;;-1:-1:-1;6719:26:2;;;:17;6684:25;6719:26;;;;;;;:33;;-1:-1:-1;;6719:33:2;;;;;6787:22;;:29;;:22;;:26;;;;;:29;;:::i;:::-;6762:22;:54;-1:-1:-1;6575:248:2:o;2426:125:19:-;2484:23;2499:7;2484:10;:14;;;;;;:23;;;;:::i;:::-;2522:22;;-1:-1:-1;;;;;2522:22:19;;;;;;;;2426:125;:::o;834:176:25:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:25:o;260:175:24:-;337:18;341:4;347:7;-1:-1:-1;;;;;337:3:24;:18;:::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:24;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:24;424:4;401:27;;;260:175::o;779:200::-;851:4;-1:-1:-1;;;;;875:21:24;;867:68;;;;-1:-1:-1;;;867:68:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:24;:11;:20;;;;;;;;;;;;;;;779:200::o;113:502:11:-;;;;;;;",
  "deployedSourceMap": "113:502:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2296:1752:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2296:1752:2;;;:::i;:::-;;2239:96:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2239:96:19;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2239:96:19;-1:-1:-1;;;;;2239:96:19;;:::i;516:97:11:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;516:97:11;;;:::i;:::-;;;;;;;;;;;;;;;;4368:511:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4368:511:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4368:511:2;;:::i;6382:71::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6382:71:2;;;:::i;5020:598::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5020:598:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5020:598:2;;;;;;;;;;;;;;;;;2122:111:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2122:111:19;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2122:111:19;-1:-1:-1;;;;;2122:111:19;;:::i;:::-;;;;;;;;;;;;;;;;;;5941:108:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5941:108:2;;;:::i;383:127:11:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;383:127:11;;;:::i;6183:67:2:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6183:67:2;;;:::i;5730:111::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5730:111:2;;;:::i;1271:78:7:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1271:78:7;;;:::i;348:162:18:-;;;:::i;278:99:11:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;278:99:11;;;:::i;2341:79:19:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2341:79:19;;;:::i;2448:105:7:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2448:105:7;;;:::i;2296:1752:2:-;2022:22:19;2033:10;2022;:22::i;:::-;2014:84;;;;-1:-1:-1;;;2014:84:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1487:7:7;;;;1486:8;1478:39;;;;;-1:-1:-1;;;1478:39:7;;;;;;;;;;;;-1:-1:-1;;;1478:39:7;;;;;;;;;;;;;;;2461:24:2;2488:42;2514:15;;2488:21;:25;;:42;;;;:::i;:::-;2461:69;;2567:1;2548:16;:20;2540:60;;;;;-1:-1:-1;;;2540:60:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;2611:13;2627:44;2648:22;;2627:16;:20;;:44;;;;:::i;:::-;2611:60;;2697:1;2689:5;:9;2681:39;;;;;-1:-1:-1;;;2681:39:2;;;;;;;;;;;;-1:-1:-1;;;2681:39:2;;;;;;;;;;;;;;;2731:28;2762:43;2775:5;2782:22;;2762:12;:43::i;:::-;2731:74;-1:-1:-1;2815:24:2;;2850:364;2882:11;:18;2874:26;;2850:364;;;2925:14;2942:11;2954:5;2942:18;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2942:18:2;3026:25;;;:17;:25;;;;;;;;2942:18;;-1:-1:-1;3026:25:2;;:33;;2942:18;3026:33;3022:182;;;-1:-1:-1;;;;;3098:16:2;;;;;;:8;:16;;;;;;:27;;3119:5;3098:27;:20;:27;:::i;:::-;-1:-1:-1;;;;;3079:16:2;;;;;;:8;:16;;;;;:46;3162:27;:16;3183:5;3162:27;:20;:27;:::i;:::-;3143:46;;3022:182;-1:-1:-1;2902:7:2;;2850:364;;;-1:-1:-1;3317:15:2;;:37;;3337:16;3317:37;:19;:37;:::i;:::-;3299:15;:55;3764:40;;;3756:89;;;;-1:-1:-1;;;3756:89:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3888:15;;3863:21;:40;3855:95;;;;-1:-1:-1;;;3855:95:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4006:22;;3965:76;;;;;;;;;;;;;;;;;;;;4037:3;;3976:10;;3965:76;;;;;;;;;1527:1:7;;;;2296:1752:2:o;2239:96:19:-;2022:22;2033:10;2022;:22::i;:::-;2014:84;;;;-1:-1:-1;;;2014:84:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2307:21;2320:7;2307:12;:21::i;:::-;2239:96;:::o;516:97:11:-;585:21;516:97;:::o;4368:511:2:-;4438:10;4429:20;;;;:8;:20;;;;;;:30;-1:-1:-1;4429:30:2;4421:61;;;;;-1:-1:-1;;;4421:61:2;;;;;;;;;;;;-1:-1:-1;;;4421:61:2;;;;;;;;;;;;;;;4526:10;4492:22;4517:20;;;:8;:20;;;;;;4564:26;4517:20;4583:6;4564:26;:18;:26;:::i;:::-;4609:10;4600:20;;;;:8;:20;;;;;:37;;;4760:15;;4547:43;;-1:-1:-1;4760:27:2;;4780:6;4760:27;:19;:27;:::i;:::-;4742:15;:45;4797:27;;:10;;:27;;;;;4817:6;;4797:27;;;;4817:6;4797:10;:27;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;4839:33:2;;;;;;;;4868:3;;4848:10;;4839:33;;;;;;;;;4368:511;;:::o;6382:71::-;2022:22:19;2033:10;2022;:22::i;:::-;2014:84;;;;-1:-1:-1;;;2014:84:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6431:15:2;:13;:15::i;:::-;6382:71::o;5020:598::-;5131:11;:18;5105:22;;5069:16;;-1:-1:-1;5105:44:2;5097:53;;;;;;5160:30;5207:22;;5193:37;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;5193:37:2;-1:-1:-1;5160:70:2;-1:-1:-1;5352:13:2;5347:235;5379:11;:18;5371:26;;5347:235;;;5422:14;5439:11;5451:5;5439:18;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5439:18:2;5475:25;;;:17;:25;;;;;;;;5439:18;;-1:-1:-1;5475:25:2;;:33;;5439:18;5475:33;5471:101;;;5551:6;5528:13;5542:5;5528:20;;;;;;;;;;;;;:29;-1:-1:-1;;;;;5528:29:2;;;-1:-1:-1;;;;;5528:29:2;;;;;5471:101;-1:-1:-1;5399:7:2;;5347:235;;;-1:-1:-1;5598:13:2;-1:-1:-1;5020:598:2;:::o;2122:111:19:-;2180:4;2203:23;2180:4;2218:7;2203:23;:14;:23;:::i;:::-;2196:30;2122:111;-1:-1:-1;;2122:111:19:o;5941:108:2:-;5996:7;2022:22:19;2033:10;2022;:22::i;:::-;2014:84;;;;-1:-1:-1;;;2014:84:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6031:10:2;6022:20;;;;:8;:20;;;;;;5941:108;:::o;383:127:11:-;435:7;461:42;487:15;;461:21;:25;;:42;;;;:::i;:::-;454:49;;383:127;:::o;6183:67:2:-;2022:22:19;2033:10;2022;:22::i;:::-;2014:84;;;;-1:-1:-1;;;2014:84:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6230:13:2;:11;:13::i;5730:111::-;5812:22;;5730:111;:::o;1271:78:7:-;1335:7;;;;1271:78;:::o;348:162:18:-;414:1;402:9;:13;394:59;;;;-1:-1:-1;;;394:59:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;468:35;;;488:9;468:35;;;;499:3;;476:10;;468:35;;;;;;;;;348:162::o;278:99:11:-;355:15;;278:99;:::o;2341:79:19:-;2386:27;2402:10;2386:15;:27::i;2448:105:7:-;1665:7;;;;1657:42;;;;;-1:-1:-1;;;1657:42:7;;;;;;;;;;;;-1:-1:-1;;;1657:42:7;;;;;;;;;;;;;;;2496:7;:15;;-1:-1:-1;;2496:15:7;;;2526:20;;;2535:10;2526:20;;;;;;;;;;;;;2448:105::o;1274:134:25:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;1274:134;-1:-1:-1;;;1274:134:25:o;3073:130::-;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;2159:459::-;2217:7;2458:6;2454:45;;-1:-1:-1;2487:1:25;2480:8;;2454:45;2521:5;;;2525:1;2521;:5;:1;2544:5;;;;;:10;2536:56;;;;-1:-1:-1;;;2536:56:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;834:176;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:25;;;;;;;;;;;;;;;;;;;;;;;;;;;6575:248:2;1487:7:7;;;;1486:8;1478:39;;;;;-1:-1:-1;;;1478:39:7;;;;;;;;;;;;-1:-1:-1;;;1478:39:7;;;;;;;;;;;;;;;6647:27:2;6666:7;6647:18;:27::i;:::-;6684:11;27:10:-1;;39:1;23:18;;;45:23;;;6684:25:2;;;;-1:-1:-1;;;;;;6684:25:2;-1:-1:-1;;;;;6684:25:2;;;;;;;;-1:-1:-1;6719:26:2;;;:17;6684:25;6719:26;;;;:33;;-1:-1:-1;;6719:33:2;;;;;6787:22;;:29;;:26;:29::i;:::-;6762:22;:54;-1:-1:-1;6575:248:2:o;2143:53:7:-;2179:10;:8;:10::i;779:200:24:-;851:4;-1:-1:-1;;;;;875:21:24;;867:68;;;;-1:-1:-1;;;867:68:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:24;:11;:20;;;;;;;;;;;;;;;779:200::o;1906:49:7:-;1940:8;:6;:8::i;6945:374:2:-;1487:7:7;;;;1486:8;1478:39;;;;;-1:-1:-1;;;1478:39:7;;;;;;;;;;;;-1:-1:-1;;;1478:39:7;;;;;;;;;;;;;;;7119:1:2;7094:22;;:26;7086:78;;;;-1:-1:-1;;;7086:78:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7174:30;7196:7;7174:21;:30::i;:::-;-1:-1:-1;;;;;7214:26:2;;7243:5;7214:26;;;:17;:26;;;;;:34;;-1:-1:-1;;7214:34:2;;;7283:22;;:29;;7214:34;7283:29;:26;:29;:::i;1732:187:25:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:25;;;1732:187::o;3718:338::-;3804:7;3904:12;3897:5;3889:28;;;;-1:-1:-1;;;3889:28:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;3889:28:25;;3927:9;3943:1;3939;:5;;;;;;;3718:338;-1:-1:-1;;;;;3718:338:25:o;2426:125:19:-;2484:23;:10;2499:7;2484:23;:14;:23;:::i;:::-;2522:22;;-1:-1:-1;;;;;2522:22:19;;;;;;;;2426:125;:::o;2271:105:7:-;1487:7;;;;1486:8;1478:39;;;;;-1:-1:-1;;;1478:39:7;;;;;;;;;;;;-1:-1:-1;;;1478:39:7;;;;;;;;;;;;;;;2332:4;2322:14;;-1:-1:-1;;2322:14:7;;;;;2351:18;;;2358:10;2351:18;;;;;;;;;;;;;2271:105::o;2557:133:19:-;2618:26;:10;2636:7;2618:26;:17;:26;:::i;:::-;2659:24;;-1:-1:-1;;;;;2659:24:19;;;;;;;;2557:133;:::o;260:175:24:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:24;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:24;424:4;401:27;;;260:175::o;510:180::-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;-1:-1:-1;;;581:64:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;655:20:24;678:5;655:20;;;;;;;;;;;:28;;-1:-1:-1;;655:28:24;;;510:180::o",
  "source": "pragma solidity 0.5.16;\n\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\n\nimport \"../core/ContestTeam.sol\";\n\ncontract ContestTeamMock is ContestTeam {\n    using SafeMath for uint256;\n\n    constructor() public ContestTeam(msg.sender) {}\n\n    // Helper testing functions.\n    function getReservedBalance() public view returns (uint256) {\n        return reservedBalance;\n    }\n\n    function getAvailableBalance() public view returns (uint256) {\n        return address(this).balance.sub(reservedBalance);\n    }\n\n    function getBalance() public view returns (uint256) {\n        return address(this).balance;\n    }\n}\n",
  "sourcePath": "/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/mocks/ContestTeamMock.sol",
  "ast": {
    "absolutePath": "/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/mocks/ContestTeamMock.sol",
    "exportedSymbols": {
      "ContestTeamMock": [2628]
    },
    "id": 2629,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2579,
        "literals": ["solidity", "0.5", ".16"],
        "nodeType": "PragmaDirective",
        "src": "0:23:11"
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 2580,
        "nodeType": "ImportDirective",
        "scope": 2629,
        "sourceUnit": 4262,
        "src": "25:51:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/core/ContestTeam.sol",
        "file": "../core/ContestTeam.sol",
        "id": 2581,
        "nodeType": "ImportDirective",
        "scope": 2629,
        "sourceUnit": 1067,
        "src": "78:33:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2582,
              "name": "ContestTeam",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1066,
              "src": "141:11:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ContestTeam_$1066",
                "typeString": "contract ContestTeam"
              }
            },
            "id": 2583,
            "nodeType": "InheritanceSpecifier",
            "src": "141:11:11"
          }
        ],
        "contractDependencies": [1066, 2491, 2861, 2895, 3009],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2628,
        "linearizedBaseContracts": [2628, 1066, 2491, 3009, 2895, 2861],
        "name": "ContestTeamMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2586,
            "libraryName": {
              "contractScope": null,
              "id": 2584,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4261,
              "src": "165:8:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$4261",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "159:27:11",
            "typeName": {
              "id": 2585,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "178:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 2593,
              "nodeType": "Block",
              "src": "237:2:11",
              "statements": []
            },
            "documentation": null,
            "id": 2594,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2589,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4276,
                      "src": "225:3:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 2590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "225:10:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 2591,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2588,
                  "name": "ContestTeam",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1066,
                  "src": "213:11:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ContestTeam_$1066_$",
                    "typeString": "type(contract ContestTeam)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "213:23:11"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2587,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "203:2:11"
            },
            "returnParameters": {
              "id": 2592,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "237:0:11"
            },
            "scope": 2628,
            "src": "192:47:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2601,
              "nodeType": "Block",
              "src": "338:39:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2599,
                    "name": "reservedBalance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 678,
                    "src": "355:15:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2598,
                  "id": 2600,
                  "nodeType": "Return",
                  "src": "348:22:11"
                }
              ]
            },
            "documentation": null,
            "id": 2602,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getReservedBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "305:2:11"
            },
            "returnParameters": {
              "id": 2598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2597,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2602,
                  "src": "329:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2596,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "329:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "328:9:11"
            },
            "scope": 2628,
            "src": "278:99:11",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2615,
              "nodeType": "Block",
              "src": "444:66:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2612,
                        "name": "reservedBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 678,
                        "src": "487:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2608,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4328,
                              "src": "469:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ContestTeamMock_$2628",
                                "typeString": "contract ContestTeamMock"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ContestTeamMock_$2628",
                                "typeString": "contract ContestTeamMock"
                              }
                            ],
                            "id": 2607,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "461:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "461:13:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "461:21:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4117,
                      "src": "461:25:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "461:42:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2606,
                  "id": 2614,
                  "nodeType": "Return",
                  "src": "454:49:11"
                }
              ]
            },
            "documentation": null,
            "id": 2616,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAvailableBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "411:2:11"
            },
            "returnParameters": {
              "id": 2606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2605,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2616,
                  "src": "435:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2604,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "435:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "434:9:11"
            },
            "scope": 2628,
            "src": "383:127:11",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2626,
              "nodeType": "Block",
              "src": "568:45:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2622,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4328,
                          "src": "593:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ContestTeamMock_$2628",
                            "typeString": "contract ContestTeamMock"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ContestTeamMock_$2628",
                            "typeString": "contract ContestTeamMock"
                          }
                        ],
                        "id": 2621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "585:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 2623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "585:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "585:21:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2620,
                  "id": 2625,
                  "nodeType": "Return",
                  "src": "578:28:11"
                }
              ]
            },
            "documentation": null,
            "id": 2627,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2617,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "535:2:11"
            },
            "returnParameters": {
              "id": 2620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2619,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2627,
                  "src": "559:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2618,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "559:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "558:9:11"
            },
            "scope": 2628,
            "src": "516:97:11",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2629,
        "src": "113:502:11"
      }
    ],
    "src": "0:616:11"
  },
  "legacyAST": {
    "absolutePath": "/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/mocks/ContestTeamMock.sol",
    "exportedSymbols": {
      "ContestTeamMock": [2628]
    },
    "id": 2629,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2579,
        "literals": ["solidity", "0.5", ".16"],
        "nodeType": "PragmaDirective",
        "src": "0:23:11"
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 2580,
        "nodeType": "ImportDirective",
        "scope": 2629,
        "sourceUnit": 4262,
        "src": "25:51:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/core/ContestTeam.sol",
        "file": "../core/ContestTeam.sol",
        "id": 2581,
        "nodeType": "ImportDirective",
        "scope": 2629,
        "sourceUnit": 1067,
        "src": "78:33:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2582,
              "name": "ContestTeam",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1066,
              "src": "141:11:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ContestTeam_$1066",
                "typeString": "contract ContestTeam"
              }
            },
            "id": 2583,
            "nodeType": "InheritanceSpecifier",
            "src": "141:11:11"
          }
        ],
        "contractDependencies": [1066, 2491, 2861, 2895, 3009],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2628,
        "linearizedBaseContracts": [2628, 1066, 2491, 3009, 2895, 2861],
        "name": "ContestTeamMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2586,
            "libraryName": {
              "contractScope": null,
              "id": 2584,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4261,
              "src": "165:8:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$4261",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "159:27:11",
            "typeName": {
              "id": 2585,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "178:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 2593,
              "nodeType": "Block",
              "src": "237:2:11",
              "statements": []
            },
            "documentation": null,
            "id": 2594,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2589,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4276,
                      "src": "225:3:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 2590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "225:10:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 2591,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2588,
                  "name": "ContestTeam",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1066,
                  "src": "213:11:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ContestTeam_$1066_$",
                    "typeString": "type(contract ContestTeam)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "213:23:11"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2587,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "203:2:11"
            },
            "returnParameters": {
              "id": 2592,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "237:0:11"
            },
            "scope": 2628,
            "src": "192:47:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2601,
              "nodeType": "Block",
              "src": "338:39:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2599,
                    "name": "reservedBalance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 678,
                    "src": "355:15:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2598,
                  "id": 2600,
                  "nodeType": "Return",
                  "src": "348:22:11"
                }
              ]
            },
            "documentation": null,
            "id": 2602,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getReservedBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "305:2:11"
            },
            "returnParameters": {
              "id": 2598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2597,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2602,
                  "src": "329:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2596,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "329:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "328:9:11"
            },
            "scope": 2628,
            "src": "278:99:11",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2615,
              "nodeType": "Block",
              "src": "444:66:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2612,
                        "name": "reservedBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 678,
                        "src": "487:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2608,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4328,
                              "src": "469:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ContestTeamMock_$2628",
                                "typeString": "contract ContestTeamMock"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ContestTeamMock_$2628",
                                "typeString": "contract ContestTeamMock"
                              }
                            ],
                            "id": 2607,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "461:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "461:13:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "461:21:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4117,
                      "src": "461:25:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "461:42:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2606,
                  "id": 2614,
                  "nodeType": "Return",
                  "src": "454:49:11"
                }
              ]
            },
            "documentation": null,
            "id": 2616,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAvailableBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "411:2:11"
            },
            "returnParameters": {
              "id": 2606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2605,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2616,
                  "src": "435:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2604,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "435:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "434:9:11"
            },
            "scope": 2628,
            "src": "383:127:11",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2626,
              "nodeType": "Block",
              "src": "568:45:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2622,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4328,
                          "src": "593:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ContestTeamMock_$2628",
                            "typeString": "contract ContestTeamMock"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ContestTeamMock_$2628",
                            "typeString": "contract ContestTeamMock"
                          }
                        ],
                        "id": 2621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "585:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 2623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "585:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "585:21:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2620,
                  "id": 2625,
                  "nodeType": "Return",
                  "src": "578:28:11"
                }
              ]
            },
            "documentation": null,
            "id": 2627,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2617,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "535:2:11"
            },
            "returnParameters": {
              "id": 2620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2619,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2627,
                  "src": "559:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2618,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "559:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "558:9:11"
            },
            "scope": 2628,
            "src": "516:97:11",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2629,
        "src": "113:502:11"
      }
    ],
    "src": "0:616:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-03-09T03:26:21.876Z",
  "devdoc": {
    "methods": {
      "_unpause()": {
        "details": "Internal implementation that lifts the paused state."
      },
      "balanceOf()": {
        "return": "The balance of a team member"
      },
      "getActiveMembers()": {
        "return": "An array of addresses representing the accounts of active members"
      },
      "getActiveMembersCount()": {
        "return": "{uint256} Count of active members"
      },
      "isPaused()": {
        "return": "{true} if the contract is paused; otherwise, {false}."
      },
      "pause()": {
        "details": "Implements the onlyAttendee modifier for access control."
      },
      "splitPrize()": {
        "details": "Implements the \"withdraw pattern\" by allocating balances to team  members, so they can request a withdraw once the split is done."
      },
      "unpause()": {
        "details": "Implements the onlyAttendee modifier for access control."
      },
      "withdraw(uint256)": {
        "details": "Implements the \"withdraw pattern\" allowing members to withdraw funds. The method is public, so inactive members (that renounced membership) are still able to withdraw funds in case balance > 0. "
      }
    }
  },
  "userdoc": {
    "methods": {
      "balanceOf()": {
        "notice": "Get the balance of a team member"
      },
      "deposit()": {
        "notice": "Allows the contract to receive funds."
      },
      "getActiveMembers()": {
        "notice": "Gets the active members in the team."
      },
      "getActiveMembersCount()": {
        "notice": "Gets the number of active team members."
      },
      "isPaused()": {
        "notice": "Returns if the contract is paused or not."
      },
      "pause()": {
        "notice": "Trigger the paused state."
      },
      "splitPrize()": {
        "notice": "Splits the available's contract balance between active team members."
      },
      "unpause()": {
        "notice": "Lifts the paused state."
      },
      "withdraw(uint256)": {
        "notice": "Allows a team member to withdraw its funds from the contract."
      }
    }
  }
}
