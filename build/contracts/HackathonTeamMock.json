{
  "contractName": "HackathonTeamMock",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "splitPrize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addAttendee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getActiveMembers",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAttendee",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getActiveMembersCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceAttendee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "datetime",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "datetime",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "totalPrize",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "membersCount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "memberPrize",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "datetime",
          "type": "uint256"
        }
      ],
      "name": "PrizeSplit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AttendeeAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AttendeeRemoved",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getReservedBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAvailableBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"splitPrize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addAttendee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getActiveMembers\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAttendee\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAvailableBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getActiveMembersCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getReservedBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceAttendee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"datetime\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"datetime\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"totalPrize\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"membersCount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"memberPrize\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"datetime\",\"type\":\"uint256\"}],\"name\":\"PrizeSplit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AttendeeAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AttendeeRemoved\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"splitPrize()\":{\"details\":\"Implements the \\\"withdraw pattern\\\" by allocating balances to team  members, so they can request a withdraw once the split is done.\"},\"withdraw(uint256)\":{\"details\":\"Implements the \\\"withdraw pattern\\\" allowing members to withdraw funds. The method is public, so inactive members (that renounced membership) are still able to withdraw funds in case balance > 0. \"}}},\"userdoc\":{\"methods\":{\"balanceOf()\":{\"notice\":\"Get the balance of a team member\"},\"deposit()\":{\"notice\":\"Allows the contract to receive funds.\"},\"getActiveMembers()\":{\"notice\":\"Gets the active members in the team.\"},\"getActiveMembersCount()\":{\"notice\":\"Gets the number of active team members.\"},\"splitPrize()\":{\"notice\":\"Splits the available's contract balance between active team members.\"},\"withdraw(uint256)\":{\"notice\":\"Allows a team member to withdraw its funds from the contract.\"}}}},\"settings\":{\"compilationTarget\":{\"/home/odisi/dev/projects/hackapay/contracts/mocks/HackathonTeamMock.sol\":\"HackathonTeamMock\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/odisi/dev/projects/hackapay/contracts/core/HackathonTeam.sol\":{\"keccak256\":\"0x3c664cdb3a84c56b45d3666e0200ca1bc96f2d35247d15e2f1d900721871d0fd\",\"urls\":[\"bzzr://33b86a2d1ee81f17dc827daeed14f0d2cca527889a36e389a0e1fa4fab45bdb2\"]},\"/home/odisi/dev/projects/hackapay/contracts/core/IPayableHackathonTeam.sol\":{\"keccak256\":\"0x11ed89920956d40e83eb30292ea9b5f2d0854aba783608357681f4c83853cce8\",\"urls\":[\"bzzr://35d1e4fdd05d567433a0251eb77aeed15e4a9702986237957d54fdac3ec2c0b6\"]},\"/home/odisi/dev/projects/hackapay/contracts/mocks/HackathonTeamMock.sol\":{\"keccak256\":\"0x55241399636bf96f8ab9b09f55a7a0a40834e6beca64277954538fd0c4ea8b7e\",\"urls\":[\"bzzr://51f55d5f950da039a8cf0859601eeffb25a8d7a585ec493a945c90e46c3da61e\"]},\"/home/odisi/dev/projects/hackapay/contracts/roles/AttendeeRole.sol\":{\"keccak256\":\"0xc40f9d8837a29933ff264cda56ce6d909642a3668c03ffd53d17370a7f815809\",\"urls\":[\"bzzr://74f26a793547333c1c314d53fc98efc258d882d3df3ed3547dd767963937b2bb\"]},\"openzeppelin-solidity/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzzr://bd34c1ce05b5b2b3a62fc02e160f6805b1cadd476854664f433c685b2fda8dad\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzzr://1604f5b6d6e916c154efd8c6720cda069e5ba32dfa0a9dedf2b42e5b02d07f89\"]}},\"version\":1}",
  "bytecode": "0x608060405262000015336200001b60201b60201c565b620003c3565b62000031816200011560201b6200117e1760201c565b60018190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506200010c60016002546200017660201b62000e571790919060201c565b60028190555050565b62000130816000620001ff60201b620012321790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167ff965229cbef17c17a2ced10d89ec5f669942d8dd77bd8a5debcaed392434504e60405160405180910390a250565b600080828401905083811015620001f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b620002118282620002e360201b60201c565b1562000285576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200036c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180620018f46022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61152180620003d36000396000f3fe60806040526004361061009c5760003560e01c8063722713f711610064578063722713f714610219578063809dab6a146102445780638f7c85191461026f578063d0e30db01461029a578063d9a15549146102a4578063fb1da543146102cf5761009c565b806307057382146100a157806310246254146100b85780632e1a7d4d146101095780634876aebc146101445780636cad2590146101b0575b600080fd5b3480156100ad57600080fd5b506100b66102e6565b005b3480156100c457600080fd5b50610107600480360360208110156100db57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610738565b005b34801561011557600080fd5b506101426004803603602081101561012c57600080fd5b81019080803590602001909291905050506107a2565b005b34801561015057600080fd5b506101596109a9565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561019c578082015181840152602081019050610181565b505050509050019250505060405180910390f35b3480156101bc57600080fd5b506101ff600480360360208110156101d357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610afb565b604051808215151515815260200191505060405180910390f35b34801561022557600080fd5b5061022e610b18565b6040518082815260200191505060405180910390f35b34801561025057600080fd5b50610259610bbd565b6040518082815260200191505060405180910390f35b34801561027b57600080fd5b50610284610bf0565b6040518082815260200191505060405180910390f35b6102a2610bfa565b005b3480156102b057600080fd5b506102b9610ca4565b6040518082815260200191505060405180910390f35b3480156102db57600080fd5b506102e4610cae565b005b6102ef33610afb565b610344576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603181526020018061149e6031913960400191505060405180910390fd5b60006103726005543073ffffffffffffffffffffffffffffffffffffffff1631610cb990919063ffffffff16565b9050600081116103ea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f436f6e74657374616e745465616d2062616c616e63652069732030000000000081525060200191505060405180910390fd5b600061040160025483610d4290919063ffffffff16565b905060008111610479576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4d656d626572207072697a65206973203000000000000000000000000000000081525060200191505060405180910390fd5b600061048782600254610dd1565b9050600080600090505b6001805490508110156105ec576000600182815481106104ad57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060011515600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514156105de5761058585600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e5790919063ffffffff16565b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506105db8584610e5790919063ffffffff16565b92505b508080600101915050610491565b5061060284600554610e5790919063ffffffff16565b600581905550818114610660576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806113ec6024913960400191505060405180910390fd5b6005543073ffffffffffffffffffffffffffffffffffffffff1631146106d1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180611410602a913960400191505060405180910390fd5b423373ffffffffffffffffffffffffffffffffffffffff167f347ce84d9ed7334a67bdbc36e6519fbbc870a22468c5fa79fcbb5d68f5bc220d866002548760405180848152602001838152602001828152602001935050505060405180910390a350505050565b61074133610afb565b610796576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603181526020018061149e6031913960400191505060405180910390fd5b61079f81610edf565b50565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610857576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4e6f7420656e6f7567682062616c616e6365000000000000000000000000000081525060200191505060405180910390fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506108ae8282610cb990919063ffffffff16565b905080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061090982600554610cb990919063ffffffff16565b6005819055503373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610955573d6000803e3d6000fd5b50423373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568846040518082815260200191505060405180910390a35050565b606060018054905060025411156109bf57600080fd5b60606002546040519080825280602002602001820160405280156109f25781602001602082028038833980820191505090505b50905060008090505b600180549050811015610af357600060018281548110610a1757fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060011515600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415610ae55780838381518110610aaa57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b5080806001019150506109fb565b508091505090565b6000610b11826000610fc590919063ffffffff16565b9050919050565b6000610b2333610afb565b610b78576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603181526020018061149e6031913960400191505060405180910390fd5b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6000610beb6005543073ffffffffffffffffffffffffffffffffffffffff1631610cb990919063ffffffff16565b905090565b6000600254905090565b60003411610c53576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806113cb6021913960400191505060405180910390fd5b423373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15346040518082815260200191505060405180910390a3565b6000600554905090565b610cb7336110a3565b565b600082821115610d31576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b6000808211610db9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b6000828481610dc457fe5b0490508091505092915050565b600080831415610de45760009050610e51565b6000828402905082848281610df557fe5b0414610e4c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061145b6021913960400191505060405180910390fd5b809150505b92915050565b600080828401905083811015610ed5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b610ee88161117e565b60018190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610fbc6001600254610e5790919063ffffffff16565b60028190555050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561104c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061147c6022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6001600254116110fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806114cf6027913960400191505060405180910390fd5b611107816111d8565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506111756001600254610cb990919063ffffffff16565b60028190555050565b61119281600061123290919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167ff965229cbef17c17a2ced10d89ec5f669942d8dd77bd8a5debcaed392434504e60405160405180910390a250565b6111ec81600061130d90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fac9358f7f807517a7bfea84ce37617a495e55d78f95d2efadcdfbf94817220e060405160405180910390a250565b61123c8282610fc5565b156112af576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6113178282610fc5565b61136c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061143a6021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505056fe6d73672e76616c7565206d757374206265206772656174686572207468616e2030496e76616c69642073706c6974206265747765656e20616374697665206d656d6265727352657365727665642062616c616e63656420776173206e6f7420757064617465642070726f7065726c79526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373417474656e646565526f6c653a2063616c6c657220646f6573206e6f74206861766520417474656e64656520526f6c652e43616e6e6f742072656d6f7665206c617374206d656d6265722066726f6d20636f6e7472616374a165627a7a723058206c7f81e402afbc22ba56b317d91d95acfbb223df145db76fb9d3d0dcdc3c40c90029526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
  "deployedBytecode": "0x60806040526004361061009c5760003560e01c8063722713f711610064578063722713f714610219578063809dab6a146102445780638f7c85191461026f578063d0e30db01461029a578063d9a15549146102a4578063fb1da543146102cf5761009c565b806307057382146100a157806310246254146100b85780632e1a7d4d146101095780634876aebc146101445780636cad2590146101b0575b600080fd5b3480156100ad57600080fd5b506100b66102e6565b005b3480156100c457600080fd5b50610107600480360360208110156100db57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610738565b005b34801561011557600080fd5b506101426004803603602081101561012c57600080fd5b81019080803590602001909291905050506107a2565b005b34801561015057600080fd5b506101596109a9565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561019c578082015181840152602081019050610181565b505050509050019250505060405180910390f35b3480156101bc57600080fd5b506101ff600480360360208110156101d357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610afb565b604051808215151515815260200191505060405180910390f35b34801561022557600080fd5b5061022e610b18565b6040518082815260200191505060405180910390f35b34801561025057600080fd5b50610259610bbd565b6040518082815260200191505060405180910390f35b34801561027b57600080fd5b50610284610bf0565b6040518082815260200191505060405180910390f35b6102a2610bfa565b005b3480156102b057600080fd5b506102b9610ca4565b6040518082815260200191505060405180910390f35b3480156102db57600080fd5b506102e4610cae565b005b6102ef33610afb565b610344576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603181526020018061149e6031913960400191505060405180910390fd5b60006103726005543073ffffffffffffffffffffffffffffffffffffffff1631610cb990919063ffffffff16565b9050600081116103ea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f436f6e74657374616e745465616d2062616c616e63652069732030000000000081525060200191505060405180910390fd5b600061040160025483610d4290919063ffffffff16565b905060008111610479576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4d656d626572207072697a65206973203000000000000000000000000000000081525060200191505060405180910390fd5b600061048782600254610dd1565b9050600080600090505b6001805490508110156105ec576000600182815481106104ad57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060011515600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514156105de5761058585600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e5790919063ffffffff16565b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506105db8584610e5790919063ffffffff16565b92505b508080600101915050610491565b5061060284600554610e5790919063ffffffff16565b600581905550818114610660576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806113ec6024913960400191505060405180910390fd5b6005543073ffffffffffffffffffffffffffffffffffffffff1631146106d1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180611410602a913960400191505060405180910390fd5b423373ffffffffffffffffffffffffffffffffffffffff167f347ce84d9ed7334a67bdbc36e6519fbbc870a22468c5fa79fcbb5d68f5bc220d866002548760405180848152602001838152602001828152602001935050505060405180910390a350505050565b61074133610afb565b610796576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603181526020018061149e6031913960400191505060405180910390fd5b61079f81610edf565b50565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610857576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4e6f7420656e6f7567682062616c616e6365000000000000000000000000000081525060200191505060405180910390fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506108ae8282610cb990919063ffffffff16565b905080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061090982600554610cb990919063ffffffff16565b6005819055503373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610955573d6000803e3d6000fd5b50423373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568846040518082815260200191505060405180910390a35050565b606060018054905060025411156109bf57600080fd5b60606002546040519080825280602002602001820160405280156109f25781602001602082028038833980820191505090505b50905060008090505b600180549050811015610af357600060018281548110610a1757fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060011515600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415610ae55780838381518110610aaa57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b5080806001019150506109fb565b508091505090565b6000610b11826000610fc590919063ffffffff16565b9050919050565b6000610b2333610afb565b610b78576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603181526020018061149e6031913960400191505060405180910390fd5b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6000610beb6005543073ffffffffffffffffffffffffffffffffffffffff1631610cb990919063ffffffff16565b905090565b6000600254905090565b60003411610c53576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806113cb6021913960400191505060405180910390fd5b423373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15346040518082815260200191505060405180910390a3565b6000600554905090565b610cb7336110a3565b565b600082821115610d31576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b6000808211610db9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b6000828481610dc457fe5b0490508091505092915050565b600080831415610de45760009050610e51565b6000828402905082848281610df557fe5b0414610e4c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061145b6021913960400191505060405180910390fd5b809150505b92915050565b600080828401905083811015610ed5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b610ee88161117e565b60018190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610fbc6001600254610e5790919063ffffffff16565b60028190555050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561104c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061147c6022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6001600254116110fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806114cf6027913960400191505060405180910390fd5b611107816111d8565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506111756001600254610cb990919063ffffffff16565b60028190555050565b61119281600061123290919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167ff965229cbef17c17a2ced10d89ec5f669942d8dd77bd8a5debcaed392434504e60405160405180910390a250565b6111ec81600061130d90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fac9358f7f807517a7bfea84ce37617a495e55d78f95d2efadcdfbf94817220e060405160405180910390a250565b61123c8282610fc5565b156112af576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6113178282610fc5565b61136c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061143a6021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505056fe6d73672e76616c7565206d757374206265206772656174686572207468616e2030496e76616c69642073706c6974206265747765656e20616374697665206d656d6265727352657365727665642062616c616e63656420776173206e6f7420757064617465642070726f7065726c79526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373417474656e646565526f6c653a2063616c6c657220646f6573206e6f74206861766520417474656e64656520526f6c652e43616e6e6f742072656d6f7665206c617374206d656d6265722066726f6d20636f6e7472616374a165627a7a723058206c7f81e402afbc22ba56b317d91d95acfbb223df145db76fb9d3d0dcdc3c40c90029",
  "sourceMap": "123:350:6:-;;;318:24:9;331:10;318:12;;;:24;;:::i;:::-;123:350:6;;5952:234:3;6010:27;6029:7;6010:18;;;;;:27;;:::i;:::-;6047:11;6064:7;6047:25;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;6047:25:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6111:4;6082:17;:26;6100:7;6082:26;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;6150:29;6177:1;6150:22;;:26;;;;;;:29;;;;:::i;:::-;6125:22;:54;;;;5952:234;:::o;801:125:9:-;859:23;874:7;859:10;:14;;;;;;:23;;;;:::i;:::-;911:7;897:22;;;;;;;;;;;;801:125;:::o;834:176:13:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;260:175:12:-;337:18;341:4;347:7;337:3;;;:18;;:::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;779:200::-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;123:350:6:-;;;;;;;",
  "deployedSourceMap": "123:350:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2403:1607:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2403:1607:3;;;:::i;:::-;;614:96:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;614:96:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;614:96:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;4330:509:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4330:509:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4330:509:3;;;;;;;;;;;;;;;;;:::i;:::-;;4898:598;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4898:598:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4898:598:3;;;;;;;;;;;;;;;;;497:111:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;497:111:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;497:111:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5722:108:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5722:108:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;344:127:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;344:127:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5558:109:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5558:109:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1986:162;;;:::i;:::-;;239:99:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;239:99:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;716:79:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;716:79:9;;;:::i;:::-;;2403:1607:3;397:22:9;408:10;397;:22::i;:::-;389:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2552:24:3;2579:42;2605:15;;2587:4;2579:21;;;:25;;:42;;;;:::i;:::-;2552:69;;2658:1;2639:16;:20;2631:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2702:13;2718:44;2739:22;;2718:16;:20;;:44;;;;:::i;:::-;2702:60;;2788:1;2780:5;:9;2772:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2822:28;2853:43;2866:5;2873:22;;2853:12;:43::i;:::-;2822:74;;2906:24;2946:13;2962:1;2946:17;;2941:364;2973:11;:18;;;;2965:5;:26;2941:364;;;3016:14;3033:11;3045:5;3033:18;;;;;;;;;;;;;;;;;;;;;;;;;3016:35;;3146:4;3117:33;;:17;:25;3135:6;3117:25;;;;;;;;;;;;;;;;;;;;;;;;;:33;;;3113:182;;;3189:27;3210:5;3189:8;:16;3198:6;3189:16;;;;;;;;;;;;;;;;:20;;:27;;;;:::i;:::-;3170:8;:16;3179:6;3170:16;;;;;;;;;;;;;;;:46;;;;3253:27;3274:5;3253:16;:20;;:27;;;;:::i;:::-;3234:46;;3113:182;2941:364;2993:7;;;;;;;2941:364;;;;3408:37;3428:16;3408:15;;:19;;:37;;;;:::i;:::-;3390:15;:55;;;;3746:20;3726:16;:40;3718:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3850:15;;3833:4;3825:21;;;:40;3817:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3999:3;3938:10;3927:76;;;3950:16;3968:22;;3992:5;3927:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;483:1:9;;;;2403:1607:3:o;614:96:9:-;397:22;408:10;397;:22::i;:::-;389:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;682:21;695:7;682:12;:21::i;:::-;614:96;:::o;4330:509:3:-;4413:6;4389:8;:20;4398:10;4389:20;;;;;;;;;;;;;;;;:30;;4381:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4452:22;4477:8;:20;4486:10;4477:20;;;;;;;;;;;;;;;;4452:45;;4524:26;4543:6;4524:14;:18;;:26;;;;:::i;:::-;4507:43;;4583:14;4560:8;:20;4569:10;4560:20;;;;;;;;;;;;;;;:37;;;;4720:27;4740:6;4720:15;;:19;;:27;;;;:::i;:::-;4702:15;:45;;;;4757:10;:19;;:27;4777:6;4757:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4757:27:3;4828:3;4808:10;4799:33;;;4820:6;4799:33;;;;;;;;;;;;;;;;;;4330:509;;:::o;4898:598::-;4947:16;5009:11;:18;;;;4983:22;;:44;;4975:53;;;;;;5038:30;5085:22;;5071:37;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;5071:37:3;;;;5038:70;;5230:13;5246:1;5230:17;;5225:235;5257:11;:18;;;;5249:5;:26;5225:235;;;5300:14;5317:11;5329:5;5317:18;;;;;;;;;;;;;;;;;;;;;;;;;5300:35;;5382:4;5353:33;;:17;:25;5371:6;5353:25;;;;;;;;;;;;;;;;;;;;;;;;;:33;;;5349:101;;;5429:6;5406:13;5420:5;5406:20;;;;;;;;;;;;;:29;;;;;;;;;;;5349:101;5225:235;5277:7;;;;;;;5225:235;;;;5476:13;5469:20;;;4898:598;:::o;497:111:9:-;555:4;578:23;593:7;578:10;:14;;:23;;;;:::i;:::-;571:30;;497:111;;;:::o;5722:108:3:-;5777:7;397:22:9;408:10;397;:22::i;:::-;389:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5803:8:3;:20;5812:10;5803:20;;;;;;;;;;;;;;;;5796:27;;5722:108;:::o;344:127:6:-;396:7;422:42;448:15;;430:4;422:21;;;:25;;:42;;;;:::i;:::-;415:49;;344:127;:::o;5558:109:3:-;5612:7;5638:22;;5631:29;;5558:109;:::o;1986:162::-;2052:1;2040:9;:13;2032:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2137:3;2114:10;2106:35;;;2126:9;2106:35;;;;;;;;;;;;;;;;;;1986:162::o;239:99:6:-;290:7;316:15;;309:22;;239:99;:::o;716:79:9:-;761:27;777:10;761:15;:27::i;:::-;716:79::o;1274:179:13:-;1332:7;1364:1;1359;:6;;1351:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1410:9;1426:1;1422;:5;1410:17;;1445:1;1438:8;;;1274:179;;;;:::o;2606:326::-;2664:7;2761:1;2757;:5;2749:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2803:9;2819:1;2815;:5;;;;;;2803:17;;2924:1;2917:8;;;2606:326;;;;:::o;1693:458::-;1751:7;1996:1;1991;:6;1987:45;;;2020:1;2013:8;;;;1987:45;2042:9;2058:1;2054;:5;2042:17;;2086:1;2081;2077;:5;;;;;;:10;2069:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2143:1;2136:8;;;1693:458;;;;;:::o;834:176::-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;5952:234:3:-;6010:27;6029:7;6010:18;:27::i;:::-;6047:11;6064:7;6047:25;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;6047:25:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6111:4;6082:17;:26;6100:7;6082:26;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;6150:29;6177:1;6150:22;;:26;;:29;;;;:::i;:::-;6125:22;:54;;;;5952:234;:::o;779:200:12:-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;6308:360:3:-;6468:1;6443:22;;:26;6435:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6523:30;6545:7;6523:21;:30::i;:::-;6592:5;6563:17;:26;6581:7;6563:26;;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;6632:29;6659:1;6632:22;;:26;;:29;;;;:::i;:::-;6607:22;:54;;;;6308:360;:::o;801:125:9:-;859:23;874:7;859:10;:14;;:23;;;;:::i;:::-;911:7;897:22;;;;;;;;;;;;801:125;:::o;932:133::-;993:26;1011:7;993:10;:17;;:26;;;;:::i;:::-;1050:7;1034:24;;;;;;;;;;;;932:133;:::o;260:175:12:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;510:180::-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;678:5;655:4;:11;;:20;667:7;655:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;510:180;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\n\nimport \"../core/HackathonTeam.sol\";\n\ncontract HackathonTeamMock is HackathonTeam {\n    using SafeMath for uint256;\n\n    // Helper testing functions.\n    function getReservedBalance() public view returns (uint256) {\n        return reservedBalance;\n    }\n\n    function getAvailableBalance() public view returns (uint256) {\n        return address(this).balance.sub(reservedBalance);\n    }\n}",
  "sourcePath": "/home/odisi/dev/projects/hackapay/contracts/mocks/HackathonTeamMock.sol",
  "ast": {
    "absolutePath": "/home/odisi/dev/projects/hackapay/contracts/mocks/HackathonTeamMock.sol",
    "exportedSymbols": {
      "HackathonTeamMock": [651]
    },
    "id": 652,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 621,
        "literals": ["solidity", "^", "0.5", ".0"],
        "nodeType": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 622,
        "nodeType": "ImportDirective",
        "scope": 652,
        "sourceUnit": 1267,
        "src": "25:59:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/odisi/dev/projects/hackapay/contracts/core/HackathonTeam.sol",
        "file": "../core/HackathonTeam.sol",
        "id": 623,
        "nodeType": "ImportDirective",
        "scope": 652,
        "sourceUnit": 574,
        "src": "86:35:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 624,
              "name": "HackathonTeam",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 573,
              "src": "153:13:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HackathonTeam_$573",
                "typeString": "contract HackathonTeam"
              }
            },
            "id": 625,
            "nodeType": "InheritanceSpecifier",
            "src": "153:13:6"
          }
        ],
        "contractDependencies": [573, 579, 856],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 651,
        "linearizedBaseContracts": [651, 573, 856, 579],
        "name": "HackathonTeamMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 628,
            "libraryName": {
              "contractScope": null,
              "id": 626,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1266,
              "src": "179:8:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1266",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "173:27:6",
            "typeName": {
              "id": 627,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "192:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 635,
              "nodeType": "Block",
              "src": "299:39:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 633,
                    "name": "reservedBalance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 198,
                    "src": "316:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 632,
                  "id": 634,
                  "nodeType": "Return",
                  "src": "309:22:6"
                }
              ]
            },
            "documentation": null,
            "id": 636,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getReservedBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 629,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "266:2:6"
            },
            "returnParameters": {
              "id": 632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 631,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 636,
                  "src": "290:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 630,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "290:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "289:9:6"
            },
            "scope": 651,
            "src": "239:99:6",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 649,
              "nodeType": "Block",
              "src": "405:66:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 646,
                        "name": "reservedBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "448:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 642,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1317,
                              "src": "430:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_HackathonTeamMock_$651",
                                "typeString": "contract HackathonTeamMock"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_HackathonTeamMock_$651",
                                "typeString": "contract HackathonTeamMock"
                              }
                            ],
                            "id": 641,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "422:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "422:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "422:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 645,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1185,
                      "src": "422:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "422:42:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 640,
                  "id": 648,
                  "nodeType": "Return",
                  "src": "415:49:6"
                }
              ]
            },
            "documentation": null,
            "id": 650,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAvailableBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 637,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "372:2:6"
            },
            "returnParameters": {
              "id": 640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 639,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 650,
                  "src": "396:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 638,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "396:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "395:9:6"
            },
            "scope": 651,
            "src": "344:127:6",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 652,
        "src": "123:350:6"
      }
    ],
    "src": "0:473:6"
  },
  "legacyAST": {
    "absolutePath": "/home/odisi/dev/projects/hackapay/contracts/mocks/HackathonTeamMock.sol",
    "exportedSymbols": {
      "HackathonTeamMock": [651]
    },
    "id": 652,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 621,
        "literals": ["solidity", "^", "0.5", ".0"],
        "nodeType": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 622,
        "nodeType": "ImportDirective",
        "scope": 652,
        "sourceUnit": 1267,
        "src": "25:59:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/odisi/dev/projects/hackapay/contracts/core/HackathonTeam.sol",
        "file": "../core/HackathonTeam.sol",
        "id": 623,
        "nodeType": "ImportDirective",
        "scope": 652,
        "sourceUnit": 574,
        "src": "86:35:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 624,
              "name": "HackathonTeam",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 573,
              "src": "153:13:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HackathonTeam_$573",
                "typeString": "contract HackathonTeam"
              }
            },
            "id": 625,
            "nodeType": "InheritanceSpecifier",
            "src": "153:13:6"
          }
        ],
        "contractDependencies": [573, 579, 856],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 651,
        "linearizedBaseContracts": [651, 573, 856, 579],
        "name": "HackathonTeamMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 628,
            "libraryName": {
              "contractScope": null,
              "id": 626,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1266,
              "src": "179:8:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1266",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "173:27:6",
            "typeName": {
              "id": 627,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "192:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 635,
              "nodeType": "Block",
              "src": "299:39:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 633,
                    "name": "reservedBalance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 198,
                    "src": "316:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 632,
                  "id": 634,
                  "nodeType": "Return",
                  "src": "309:22:6"
                }
              ]
            },
            "documentation": null,
            "id": 636,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getReservedBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 629,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "266:2:6"
            },
            "returnParameters": {
              "id": 632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 631,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 636,
                  "src": "290:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 630,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "290:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "289:9:6"
            },
            "scope": 651,
            "src": "239:99:6",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 649,
              "nodeType": "Block",
              "src": "405:66:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 646,
                        "name": "reservedBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "448:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 642,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1317,
                              "src": "430:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_HackathonTeamMock_$651",
                                "typeString": "contract HackathonTeamMock"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_HackathonTeamMock_$651",
                                "typeString": "contract HackathonTeamMock"
                              }
                            ],
                            "id": 641,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "422:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "422:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "422:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 645,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1185,
                      "src": "422:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "422:42:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 640,
                  "id": 648,
                  "nodeType": "Return",
                  "src": "415:49:6"
                }
              ]
            },
            "documentation": null,
            "id": 650,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAvailableBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 637,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "372:2:6"
            },
            "returnParameters": {
              "id": 640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 639,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 650,
                  "src": "396:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 638,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "396:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "395:9:6"
            },
            "scope": 651,
            "src": "344:127:6",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 652,
        "src": "123:350:6"
      }
    ],
    "src": "0:473:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-07-21T21:00:09.218Z",
  "devdoc": {
    "methods": {
      "splitPrize()": {
        "details": "Implements the \"withdraw pattern\" by allocating balances to team  members, so they can request a withdraw once the split is done."
      },
      "withdraw(uint256)": {
        "details": "Implements the \"withdraw pattern\" allowing members to withdraw funds. The method is public, so inactive members (that renounced membership) are still able to withdraw funds in case balance > 0. "
      }
    }
  },
  "userdoc": {
    "methods": {
      "balanceOf()": {
        "notice": "Get the balance of a team member"
      },
      "deposit()": {
        "notice": "Allows the contract to receive funds."
      },
      "getActiveMembers()": {
        "notice": "Gets the active members in the team."
      },
      "getActiveMembersCount()": {
        "notice": "Gets the number of active team members."
      },
      "splitPrize()": {
        "notice": "Splits the available's contract balance between active team members."
      },
      "withdraw(uint256)": {
        "notice": "Allows a team member to withdraw its funds from the contract."
      }
    }
  }
}
