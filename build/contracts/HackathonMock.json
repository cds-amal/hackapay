{
  "contractName": "HackathonMock",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_name",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_description",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "datetime",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "EvaluationStatusUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "JudgeAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "JudgeRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "judgeAddress",
          "type": "address"
        }
      ],
      "name": "JudgeVoted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OrganizerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OrganizerRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "firstPlacePrize",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "secondPlacePrize",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "thirdPlacePrize",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "organizer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "datetime",
          "type": "uint256"
        }
      ],
      "name": "PrizeAllocation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "RegistrationStatusUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "SubmissionStatusUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "teamId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "teamAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "proposalData",
          "type": "bytes32"
        }
      ],
      "name": "TeamProposalUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "teamId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "teamName",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "teamAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "TeamRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "teamId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "teamAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "TeamStatusUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "teamId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "teamAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "finalGrade",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "rankPosition",
          "type": "uint8"
        }
      ],
      "name": "WinnerAnnouced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "rankPosition",
          "type": "uint8"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "requester",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "datetime",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addJudge",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addOrganizer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "firstPrize",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "secondPrize",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "thirdPrize",
          "type": "uint256"
        }
      ],
      "name": "allocatePrize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "teamId",
          "type": "uint256"
        }
      ],
      "name": "approveTeam",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "closeEvaluation",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "closeRegistration",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "closeSubmission",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "description",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getEvaluationStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getRegistrationStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSubmissionStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "teamId",
          "type": "uint256"
        }
      ],
      "name": "getTeam",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "teamAddress",
          "type": "address"
        }
      ],
      "name": "getTeamByAddress",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getWinnersIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "id",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isJudge",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isOrganizer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "openEvaluation",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "openRegistration",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "openSubmission",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "publishRank",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "teamName",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "teamAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "proposalData",
          "type": "bytes32"
        }
      ],
      "name": "registerTeam",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeJudge",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceJudge",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOrganizer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "teamId",
          "type": "uint256"
        }
      ],
      "name": "reproveTeam",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "teamIds",
          "type": "uint256[]"
        }
      ],
      "name": "reproveTeams",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "teamIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint8[]",
          "name": "teamGrades",
          "type": "uint8[]"
        }
      ],
      "name": "submitEvaluation",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "teams",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "name",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "teamAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "proposalData",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "grade",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "teamId",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "proposalData",
          "type": "bytes32"
        }
      ],
      "name": "updateProposalData",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "winnerAddress",
          "type": "address"
        }
      ],
      "name": "withdrawPrize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "dummyAllocatePrizesMock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "dummyPublishRankMock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getPrizeAllocationStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_name\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_description\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"datetime\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"EvaluationStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"JudgeAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"JudgeRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"judgeAddress\",\"type\":\"address\"}],\"name\":\"JudgeVoted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OrganizerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OrganizerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"firstPlacePrize\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"secondPlacePrize\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"thirdPlacePrize\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"organizer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"datetime\",\"type\":\"uint256\"}],\"name\":\"PrizeAllocation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"RegistrationStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"SubmissionStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"teamId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"teamAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"proposalData\",\"type\":\"bytes32\"}],\"name\":\"TeamProposalUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"teamId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"teamName\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"teamAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"TeamRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"teamId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"teamAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"TeamStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"teamId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"teamAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"finalGrade\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"rankPosition\",\"type\":\"uint8\"}],\"name\":\"WinnerAnnouced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"rankPosition\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"datetime\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addJudge\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addOrganizer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"firstPrize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"secondPrize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"thirdPrize\",\"type\":\"uint256\"}],\"name\":\"allocatePrize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"teamId\",\"type\":\"uint256\"}],\"name\":\"approveTeam\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"closeEvaluation\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"closeRegistration\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"closeSubmission\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"dummyAllocatePrizesMock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"dummyPublishRankMock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getEvaluationStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPrizeAllocationStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRegistrationStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSubmissionStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"teamId\",\"type\":\"uint256\"}],\"name\":\"getTeam\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamAddress\",\"type\":\"address\"}],\"name\":\"getTeamByAddress\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getWinnersIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"id\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isJudge\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isOrganizer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"openEvaluation\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"openRegistration\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"openSubmission\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"publishRank\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"teamName\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"teamAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"proposalData\",\"type\":\"bytes32\"}],\"name\":\"registerTeam\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeJudge\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceJudge\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOrganizer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"teamId\",\"type\":\"uint256\"}],\"name\":\"reproveTeam\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"teamIds\",\"type\":\"uint256[]\"}],\"name\":\"reproveTeams\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"teamIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint8[]\",\"name\":\"teamGrades\",\"type\":\"uint8[]\"}],\"name\":\"submitEvaluation\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"teams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"teamAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"proposalData\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"grade\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"teamId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"proposalData\",\"type\":\"bytes32\"}],\"name\":\"updateProposalData\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"winnerAddress\",\"type\":\"address\"}],\"name\":\"withdrawPrize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allocatePrize(uint256,uint256,uint256)\":{\"details\":\"It does not associate the prize with a specific account, since prizes cound be associated any moment by the organizers, as long as prizes were not allocated before. The contract needs to have enought balance to allocate funds to winners.\"},\"approveTeam(uint256)\":{\"details\":\"Should be overwritten on inherited contract to add modifier or require statements for access control.\",\"params\":{\"teamId\":\"{uint256} the ids of the teams to be approved\"}},\"closeEvaluation()\":{\"details\":\"Should be overwritten on inherited contract to add modifier or require statements for access control.\"},\"closeRegistration()\":{\"details\":\"Overwritten to add modifier for access control.\"},\"closeSubmission()\":{\"details\":\"Should be overwritten on inherited contract to add modifier or require statements for access control.\"},\"getEvaluationStatus()\":{\"return\":\"{bool} returns {true} if enabled; otherwise, {false}.\"},\"getRegistrationStatus()\":{\"return\":\"{bool} returns {true} if enabled; otherwise, {false}.\"},\"getSubmissionStatus()\":{\"return\":\"{bool} returns {true} if enabled; otherwise, {false}.\"},\"getTeam(uint256)\":{\"params\":{\"teamId\":\"{uint256} the team's unique identifier returned on registration\"},\"return\":\"{bytes32} team's name{address} team's address{bytes32} team's proposal data{bool} team's status: {true} for approved; {false} for reproved;{uint256} team's grade\"},\"getTeamByAddress(address)\":{\"params\":{\"teamAddress\":\"{address} the team's contract address used on registration\"},\"return\":\"{bytes32} team's name{address} team's address{bytes32} team's proposal data{bool} team's status: {true} for approved; {false} for reproved;{uint256} team's grade\"},\"getWinnersIds()\":{\"return\":\"{uint256} First place's id{uint256} Second place's id{uint256} Third place's id\"},\"openEvaluation()\":{\"details\":\"Should be overwritten on inherited contract to add modifier or require statements for access control.\"},\"openRegistration()\":{\"details\":\"Overwritten to add modifier for access control.\"},\"openSubmission()\":{\"details\":\"Should be overwritten on inherited contract to add modifier or require statements for access control.\"},\"publishRank()\":{\"details\":\"emitts an WinnerAnnounced event for each winner (1st, 2nd, 3rd place).\"},\"registerTeam(bytes32,address,bytes32)\":{\"details\":\"Registration process must be open.\",\"params\":{\"teamName\":\"{bytes32} team's proposal data; could be a hash for a file  on IPFS or for a github link; not required\"}},\"reproveTeam(uint256)\":{\"details\":\"Should be overwritten on inherited contract to add modifier or require statements for access control.\",\"params\":{\"teamId\":\"{uint256} the ids of the teams to be reproved\"}},\"reproveTeams(uint256[])\":{\"details\":\"Should be overwritten on inherited contract to add modifier or require statements for access control.\",\"params\":{\"teamIds\":\"{uint256[]} an array containing the ids of the teams to be reproved\"}},\"submitEvaluation(uint256[],uint8[])\":{\"details\":\"The position of teamId and teamGrade must be the same in the array. For example, if teamId \\\"1\\\" is sent at {teamIds} array position \\\"5\\\" (zero-based), the grade for team \\\"1\\\" must be sent at position \\\"5\\\" in {teamGrades} array.\",\"params\":{\"teamGrades\":\"Array of the grades given by the judge for each team.\",\"teamIds\":\"Array of the ids associated with each team that is going to be evaluated.\"}},\"updateProposalData(uint256,bytes32)\":{\"params\":{\"proposalData\":\"the updated data for the team's proposal\",\"teamId\":\"team's unique identifier; required\"}},\"withdrawPrize(address)\":{\"details\":\"Winners must implement IPayable to receive funds.\"}}},\"userdoc\":{\"methods\":{\"allocatePrize(uint256,uint256,uint256)\":{\"notice\":\"Allows the organizer to allocate funds that's going to be distributed to winners.\"},\"approveTeam(uint256)\":{\"notice\":\"(re)approves a team in participating in the contest\"},\"closeEvaluation()\":{\"notice\":\"Closes the evaluation process\"},\"closeRegistration()\":{\"notice\":\"Closes the registration process\"},\"closeSubmission()\":{\"notice\":\"Closes the proposal submission process\"},\"deposit()\":{\"notice\":\"Allows the contract to receive funds.\"},\"getEvaluationStatus()\":{\"notice\":\"Gets the evaluation status\"},\"getRegistrationStatus()\":{\"notice\":\"Gets the registration status\"},\"getSubmissionStatus()\":{\"notice\":\"Gets the submission status\"},\"getTeam(uint256)\":{\"notice\":\"Returns the stored information of a team\"},\"getTeamByAddress(address)\":{\"notice\":\"Returns the stored information of a team, based on a provided address\"},\"getWinnersIds()\":{\"notice\":\"Gets the id of the winner teams.\"},\"openEvaluation()\":{\"notice\":\"Opens the evaluation process\"},\"openRegistration()\":{\"notice\":\"Opens the registration process\"},\"openSubmission()\":{\"notice\":\"Opens the proposal submission process\"},\"publishRank()\":{\"notice\":\"Published the ranking results of the contest.\"},\"registerTeam(bytes32,address,bytes32)\":{\"notice\":\"Registers a new team in the contest registry.\"},\"reproveTeam(uint256)\":{\"notice\":\"reproves a team from participating in the contest\"},\"reproveTeams(uint256[])\":{\"notice\":\"reprove teams from participating in the contest\"},\"submitEvaluation(uint256[],uint8[])\":{\"notice\":\"Allows a judge to submit its evaluation for the teams competing in the contest. The evaluation for all teams must be submitted once.\"},\"updateProposalData(uint256,bytes32)\":{\"notice\":\"Updates the proposal data for a specific team.\"},\"withdrawPrize(address)\":{\"notice\":\"Allows withdrawing prizes to winners.\"}}}},\"settings\":{\"compilationTarget\":{\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/mocks/HackathonMock.sol\":\"HackathonMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/core/ContestBracketRegistry.sol\":{\"keccak256\":\"0xc8450bc1076dacac2d10aab8da5c2e3ea83235125ff3bb0d7d85ba1fce06fc70\",\"urls\":[\"bzz-raw://017e7e4a6d1831b43674b1864c9d3794a70301138a86df0f169aed26d054146a\",\"dweb:/ipfs/QmNyQQbFP8pfhsdfGToUFiU64ZaMu6EVXJxFSm7a1bFBDK\"]},\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/core/ContestTeamRegistry.sol\":{\"keccak256\":\"0x929a4e4554b4deab62594780d69c155d584267d672925c61484c2ef97a8fcfcc\",\"urls\":[\"bzz-raw://ef42fa5114cff493fb66993d08af2a80c83cf84bcab87ee3345be47d44c97cc3\",\"dweb:/ipfs/QmV42qJhjNzRC147QKp2TB3PBBezrbowf88xzJPSfUhhwP\"]},\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/core/Hackathon.sol\":{\"keccak256\":\"0x18923c861cc43214022effc38546e7efea136da091f0752927e6adb7565e66e0\",\"urls\":[\"bzz-raw://5df17c144f7bd43929be182b3cffec51f54a94087bbc0e765712fd046411c3b1\",\"dweb:/ipfs/QmZWj29fRY79G6NUZn2ihcZATPb8wfXeJgaA6FmLVPQYtB\"]},\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/mocks/HackathonMock.sol\":{\"keccak256\":\"0xba2c68cbc9fb68895bb84f90b7fa8648b92f21d92a7acb00eadef8ae20cc292e\",\"urls\":[\"bzz-raw://e69333803554e6c758a8e916bb8f5f6969f4fda0ce16fd7e0d701273515f6774\",\"dweb:/ipfs/QmZvvYC4AnraJZAuLnrLGxLxiQM9CXp3JHTXD1yD3pjau9\"]},\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/payment/IPayable.sol\":{\"keccak256\":\"0xb94cf25b516d077f8b3070bd3334aaedeb6bb4d5ddd025f196800b06f622b4db\",\"urls\":[\"bzz-raw://bd43ea25ee0e2f607a72550c26f8f43ae258412ddeabd80c5c1d536c850db665\",\"dweb:/ipfs/QmTPY3dX8FDwh4V6EBSGohiGoFMGrii3zE3u2vQfmbnehp\"]},\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/payment/Payable.sol\":{\"keccak256\":\"0x6eac2d42c4537946f2895a68e7e0923e6c448dbed9374a8a14643fc0405f5598\",\"urls\":[\"bzz-raw://046a8e0ebad9e8a6544c10d650c75f6d285b33bc79bdb7271ce20f526264a4de\",\"dweb:/ipfs/QmWmSAMe957bMfBkEB67KyAbX3STyYQSG3xo5DLjprVAxC\"]},\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/roles/ContestRoleManager.sol\":{\"keccak256\":\"0xf225bc8f065bb46b32c2c0a2724d97e83d69222872ade01a38edab9d1953bbae\",\"urls\":[\"bzz-raw://143acbd0fe4f9414b60e900f1ecb9842a8717b7afd314ee54609f941332f6d0f\",\"dweb:/ipfs/QmWoonP4jNKQJvr3kmCXg6xbLyy7gKEiJCGYPTJSHNp2Hf\"]},\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/roles/JudgeRole.sol\":{\"keccak256\":\"0xac32e0f91deca1fe40318893cefd7898e1265eb9b117766bc36f1063bf3a757b\",\"urls\":[\"bzz-raw://8ebae6d234d64881c66f4a93e53b44378183c5f161f4d60792162fca53f77756\",\"dweb:/ipfs/QmdJ9Ner6KvV5GAQvnaaumf3bTHnze7oxWeP2RoYuq6kAW\"]},\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/roles/OrganizerRole.sol\":{\"keccak256\":\"0xe071f4139bf8d52b896e8cab889b23fb7974a0f46985ddbe6e92e5de9d971a4b\",\"urls\":[\"bzz-raw://2fb33bd382d1ce6b08d4fe32b435ed346822a32348ca102bc9fda25d08aec083\",\"dweb:/ipfs/QmRkxXmvGNYcEdkUKTTcN5GNh5VqpFT8WubwX76CFcER3i\"]},\"@openzeppelin/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620036e7380380620036e7833981810160405260608110156200003757600080fd5b50805160208201516040909201519091908282823380808080620000a2576040805162461bcd60e51b815260206004820152601460248201527f496e76616c6964207a65726f2061646472657373000000000000000000000000604482015290519081900360640190fd5b620000b6816001600160e01b036200014516565b50849150600090501a60f81b7fff000000000000000000000000000000000000000000000000000000000000001662000125576040805162461bcd60e51b815260206004820152600c60248201526b496e76616c6964206e616d6560a01b604482015290519081900360640190fd5b506022929092556023556024555050602b805460ff191690555062000389565b6200015b81620001df60201b62002de21760201c565b6009805460018082019092557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b0319166001600160a01b0384169081179091556000908152600b60209081526040909120805460ff191683179055600a54620001d992909162000231811b620026cf17901c565b600a5550565b620001fa8160046200029360201b62002fb81790919060201c565b6040516001600160a01b038216907f37e96fc6762bae414e69ea6e2490e63bc46f2a1335de0f6b91f49cf808829bcf90600090a250565b6000828201838110156200028c576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b620002a882826001600160e01b036200032016565b15620002fb576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b038216620003695760405162461bcd60e51b8152600401808060200182810382526022815260200180620036c56022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b61332c80620003996000396000f3fe60806040526004361061020e5760003560e01c806390d768e411610118578063d0e30db0116100a0578063ed896d661161006f578063ed896d66146107a3578063f540548b146107d6578063f59ec3f914610800578063ff91865114610836578063ffc6ff1e1461084b5761020e565b8063d0e30db014610723578063e35fb2411461072b578063e4725f0214610740578063eaf2f9cd146107735761020e565b8063ae237c77116100e7578063ae237c771461069c578063ae2ac4ae146106b1578063af640d0f146106e4578063b2a13f92146106f9578063d06e4ee71461070e5761020e565b806390d768e41461062a578063927cab471461063f578063a2bce8bd14610672578063a72418a4146106875761020e565b80634b30b66f1161019b57806358e2f50e1161016a57806358e2f50e146105795780637284e4161461058e578063737a6340146105a35780637385712c146105d65780637dc673bc146106155761020e565b80634b30b66f146105075780634ea701a81461051c57806354e1db2b1461054f578063567ad862146105645761020e565b8063288c4a46116101e2578063288c4a46146102f85780633e091f64146103755780633ed2b77a14610444578063400feb02146104ab57806341676f15146104c05761020e565b80628e0f1b1461021357806306fdde031461027257806311dc45c91461029957806324ba9fab146102ce575b600080fd5b34801561021f57600080fd5b5061023d6004803603602081101561023657600080fd5b5035610860565b604080519586526001600160a01b03909416602086015284840192909252151560608401526080830152519081900360a00190f35b34801561027e57600080fd5b5061028761094a565b60408051918252519081900360200190f35b3480156102a557600080fd5b506102cc600480360360208110156102bc57600080fd5b50356001600160a01b0316610950565b005b3480156102da57600080fd5b506102cc600480360360208110156102f157600080fd5b5035610d5e565b34801561030457600080fd5b506102cc6004803603602081101561031b57600080fd5b81019060208101813564010000000081111561033657600080fd5b82018360208201111561034857600080fd5b8035906020019184602083028401116401000000008311171561036a57600080fd5b509092509050610d6a565b34801561038157600080fd5b506102cc6004803603604081101561039857600080fd5b8101906020810181356401000000008111156103b357600080fd5b8201836020820111156103c557600080fd5b803590602001918460208302840111640100000000831117156103e757600080fd5b91939092909160208101903564010000000081111561040557600080fd5b82018360208201111561041757600080fd5b8035906020019184602083028401116401000000008311171561043957600080fd5b509092509050610daa565b34801561045057600080fd5b5061046e6004803603602081101561046757600080fd5b5035611139565b6040805196875260208701959095526001600160a01b039093168585015260608501919091521515608084015260a0830152519081900360c00190f35b3480156104b757600080fd5b506102cc61118c565b3480156104cc57600080fd5b506104f3600480360360208110156104e357600080fd5b50356001600160a01b03166111df565b604080519115158252519081900360200190f35b34801561051357600080fd5b506102cc6111fa565b34801561052857600080fd5b5061023d6004803603602081101561053f57600080fd5b50356001600160a01b0316611205565b34801561055b57600080fd5b506104f36112e0565b34801561057057600080fd5b506102cc6112ee565b34801561058557600080fd5b506102cc6112f7565b34801561059a57600080fd5b50610287611395565b3480156105af57600080fd5b506105b861139b565b60408051938452602084019290925282820152519081900360600190f35b3480156105e257600080fd5b50610287600480360360608110156105f957600080fd5b508035906001600160a01b0360208201351690604001356113a9565b34801561062157600080fd5b506102cc611787565b34801561063657600080fd5b506102cc611823565b34801561064b57600080fd5b506102cc6004803603602081101561066257600080fd5b50356001600160a01b0316611ce9565b34801561067e57600080fd5b506104f3611d36565b34801561069357600080fd5b506102cc611d3f565b3480156106a857600080fd5b506102cc611d92565b3480156106bd57600080fd5b506102cc600480360360208110156106d457600080fd5b50356001600160a01b0316611e2c565b3480156106f057600080fd5b50610287611e79565b34801561070557600080fd5b506102cc611e7f565b34801561071a57600080fd5b506102cc611f18565b6102cc611fb3565b34801561073757600080fd5b506104f361202b565b34801561074c57600080fd5b506102cc6004803603602081101561076357600080fd5b50356001600160a01b0316612034565b34801561077f57600080fd5b506102cc6004803603604081101561079657600080fd5b5080359060200135612081565b3480156107af57600080fd5b506104f3600480360360208110156107c657600080fd5b50356001600160a01b03166121ed565b3480156107e257600080fd5b506102cc600480360360208110156107f957600080fd5b5035612200565b34801561080c57600080fd5b506102cc6004803603606081101561082357600080fd5b5080359060208101359060400135612209565b34801561084257600080fd5b506104f36123c1565b34801561085757600080fd5b506102cc6123ca565b60008060008060008561087281612469565b6108b5576040805162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d19585b481a59608a1b604482015290519081900360640190fd5b6108bd613039565b600188815481106108ca57fe5b60009182526020918290206040805160c08101825260069390930290910180548352600181015493830184905260028101546001600160a01b0316918301829052600381015460608401819052600482015460ff1615156080850181905260059092015460a0909401849052939c919b5092995091975095509350505050565b60235481565b60215460ff166109a0576040805162461bcd60e51b815260206004820152601660248201527514985b9ac81b9bdd081c1d589b1a5cda1959081e595d60521b604482015290519081900360640190fd5b602b5460ff166109f7576040805162461bcd60e51b815260206004820152601860248201527f5072697a6573206e6f7420616c6c6f6361746564207965740000000000000000604482015290519081900360640190fd5b806001600160a01b038116610a4a576040805162461bcd60e51b8152602060048201526014602482015273496e76616c6964207a65726f206164647265737360601b604482015290519081900360640190fd5b6001600160a01b038116301415610a925760405162461bcd60e51b81526004018080602001828103825260328152602001806131586032913960400191505060405180910390fd5b81610a9c81612470565b610aed576040805162461bcd60e51b815260206004820152601f60248201527f4163636f756e742061646472657373206973206e6f7420612077696e6e657200604482015290519081900360640190fd5b601154600090819081906001600160a01b0387811691161415610b775750506011546025546026546001600160a01b0390921692509060019060ff1615610b655760405162461bcd60e51b81526004018080602001828103825260228152602001806131cd6022913960400191505060405180910390fd5b6026805460ff19166001179055610cb4565b6017546001600160a01b0387811691161415610bfa5750506017546027546028546001600160a01b0390921692509060029060ff1615610be85760405162461bcd60e51b81526004018080602001828103825260238152602001806132d56023913960400191505060405180910390fd5b6028805460ff19166001179055610cb4565b601d546001600160a01b0387811691161415610c7d575050601d54602954602a546001600160a01b0390921692509060039060ff1615610c6b5760405162461bcd60e51b815260040180806020018281038252602281526020018061322e6022913960400191505060405180910390fd5b602a805460ff19166001179055610cb4565b60405162461bcd60e51b815260040180806020018281038252604381526020018061318a6043913960600191505060405180910390fd5b6040805183815260ff831660208201524281830152905133916001600160a01b038616917f24cc64e111181860a0e50314e2717d8d86bc21fb600e5681040e47cd5eab7f079181900360600190a3826001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b158015610d3d57600080fd5b505af1158015610d51573d6000803e3d6000fd5b5050505050505050505050565b610d67816124b7565b50565b610da68282808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506125f992505050565b5050565b600e5460ff16610df8576040805162461bcd60e51b8152602060048201526014602482015273115d985b1d585d1a5bdb881a5cc818db1bdcd95960621b604482015290519081900360640190fd5b610e01336121ed565b610e3c5760405162461bcd60e51b815260040180806020018281038252602b8152602001806130d9602b913960400191505060405180910390fd5b828114610e7a5760405162461bcd60e51b81526004018080602001828103825260338152602001806132506033913960400191505060405180910390fd5b6002548314610eba5760405162461bcd60e51b815260040180806020018281038252603f8152602001806131ef603f913960400191505060405180910390fd5b600060025411610f11576040805162461bcd60e51b815260206004820152601d60248201527f4e6f20617070726f766564207465616d7320746f206576616c75617465000000604482015290519081900360640190fd5b336000908152600d602052604090206001810154600160a81b900460ff1615610f6b5760405162461bcd60e51b81526004018080602001828103825260228152602001806130b76022913960400191505060405180910390fd5b60005b6002548110156110d9576000868683818110610f8657fe5b9050602002013590506000858584818110610f9d57fe5b9050602002013560ff169050610fb282612469565b610ff5576040805162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d19585b481a59608a1b604482015290519081900360640190fd5b610ffe82612629565b611046576040805162461bcd60e51b81526020600482015260146024820152731519585b481a5cc81b9bdd08185c1c1c9bdd995960621b604482015290519081900360640190fd5b61104f816126c3565b611090576040805162461bcd60e51b815260206004820152600d60248201526c496e76616c696420677261646560981b604482015290519081900360640190fd5b60006001838154811061109f57fe5b906000526020600020906006020190506110c98260ff1682600501546126cf90919063ffffffff16565b6005909101555050600101610f6e565b5060018101805460ff60a81b1916600160a81b17908190558154604080516001600160a01b0390931683525190917fd62869bbd78965284c34750092d78b62093e2d02b730d0ce696ebdcb371bb5dc919081900360200190a25050505050565b6001818154811061114657fe5b600091825260209091206006909102018054600182015460028301546003840154600485015460059095015493955091936001600160a01b039091169260ff9091169086565b611195336111df565b6111d05760405162461bcd60e51b81526004018080602001828103825260338152602001806131046033913960400191505060405180910390fd5b6021805460ff19166001179055565b60006111f260048363ffffffff61273016565b90505b919050565b61120333612797565b565b6000808080806001600160a01b03861661125d576040805162461bcd60e51b8152602060048201526014602482015273496e76616c6964207a65726f206164647265737360601b604482015290519081900360640190fd5b611265613039565b505050506001600160a01b0392831660009081526020818152604091829020825160c0810184528154815260018201549281018390526002820154909616928601839052600381015460608701819052600482015460ff1615156080880181905260059092015460a090970187905291969295919450925090565b600354610100900460ff1690565b611203336127c7565b600354610100900460ff1615611349576040805162461bcd60e51b815260206004820152601260248201527129bab136b4b9b9b4b7b71034b99037b832b760711b604482015290519081900360640190fd5b611352336111df565b61138d5760405162461bcd60e51b81526004018080602001828103825260338152602001806131046033913960400191505060405180910390fd5b61120361280a565b60245481565b600f54601554601b54909192565b60035460009060ff166113fc576040805162461bcd60e51b8152602060048201526016602482015275149959da5cdd1c985d1a5bdb881a5cc818db1bdcd95960521b604482015290519081900360640190fd5b8360001a60f81b6001600160f81b03191661145e576040805162461bcd60e51b815260206004820152601960248201527f5465616d206e616d652063616e6e6f7420626520656d70747900000000000000604482015290519081900360640190fd5b6001600160a01b0383166114b9576040805162461bcd60e51b815260206004820152601b60248201527f5465616d20616464726573732063616e6e6f74206265207a65726f0000000000604482015290519081900360640190fd5b6001600160a01b038381166000908152602081905260409020600201541615611529576040805162461bcd60e51b815260206004820152601760248201527f5465616d20616c72656164792072656769737465726564000000000000000000604482015290519081900360640190fd5b600154611534613039565b506040805160c081018252828152602081018781526001600160a01b0387811693830193845260608301878152600160808501818152600060a08701818152835480850185559184905287517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf660069093029283015595517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf782015596517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf8880180546001600160a01b031916919095161790935590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf986015590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfa8501805460ff191691151591909117905590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfb9093019290925581549091908390811061169c57fe5b600091825260208083206001600160a01b03808a1685529184905260409093206006909202909201805482556001808201548184015560028083015481850180546001600160a01b031916919096161790945560038083015490840155600480830154908401805460ff909216151560ff19909216919091179055600591820154919092015590546117339163ffffffff6126cf16565b600255604080518781526001602082015281516001600160a01b0388169285927f443b25596b838f2775d21b1153b87036f08c058fd4702446f1136ab26e5f3b90929081900390910190a350949350505050565b60035460ff166117d7576040805162461bcd60e51b8152602060048201526016602482015275149959da5cdd1c985d1a5bdb881a5cc818db1bdcd95960521b604482015290519081900360640190fd5b6117e0336111df565b61181b5760405162461bcd60e51b81526004018080602001828103825260338152602001806131046033913960400191505060405180910390fd5b61120361285a565b60035460ff1615611872576040805162461bcd60e51b81526020600482015260146024820152732932b3b4b9ba3930ba34b7b71034b99037b832b760611b604482015290519081900360640190fd5b600354610100900460ff16156118c4576040805162461bcd60e51b815260206004820152601260248201527129bab136b4b9b9b4b7b71034b99037b832b760711b604482015290519081900360640190fd5b600e5460ff1615611911576040805162461bcd60e51b815260206004820152601260248201527122bb30b63ab0ba34b7b71034b99037b832b760711b604482015290519081900360640190fd5b61191a336111df565b6119555760405162461bcd60e51b81526004018080602001828103825260338152602001806131046033913960400191505060405180910390fd5b60215460ff16156119a6576040805162461bcd60e51b815260206004820152601660248201527514985b9ac8185b1c9958591e481c1d589b1a5cda195960521b604482015290519081900360640190fd5b6000600254116119f3576040805162461bcd60e51b8152602060048201526013602482015272139bc81d19585b5cc81c9959da5cdd195c9959606a1b604482015290519081900360640190fd5b6119fb613039565b611a03613039565b611a0b613039565b611a13613039565b60005b600154811015611afe5760018181548110611a2d57fe5b60009182526020918290206040805160c08101825260069093029091018054835260018101549383019390935260028301546001600160a01b03169082015260038201546060820152600482015460ff16158015608083015260059092015460a0820152955080611aa557508160a001518560a00151105b15611aaf57611af6565b8360a001518560a001511115611ac9578493929150611af6565b8260a001518560a001511115611ae25784929150611af6565b8160a001518560a001511115611af6578491505b600101611a16565b508251600f819055602080850151601055604080860151601180546001600160a01b03199081166001600160a01b0393841617918290556060808a01516012556080808b01516013805460ff1990811692151592909217905560a0808d015160148190558c516015558c8a01516016558c890151601780548816918a169190911790558c8501516018558c8401516019805485169115159190911790558c820151601a558b51601b558b8a0151601c558b890151601d8054909716908916179095558a840151601e558a830151601f805484169115159190911790558a01518855602180549091166001908117909155865198895293909416958701959095528584015292840192909252517f78bd43bbb342abb837e10002dd4fcda5ea371db518ce4e9aff10ab136441a99c9281900390910190a1601554601754601a54604080519384526001600160a01b0390921660208401528282015260026060830152517f78bd43bbb342abb837e10002dd4fcda5ea371db518ce4e9aff10ab136441a99c9181900360800190a1601b54601d5460208054604080519485526001600160a01b03909316918401919091528282015260036060830152517f78bd43bbb342abb837e10002dd4fcda5ea371db518ce4e9aff10ab136441a99c9181900360800190a150505050565b611cf2336111df565b611d2d5760405162461bcd60e51b81526004018080602001828103825260338152602001806131046033913960400191505060405180910390fd5b610d678161289a565b600e5460ff1690565b611d48336111df565b611d835760405162461bcd60e51b81526004018080602001828103825260338152602001806131046033913960400191505060405180910390fd5b602b805460ff19166001179055565b600e5460ff16611de0576040805162461bcd60e51b8152602060048201526014602482015273115d985b1d585d1a5bdb881a5cc818db1bdcd95960621b604482015290519081900360640190fd5b611de9336111df565b611e245760405162461bcd60e51b81526004018080602001828103825260338152602001806131046033913960400191505060405180910390fd5b611203612a2d565b611e35336111df565b611e705760405162461bcd60e51b81526004018080602001828103825260338152602001806131046033913960400191505060405180910390fd5b610d6781612797565b60225481565b600e5460ff1615611ecc576040805162461bcd60e51b815260206004820152601260248201527122bb30b63ab0ba34b7b71034b99037b832b760711b604482015290519081900360640190fd5b611ed5336111df565b611f105760405162461bcd60e51b81526004018080602001828103825260338152602001806131046033913960400191505060405180910390fd5b611203612a6d565b60035460ff1615611f67576040805162461bcd60e51b81526020600482015260146024820152732932b3b4b9ba3930ba34b7b71034b99037b832b760611b604482015290519081900360640190fd5b611f70336111df565b611fab5760405162461bcd60e51b81526004018080602001828103825260338152602001806131046033913960400191505060405180910390fd5b611203612ab7565b60003411611ff25760405162461bcd60e51b81526004018080602001828103825260218152602001806130966021913960400191505060405180910390fd5b604080513481529051429133917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159181900360200190a3565b60035460ff1690565b61203d336111df565b6120785760405162461bcd60e51b81526004018080602001828103825260338152602001806131046033913960400191505060405180910390fd5b610d6781612b01565b8161208b81612469565b6120ce576040805162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d19585b481a59608a1b604482015290519081900360640190fd5b826120d881612629565b612120576040805162461bcd60e51b81526020600482015260146024820152731519585b481a5cc81b9bdd08185c1c1c9bdd995960621b604482015290519081900360640190fd5b600354610100900460ff16612173576040805162461bcd60e51b815260206004820152601460248201527314dd589b5a5cdcda5bdb881a5cc818db1bdcd95960621b604482015290519081900360640190fd5b60006001858154811061218257fe5b60009182526020918290206003600690920201908101869055600281015481546040805189815290519395506001600160a01b039092169390927fa44de9e6ce79675199796005de8516704078af25aaf78ab4be180213882560ee9281900390910190a35050505050565b60006111f260058363ffffffff61273016565b610d6781612b78565b612212336111df565b61224d5760405162461bcd60e51b81526004018080602001828103825260338152602001806131046033913960400191505060405180910390fd5b602b5460ff16156122a5576040805162461bcd60e51b815260206004820152601860248201527f5072697a657320616c726561647920616c6c6f63617465640000000000000000604482015290519081900360640190fd5b60006122c7826122bb868663ffffffff6126cf16565b9063ffffffff6126cf16565b9050478111156123085760405162461bcd60e51b81526004018080602001828103825260308152602001806132a56030913960400191505060405180910390fd5b6040805180820182528581526000602091820181905260258790556026805460ff1990811690915583518085018552878152830182905260278790556028805482169055835180850185528681528301919091526029859055602a805482169055602b805490911660011790558151868152908101859052808201849052426060820152905133917f60e7ffaf15f306ac55b9117669d2fd27994d49f2ccf8490fc874df9ebb5706aa919081900360800190a250505050565b602b5460ff1690565b600354610100900460ff1661241d576040805162461bcd60e51b815260206004820152601460248201527314dd589b5a5cdcda5bdb881a5cc818db1bdcd95960621b604482015290519081900360640190fd5b612426336111df565b6124615760405162461bcd60e51b81526004018080602001828103825260338152602001806131046033913960400191505060405180910390fd5b611203612c53565b6001541190565b6011546000906001600160a01b038381169116148061249c57506017546001600160a01b038381169116145b806111f2575050601d546001600160a01b0390811691161490565b806124c181612469565b612504576040805162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d19585b481a59608a1b604482015290519081900360640190fd5b8161250e81612629565b15612558576040805162461bcd60e51b81526020600482015260156024820152742a32b0b69034b9903737ba103932b83937bb32b21760591b604482015290519081900360640190fd5b60006001848154811061256757fe5b600091825260209091206004600690920201908101805460ff191660019081179091556002549192506125a0919063ffffffff6126cf16565b6002908155810154815460048301546040805160ff90921615158252516001600160a01b03909316927fd903780bcf5bcea81714ac3450a34cb3de7b0735a59883e1eb90edd901a54ad49181900360200190a350505050565b60005b8151811015610da65761262182828151811061261457fe5b6020026020010151612b78565b6001016125fc565b600061263482612469565b612640575060006111f5565b612648613039565b6001838154811061265557fe5b60009182526020918290206040805160c08101825260069093029091018054835260018101549383019390935260028301546001600160a01b03169082015260038201546060820152600482015460ff1615156080820181905260059092015460a090910152915050919050565b600a60ff909116111590565b600082820183811015612729576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b60006001600160a01b0382166127775760405162461bcd60e51b81526004018080602001828103825260228152602001806132836022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6127a081612c9e565b6001600160a01b03166000908152600d60205260409020600101805460ff60a01b19169055565b6127d081612ce1565b6001600160a01b0381166000908152600b60205260409020805460ff19169055600a5461280490600163ffffffff612d2916565b600a5550565b6003805461ff00191661010090811791829055604080519190920460ff161515815290517f48fbf5c7b70581e7e2145562de373e14a5af56d09f9b96d73545d0d35f71f0889181900360200190a1565b6003805460ff19169055604080516000815290517f78b477400a612eb4ec0a343596323cccfac06b27624264a549d8322c736d055c9181900360200190a1565b6128a381612d6b565b600c546128ae61306e565b6040518060800160405280838152602001846001600160a01b03168152602001600115158152602001600015158152509050600c81908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010160146101000a81548160ff02191690831515021790555060608201518160010160156101000a81548160ff02191690831515021790555050505080600d6000856001600160a01b03166001600160a01b031681526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010160146101000a81548160ff02191690831515021790555060608201518160010160156101000a81548160ff021916908315150217905550905050505050565b600e805460ff19169055604080516000815290517f0266365b4830894a247179cbad20f3dfe40ba70917925976027d2af68d950bed9181900360200190a1565b600e805460ff1916600117908190556040805160ff9290921615158252517f0266365b4830894a247179cbad20f3dfe40ba70917925976027d2af68d950bed9181900360200190a1565b6003805460ff1916600117908190556040805160ff9290921615158252517f78b477400a612eb4ec0a343596323cccfac06b27624264a549d8322c736d055c9181900360200190a1565b612b0a81612de2565b6009805460018082019092557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b0319166001600160a01b0384169081179091556000908152600b60205260409020805460ff191682179055600a54612804916126cf565b80612b8281612469565b612bc5576040805162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d19585b481a59608a1b604482015290519081900360640190fd5b81612bcf81612629565b612c17576040805162461bcd60e51b81526020600482015260146024820152731519585b481a5cc81b9bdd08185c1c1c9bdd995960621b604482015290519081900360640190fd5b600060018481548110612c2657fe5b6000918252602090912060069091020160048101805460ff191690556002549091506125a0906001612d29565b6003805461ff001916908190556040805161010090920460ff1615158252517f48fbf5c7b70581e7e2145562de373e14a5af56d09f9b96d73545d0d35f71f0889181900360200190a1565b612ca781612e2a565b6001600160a01b0381166000908152600860205260409020805460ff19169055600754612cdb90600163ffffffff612d2916565b60075550565b612cf260048263ffffffff612e7216565b6040516001600160a01b038216907fc459bd414676a5877fcf10a0d73ecf7e1f672a339650b03e628c4046534300e390600090a250565b600061272983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612ed9565b612d7481612f70565b6006805460018082019092557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319166001600160a01b0384169081179091556000908152600860205260409020805460ff191682179055600754612cdb916126cf565b612df360048263ffffffff612fb816565b6040516001600160a01b038216907f37e96fc6762bae414e69ea6e2490e63bc46f2a1335de0f6b91f49cf808829bcf90600090a250565b612e3b60058263ffffffff612e7216565b6040516001600160a01b038216907f32a792a099c63670df7161917c5efb2fdc734cf9f943ebddccbecef87664f2b790600090a250565b612e7c8282612730565b612eb75760405162461bcd60e51b81526004018080602001828103825260218152602001806131376021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b60008184841115612f685760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612f2d578181015183820152602001612f15565b50505050905090810190601f168015612f5a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b612f8160058263ffffffff612fb816565b6040516001600160a01b038216907fe7f15f9ffff540ae14fdebcd9b6d6cc1fc143933338656c99caa595e8b80903990600090a250565b612fc28282612730565b15613014576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915290565b6040805160808101825260008082526020820181905291810182905260608101919091529056fe6d73672e76616c7565206d757374206265206772656174686572207468616e20304a7564676520616c7265616479207375626d6974746564206576616c756174696f6e4a75646765526f6c653a2063616c6c657220646f6573206e6f742068617665204a7564676520526f6c652e4f7267616e697a6572526f6c653a2063616c6c657220646f6573206e6f742068617665204f7267616e697a657220526f6c652e526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65416464726573732063616e6e6f7420626520657175616c20746f20636f6e7472616374202874686973292061646472657373496e76616c696420616464726573732e204164647265737320636865636b206661696c65642e2053686f756c64206e6f74207265616368207468697320706f696e742e5072697a6520616c7265616479207061696420666f7220666972737420706c6163657465616d7349647320616e642067726164657320646f206e6f74206d617463682074686520636f756e74696e67206f6620617070726f766564207465616d735072697a6520616c7265616479207061696420666f7220746869726420706c6163654c656e677468206f66207465616d7320616e64207465616d47726164657320617272617973206d75737420626520657175616c526f6c65733a206163636f756e7420697320746865207a65726f20616464726573734e6f7420656e6f7567682066756e647320617661696c61626c6520696e206861636b6174686f6e20636f6e74726163745072697a6520616c7265616479207061696420666f72207365636f6e6420706c616365a265627a7a72315820ab74bf7753677bbec75db7c55166748e07f479889be32cada09d0c580b6e4dd064736f6c63430005100032526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
  "deployedBytecode": "0x60806040526004361061020e5760003560e01c806390d768e411610118578063d0e30db0116100a0578063ed896d661161006f578063ed896d66146107a3578063f540548b146107d6578063f59ec3f914610800578063ff91865114610836578063ffc6ff1e1461084b5761020e565b8063d0e30db014610723578063e35fb2411461072b578063e4725f0214610740578063eaf2f9cd146107735761020e565b8063ae237c77116100e7578063ae237c771461069c578063ae2ac4ae146106b1578063af640d0f146106e4578063b2a13f92146106f9578063d06e4ee71461070e5761020e565b806390d768e41461062a578063927cab471461063f578063a2bce8bd14610672578063a72418a4146106875761020e565b80634b30b66f1161019b57806358e2f50e1161016a57806358e2f50e146105795780637284e4161461058e578063737a6340146105a35780637385712c146105d65780637dc673bc146106155761020e565b80634b30b66f146105075780634ea701a81461051c57806354e1db2b1461054f578063567ad862146105645761020e565b8063288c4a46116101e2578063288c4a46146102f85780633e091f64146103755780633ed2b77a14610444578063400feb02146104ab57806341676f15146104c05761020e565b80628e0f1b1461021357806306fdde031461027257806311dc45c91461029957806324ba9fab146102ce575b600080fd5b34801561021f57600080fd5b5061023d6004803603602081101561023657600080fd5b5035610860565b604080519586526001600160a01b03909416602086015284840192909252151560608401526080830152519081900360a00190f35b34801561027e57600080fd5b5061028761094a565b60408051918252519081900360200190f35b3480156102a557600080fd5b506102cc600480360360208110156102bc57600080fd5b50356001600160a01b0316610950565b005b3480156102da57600080fd5b506102cc600480360360208110156102f157600080fd5b5035610d5e565b34801561030457600080fd5b506102cc6004803603602081101561031b57600080fd5b81019060208101813564010000000081111561033657600080fd5b82018360208201111561034857600080fd5b8035906020019184602083028401116401000000008311171561036a57600080fd5b509092509050610d6a565b34801561038157600080fd5b506102cc6004803603604081101561039857600080fd5b8101906020810181356401000000008111156103b357600080fd5b8201836020820111156103c557600080fd5b803590602001918460208302840111640100000000831117156103e757600080fd5b91939092909160208101903564010000000081111561040557600080fd5b82018360208201111561041757600080fd5b8035906020019184602083028401116401000000008311171561043957600080fd5b509092509050610daa565b34801561045057600080fd5b5061046e6004803603602081101561046757600080fd5b5035611139565b6040805196875260208701959095526001600160a01b039093168585015260608501919091521515608084015260a0830152519081900360c00190f35b3480156104b757600080fd5b506102cc61118c565b3480156104cc57600080fd5b506104f3600480360360208110156104e357600080fd5b50356001600160a01b03166111df565b604080519115158252519081900360200190f35b34801561051357600080fd5b506102cc6111fa565b34801561052857600080fd5b5061023d6004803603602081101561053f57600080fd5b50356001600160a01b0316611205565b34801561055b57600080fd5b506104f36112e0565b34801561057057600080fd5b506102cc6112ee565b34801561058557600080fd5b506102cc6112f7565b34801561059a57600080fd5b50610287611395565b3480156105af57600080fd5b506105b861139b565b60408051938452602084019290925282820152519081900360600190f35b3480156105e257600080fd5b50610287600480360360608110156105f957600080fd5b508035906001600160a01b0360208201351690604001356113a9565b34801561062157600080fd5b506102cc611787565b34801561063657600080fd5b506102cc611823565b34801561064b57600080fd5b506102cc6004803603602081101561066257600080fd5b50356001600160a01b0316611ce9565b34801561067e57600080fd5b506104f3611d36565b34801561069357600080fd5b506102cc611d3f565b3480156106a857600080fd5b506102cc611d92565b3480156106bd57600080fd5b506102cc600480360360208110156106d457600080fd5b50356001600160a01b0316611e2c565b3480156106f057600080fd5b50610287611e79565b34801561070557600080fd5b506102cc611e7f565b34801561071a57600080fd5b506102cc611f18565b6102cc611fb3565b34801561073757600080fd5b506104f361202b565b34801561074c57600080fd5b506102cc6004803603602081101561076357600080fd5b50356001600160a01b0316612034565b34801561077f57600080fd5b506102cc6004803603604081101561079657600080fd5b5080359060200135612081565b3480156107af57600080fd5b506104f3600480360360208110156107c657600080fd5b50356001600160a01b03166121ed565b3480156107e257600080fd5b506102cc600480360360208110156107f957600080fd5b5035612200565b34801561080c57600080fd5b506102cc6004803603606081101561082357600080fd5b5080359060208101359060400135612209565b34801561084257600080fd5b506104f36123c1565b34801561085757600080fd5b506102cc6123ca565b60008060008060008561087281612469565b6108b5576040805162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d19585b481a59608a1b604482015290519081900360640190fd5b6108bd613039565b600188815481106108ca57fe5b60009182526020918290206040805160c08101825260069390930290910180548352600181015493830184905260028101546001600160a01b0316918301829052600381015460608401819052600482015460ff1615156080850181905260059092015460a0909401849052939c919b5092995091975095509350505050565b60235481565b60215460ff166109a0576040805162461bcd60e51b815260206004820152601660248201527514985b9ac81b9bdd081c1d589b1a5cda1959081e595d60521b604482015290519081900360640190fd5b602b5460ff166109f7576040805162461bcd60e51b815260206004820152601860248201527f5072697a6573206e6f7420616c6c6f6361746564207965740000000000000000604482015290519081900360640190fd5b806001600160a01b038116610a4a576040805162461bcd60e51b8152602060048201526014602482015273496e76616c6964207a65726f206164647265737360601b604482015290519081900360640190fd5b6001600160a01b038116301415610a925760405162461bcd60e51b81526004018080602001828103825260328152602001806131586032913960400191505060405180910390fd5b81610a9c81612470565b610aed576040805162461bcd60e51b815260206004820152601f60248201527f4163636f756e742061646472657373206973206e6f7420612077696e6e657200604482015290519081900360640190fd5b601154600090819081906001600160a01b0387811691161415610b775750506011546025546026546001600160a01b0390921692509060019060ff1615610b655760405162461bcd60e51b81526004018080602001828103825260228152602001806131cd6022913960400191505060405180910390fd5b6026805460ff19166001179055610cb4565b6017546001600160a01b0387811691161415610bfa5750506017546027546028546001600160a01b0390921692509060029060ff1615610be85760405162461bcd60e51b81526004018080602001828103825260238152602001806132d56023913960400191505060405180910390fd5b6028805460ff19166001179055610cb4565b601d546001600160a01b0387811691161415610c7d575050601d54602954602a546001600160a01b0390921692509060039060ff1615610c6b5760405162461bcd60e51b815260040180806020018281038252602281526020018061322e6022913960400191505060405180910390fd5b602a805460ff19166001179055610cb4565b60405162461bcd60e51b815260040180806020018281038252604381526020018061318a6043913960600191505060405180910390fd5b6040805183815260ff831660208201524281830152905133916001600160a01b038616917f24cc64e111181860a0e50314e2717d8d86bc21fb600e5681040e47cd5eab7f079181900360600190a3826001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b158015610d3d57600080fd5b505af1158015610d51573d6000803e3d6000fd5b5050505050505050505050565b610d67816124b7565b50565b610da68282808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506125f992505050565b5050565b600e5460ff16610df8576040805162461bcd60e51b8152602060048201526014602482015273115d985b1d585d1a5bdb881a5cc818db1bdcd95960621b604482015290519081900360640190fd5b610e01336121ed565b610e3c5760405162461bcd60e51b815260040180806020018281038252602b8152602001806130d9602b913960400191505060405180910390fd5b828114610e7a5760405162461bcd60e51b81526004018080602001828103825260338152602001806132506033913960400191505060405180910390fd5b6002548314610eba5760405162461bcd60e51b815260040180806020018281038252603f8152602001806131ef603f913960400191505060405180910390fd5b600060025411610f11576040805162461bcd60e51b815260206004820152601d60248201527f4e6f20617070726f766564207465616d7320746f206576616c75617465000000604482015290519081900360640190fd5b336000908152600d602052604090206001810154600160a81b900460ff1615610f6b5760405162461bcd60e51b81526004018080602001828103825260228152602001806130b76022913960400191505060405180910390fd5b60005b6002548110156110d9576000868683818110610f8657fe5b9050602002013590506000858584818110610f9d57fe5b9050602002013560ff169050610fb282612469565b610ff5576040805162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d19585b481a59608a1b604482015290519081900360640190fd5b610ffe82612629565b611046576040805162461bcd60e51b81526020600482015260146024820152731519585b481a5cc81b9bdd08185c1c1c9bdd995960621b604482015290519081900360640190fd5b61104f816126c3565b611090576040805162461bcd60e51b815260206004820152600d60248201526c496e76616c696420677261646560981b604482015290519081900360640190fd5b60006001838154811061109f57fe5b906000526020600020906006020190506110c98260ff1682600501546126cf90919063ffffffff16565b6005909101555050600101610f6e565b5060018101805460ff60a81b1916600160a81b17908190558154604080516001600160a01b0390931683525190917fd62869bbd78965284c34750092d78b62093e2d02b730d0ce696ebdcb371bb5dc919081900360200190a25050505050565b6001818154811061114657fe5b600091825260209091206006909102018054600182015460028301546003840154600485015460059095015493955091936001600160a01b039091169260ff9091169086565b611195336111df565b6111d05760405162461bcd60e51b81526004018080602001828103825260338152602001806131046033913960400191505060405180910390fd5b6021805460ff19166001179055565b60006111f260048363ffffffff61273016565b90505b919050565b61120333612797565b565b6000808080806001600160a01b03861661125d576040805162461bcd60e51b8152602060048201526014602482015273496e76616c6964207a65726f206164647265737360601b604482015290519081900360640190fd5b611265613039565b505050506001600160a01b0392831660009081526020818152604091829020825160c0810184528154815260018201549281018390526002820154909616928601839052600381015460608701819052600482015460ff1615156080880181905260059092015460a090970187905291969295919450925090565b600354610100900460ff1690565b611203336127c7565b600354610100900460ff1615611349576040805162461bcd60e51b815260206004820152601260248201527129bab136b4b9b9b4b7b71034b99037b832b760711b604482015290519081900360640190fd5b611352336111df565b61138d5760405162461bcd60e51b81526004018080602001828103825260338152602001806131046033913960400191505060405180910390fd5b61120361280a565b60245481565b600f54601554601b54909192565b60035460009060ff166113fc576040805162461bcd60e51b8152602060048201526016602482015275149959da5cdd1c985d1a5bdb881a5cc818db1bdcd95960521b604482015290519081900360640190fd5b8360001a60f81b6001600160f81b03191661145e576040805162461bcd60e51b815260206004820152601960248201527f5465616d206e616d652063616e6e6f7420626520656d70747900000000000000604482015290519081900360640190fd5b6001600160a01b0383166114b9576040805162461bcd60e51b815260206004820152601b60248201527f5465616d20616464726573732063616e6e6f74206265207a65726f0000000000604482015290519081900360640190fd5b6001600160a01b038381166000908152602081905260409020600201541615611529576040805162461bcd60e51b815260206004820152601760248201527f5465616d20616c72656164792072656769737465726564000000000000000000604482015290519081900360640190fd5b600154611534613039565b506040805160c081018252828152602081018781526001600160a01b0387811693830193845260608301878152600160808501818152600060a08701818152835480850185559184905287517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf660069093029283015595517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf782015596517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf8880180546001600160a01b031916919095161790935590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf986015590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfa8501805460ff191691151591909117905590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfb9093019290925581549091908390811061169c57fe5b600091825260208083206001600160a01b03808a1685529184905260409093206006909202909201805482556001808201548184015560028083015481850180546001600160a01b031916919096161790945560038083015490840155600480830154908401805460ff909216151560ff19909216919091179055600591820154919092015590546117339163ffffffff6126cf16565b600255604080518781526001602082015281516001600160a01b0388169285927f443b25596b838f2775d21b1153b87036f08c058fd4702446f1136ab26e5f3b90929081900390910190a350949350505050565b60035460ff166117d7576040805162461bcd60e51b8152602060048201526016602482015275149959da5cdd1c985d1a5bdb881a5cc818db1bdcd95960521b604482015290519081900360640190fd5b6117e0336111df565b61181b5760405162461bcd60e51b81526004018080602001828103825260338152602001806131046033913960400191505060405180910390fd5b61120361285a565b60035460ff1615611872576040805162461bcd60e51b81526020600482015260146024820152732932b3b4b9ba3930ba34b7b71034b99037b832b760611b604482015290519081900360640190fd5b600354610100900460ff16156118c4576040805162461bcd60e51b815260206004820152601260248201527129bab136b4b9b9b4b7b71034b99037b832b760711b604482015290519081900360640190fd5b600e5460ff1615611911576040805162461bcd60e51b815260206004820152601260248201527122bb30b63ab0ba34b7b71034b99037b832b760711b604482015290519081900360640190fd5b61191a336111df565b6119555760405162461bcd60e51b81526004018080602001828103825260338152602001806131046033913960400191505060405180910390fd5b60215460ff16156119a6576040805162461bcd60e51b815260206004820152601660248201527514985b9ac8185b1c9958591e481c1d589b1a5cda195960521b604482015290519081900360640190fd5b6000600254116119f3576040805162461bcd60e51b8152602060048201526013602482015272139bc81d19585b5cc81c9959da5cdd195c9959606a1b604482015290519081900360640190fd5b6119fb613039565b611a03613039565b611a0b613039565b611a13613039565b60005b600154811015611afe5760018181548110611a2d57fe5b60009182526020918290206040805160c08101825260069093029091018054835260018101549383019390935260028301546001600160a01b03169082015260038201546060820152600482015460ff16158015608083015260059092015460a0820152955080611aa557508160a001518560a00151105b15611aaf57611af6565b8360a001518560a001511115611ac9578493929150611af6565b8260a001518560a001511115611ae25784929150611af6565b8160a001518560a001511115611af6578491505b600101611a16565b508251600f819055602080850151601055604080860151601180546001600160a01b03199081166001600160a01b0393841617918290556060808a01516012556080808b01516013805460ff1990811692151592909217905560a0808d015160148190558c516015558c8a01516016558c890151601780548816918a169190911790558c8501516018558c8401516019805485169115159190911790558c820151601a558b51601b558b8a0151601c558b890151601d8054909716908916179095558a840151601e558a830151601f805484169115159190911790558a01518855602180549091166001908117909155865198895293909416958701959095528584015292840192909252517f78bd43bbb342abb837e10002dd4fcda5ea371db518ce4e9aff10ab136441a99c9281900390910190a1601554601754601a54604080519384526001600160a01b0390921660208401528282015260026060830152517f78bd43bbb342abb837e10002dd4fcda5ea371db518ce4e9aff10ab136441a99c9181900360800190a1601b54601d5460208054604080519485526001600160a01b03909316918401919091528282015260036060830152517f78bd43bbb342abb837e10002dd4fcda5ea371db518ce4e9aff10ab136441a99c9181900360800190a150505050565b611cf2336111df565b611d2d5760405162461bcd60e51b81526004018080602001828103825260338152602001806131046033913960400191505060405180910390fd5b610d678161289a565b600e5460ff1690565b611d48336111df565b611d835760405162461bcd60e51b81526004018080602001828103825260338152602001806131046033913960400191505060405180910390fd5b602b805460ff19166001179055565b600e5460ff16611de0576040805162461bcd60e51b8152602060048201526014602482015273115d985b1d585d1a5bdb881a5cc818db1bdcd95960621b604482015290519081900360640190fd5b611de9336111df565b611e245760405162461bcd60e51b81526004018080602001828103825260338152602001806131046033913960400191505060405180910390fd5b611203612a2d565b611e35336111df565b611e705760405162461bcd60e51b81526004018080602001828103825260338152602001806131046033913960400191505060405180910390fd5b610d6781612797565b60225481565b600e5460ff1615611ecc576040805162461bcd60e51b815260206004820152601260248201527122bb30b63ab0ba34b7b71034b99037b832b760711b604482015290519081900360640190fd5b611ed5336111df565b611f105760405162461bcd60e51b81526004018080602001828103825260338152602001806131046033913960400191505060405180910390fd5b611203612a6d565b60035460ff1615611f67576040805162461bcd60e51b81526020600482015260146024820152732932b3b4b9ba3930ba34b7b71034b99037b832b760611b604482015290519081900360640190fd5b611f70336111df565b611fab5760405162461bcd60e51b81526004018080602001828103825260338152602001806131046033913960400191505060405180910390fd5b611203612ab7565b60003411611ff25760405162461bcd60e51b81526004018080602001828103825260218152602001806130966021913960400191505060405180910390fd5b604080513481529051429133917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159181900360200190a3565b60035460ff1690565b61203d336111df565b6120785760405162461bcd60e51b81526004018080602001828103825260338152602001806131046033913960400191505060405180910390fd5b610d6781612b01565b8161208b81612469565b6120ce576040805162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d19585b481a59608a1b604482015290519081900360640190fd5b826120d881612629565b612120576040805162461bcd60e51b81526020600482015260146024820152731519585b481a5cc81b9bdd08185c1c1c9bdd995960621b604482015290519081900360640190fd5b600354610100900460ff16612173576040805162461bcd60e51b815260206004820152601460248201527314dd589b5a5cdcda5bdb881a5cc818db1bdcd95960621b604482015290519081900360640190fd5b60006001858154811061218257fe5b60009182526020918290206003600690920201908101869055600281015481546040805189815290519395506001600160a01b039092169390927fa44de9e6ce79675199796005de8516704078af25aaf78ab4be180213882560ee9281900390910190a35050505050565b60006111f260058363ffffffff61273016565b610d6781612b78565b612212336111df565b61224d5760405162461bcd60e51b81526004018080602001828103825260338152602001806131046033913960400191505060405180910390fd5b602b5460ff16156122a5576040805162461bcd60e51b815260206004820152601860248201527f5072697a657320616c726561647920616c6c6f63617465640000000000000000604482015290519081900360640190fd5b60006122c7826122bb868663ffffffff6126cf16565b9063ffffffff6126cf16565b9050478111156123085760405162461bcd60e51b81526004018080602001828103825260308152602001806132a56030913960400191505060405180910390fd5b6040805180820182528581526000602091820181905260258790556026805460ff1990811690915583518085018552878152830182905260278790556028805482169055835180850185528681528301919091526029859055602a805482169055602b805490911660011790558151868152908101859052808201849052426060820152905133917f60e7ffaf15f306ac55b9117669d2fd27994d49f2ccf8490fc874df9ebb5706aa919081900360800190a250505050565b602b5460ff1690565b600354610100900460ff1661241d576040805162461bcd60e51b815260206004820152601460248201527314dd589b5a5cdcda5bdb881a5cc818db1bdcd95960621b604482015290519081900360640190fd5b612426336111df565b6124615760405162461bcd60e51b81526004018080602001828103825260338152602001806131046033913960400191505060405180910390fd5b611203612c53565b6001541190565b6011546000906001600160a01b038381169116148061249c57506017546001600160a01b038381169116145b806111f2575050601d546001600160a01b0390811691161490565b806124c181612469565b612504576040805162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d19585b481a59608a1b604482015290519081900360640190fd5b8161250e81612629565b15612558576040805162461bcd60e51b81526020600482015260156024820152742a32b0b69034b9903737ba103932b83937bb32b21760591b604482015290519081900360640190fd5b60006001848154811061256757fe5b600091825260209091206004600690920201908101805460ff191660019081179091556002549192506125a0919063ffffffff6126cf16565b6002908155810154815460048301546040805160ff90921615158252516001600160a01b03909316927fd903780bcf5bcea81714ac3450a34cb3de7b0735a59883e1eb90edd901a54ad49181900360200190a350505050565b60005b8151811015610da65761262182828151811061261457fe5b6020026020010151612b78565b6001016125fc565b600061263482612469565b612640575060006111f5565b612648613039565b6001838154811061265557fe5b60009182526020918290206040805160c08101825260069093029091018054835260018101549383019390935260028301546001600160a01b03169082015260038201546060820152600482015460ff1615156080820181905260059092015460a090910152915050919050565b600a60ff909116111590565b600082820183811015612729576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b60006001600160a01b0382166127775760405162461bcd60e51b81526004018080602001828103825260228152602001806132836022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6127a081612c9e565b6001600160a01b03166000908152600d60205260409020600101805460ff60a01b19169055565b6127d081612ce1565b6001600160a01b0381166000908152600b60205260409020805460ff19169055600a5461280490600163ffffffff612d2916565b600a5550565b6003805461ff00191661010090811791829055604080519190920460ff161515815290517f48fbf5c7b70581e7e2145562de373e14a5af56d09f9b96d73545d0d35f71f0889181900360200190a1565b6003805460ff19169055604080516000815290517f78b477400a612eb4ec0a343596323cccfac06b27624264a549d8322c736d055c9181900360200190a1565b6128a381612d6b565b600c546128ae61306e565b6040518060800160405280838152602001846001600160a01b03168152602001600115158152602001600015158152509050600c81908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010160146101000a81548160ff02191690831515021790555060608201518160010160156101000a81548160ff02191690831515021790555050505080600d6000856001600160a01b03166001600160a01b031681526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010160146101000a81548160ff02191690831515021790555060608201518160010160156101000a81548160ff021916908315150217905550905050505050565b600e805460ff19169055604080516000815290517f0266365b4830894a247179cbad20f3dfe40ba70917925976027d2af68d950bed9181900360200190a1565b600e805460ff1916600117908190556040805160ff9290921615158252517f0266365b4830894a247179cbad20f3dfe40ba70917925976027d2af68d950bed9181900360200190a1565b6003805460ff1916600117908190556040805160ff9290921615158252517f78b477400a612eb4ec0a343596323cccfac06b27624264a549d8322c736d055c9181900360200190a1565b612b0a81612de2565b6009805460018082019092557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b0319166001600160a01b0384169081179091556000908152600b60205260409020805460ff191682179055600a54612804916126cf565b80612b8281612469565b612bc5576040805162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d19585b481a59608a1b604482015290519081900360640190fd5b81612bcf81612629565b612c17576040805162461bcd60e51b81526020600482015260146024820152731519585b481a5cc81b9bdd08185c1c1c9bdd995960621b604482015290519081900360640190fd5b600060018481548110612c2657fe5b6000918252602090912060069091020160048101805460ff191690556002549091506125a0906001612d29565b6003805461ff001916908190556040805161010090920460ff1615158252517f48fbf5c7b70581e7e2145562de373e14a5af56d09f9b96d73545d0d35f71f0889181900360200190a1565b612ca781612e2a565b6001600160a01b0381166000908152600860205260409020805460ff19169055600754612cdb90600163ffffffff612d2916565b60075550565b612cf260048263ffffffff612e7216565b6040516001600160a01b038216907fc459bd414676a5877fcf10a0d73ecf7e1f672a339650b03e628c4046534300e390600090a250565b600061272983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612ed9565b612d7481612f70565b6006805460018082019092557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319166001600160a01b0384169081179091556000908152600860205260409020805460ff191682179055600754612cdb916126cf565b612df360048263ffffffff612fb816565b6040516001600160a01b038216907f37e96fc6762bae414e69ea6e2490e63bc46f2a1335de0f6b91f49cf808829bcf90600090a250565b612e3b60058263ffffffff612e7216565b6040516001600160a01b038216907f32a792a099c63670df7161917c5efb2fdc734cf9f943ebddccbecef87664f2b790600090a250565b612e7c8282612730565b612eb75760405162461bcd60e51b81526004018080602001828103825260218152602001806131376021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b60008184841115612f685760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612f2d578181015183820152602001612f15565b50505050905090810190601f168015612f5a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b612f8160058263ffffffff612fb816565b6040516001600160a01b038216907fe7f15f9ffff540ae14fdebcd9b6d6cc1fc143933338656c99caa595e8b80903990600090a250565b612fc28282612730565b15613014576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915290565b6040805160808101825260008082526020820181905291810182905260608101919091529056fe6d73672e76616c7565206d757374206265206772656174686572207468616e20304a7564676520616c7265616479207375626d6974746564206576616c756174696f6e4a75646765526f6c653a2063616c6c657220646f6573206e6f742068617665204a7564676520526f6c652e4f7267616e697a6572526f6c653a2063616c6c657220646f6573206e6f742068617665204f7267616e697a657220526f6c652e526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65416464726573732063616e6e6f7420626520657175616c20746f20636f6e7472616374202874686973292061646472657373496e76616c696420616464726573732e204164647265737320636865636b206661696c65642e2053686f756c64206e6f74207265616368207468697320706f696e742e5072697a6520616c7265616479207061696420666f7220666972737420706c6163657465616d7349647320616e642067726164657320646f206e6f74206d617463682074686520636f756e74696e67206f6620617070726f766564207465616d735072697a6520616c7265616479207061696420666f7220746869726420706c6163654c656e677468206f66207465616d7320616e64207465616d47726164657320617272617973206d75737420626520657175616c526f6c65733a206163636f756e7420697320746865207a65726f20616464726573734e6f7420656e6f7567682066756e647320617661696c61626c6520696e206861636b6174686f6e20636f6e74726163745072697a6520616c7265616479207061696420666f72207365636f6e6420706c616365a265627a7a72315820ab74bf7753677bbec75db7c55166748e07f479889be32cada09d0c580b6e4dd064736f6c63430005100032",
  "sourceMap": "58:510:13:-;;;100:155;8:9:-1;5:2;;;30:1;27;20:12;5:2;100:155:13;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;100:155:13;;;;;;;;;;;;;;;;;221:10;;;;1881:30:22;1873:63;;;;;-1:-1:-1;;;1873:63:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;1946:31;1960:16;-1:-1:-1;;;;;1946:13:22;:31;:::i;:::-;-1:-1:-1;2680:5:4;;-1:-1:-1;2686:1:4;;-1:-1:-1;2680:8:4;;;:13;;2672:38;;;;;-1:-1:-1;;;2672:38:4;;;;;;;;;;;;-1:-1:-1;;;2672:38:4;;;;;;;;;;;;;;;-1:-1:-1;2720:2:4;:8;;;;2738:4;:12;2760:11;:26;-1:-1:-1;;2796:15:4;:23;;-1:-1:-1;;2796:23:4;;;-1:-1:-1;58:510:13;;1591:232:20;1650:28;1670:7;1650:19;;;;;:28;;:::i;:::-;1688:10;27::-1;;39:1;23:18;;;45:23;;;1688:24:20;;;;-1:-1:-1;;;;;;1688:24:20;-1:-1:-1;;;;;1688:24:20;;;;;;;;-1:-1:-1;1722:25:20;;;:16;1688:24;1722:25;;;;;;;:32;;-1:-1:-1;;1722:32:20;;;;;1788:21;;:28;;:21;;:25;;;;;:28;;:::i;:::-;1764:21;:52;-1:-1:-1;1591:232:20:o;2447:128:22:-;2506:24;2522:7;2506:11;:15;;;;;;:24;;;;:::i;:::-;2545:23;;-1:-1:-1;;;;;2545:23:22;;;;;;;;2447:128;:::o;834:176:25:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:25:o;260:175:24:-;337:18;341:4;347:7;-1:-1:-1;;;;;337:3:24;:18;:::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:24;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:24;424:4;401:27;;;260:175::o;779:200::-;851:4;-1:-1:-1;;;;;875:21:24;;867:68;;;;-1:-1:-1;;;867:68:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:24;:11;:20;;;;;;;;;;;;;;;779:200::o;58:510:13:-;;;;;;;",
  "deployedSourceMap": "58:510:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3431:293:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3431:293:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3431:293:3;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3431:293:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;830:19:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;830:19:4;;;:::i;:::-;;;;;;;;;;;;;;;;3972:1510;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3972:1510:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3972:1510:4;-1:-1:-1;;;;;3972:1510:4;;:::i;:::-;;8408:83:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8408:83:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8408:83:3;;:::i;8783:98::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8783:98:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8783:98:3;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;8783:98:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8783:98:3;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;-1:-1;8783:98:3;;-1:-1:-1;8783:98:3;-1:-1:-1;8783:98:3;:::i;2695:1555:1:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2695:1555:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2695:1555:1;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;2695:1555:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2695:1555:1;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;2695:1555:1;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;2695:1555:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2695:1555:1;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;-1:-1;2695:1555:1;;-1:-1:-1;2695:1555:1;-1:-1:-1;2695:1555:1;:::i;1095:19:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1095:19:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1095:19:3;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;1095:19:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;364:92:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;364:92:13;;;:::i;2136:113:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2136:113:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2136:113:22;-1:-1:-1;;;;;2136:113:22;;:::i;:::-;;;;;;;;;;;;;;;;;;2232:73:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2232:73:21;;;:::i;4164:332:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4164:332:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4164:332:3;-1:-1:-1;;;;;4164:332:3;;:::i;8034:101::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8034:101:3;;;:::i;2360:81:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2360:81:22;;;:::i;7400:108:1:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7400:108:1;;;:::i;855:26:4:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;855:26:4;;;:::i;6275:145:1:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6275:145:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;4879:1108:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4879:1108:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4879:1108:3;;;-1:-1:-1;;;;;4879:1108:3;;;;;;;;;;:::i;6551:114:1:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6551:114:1;;;:::i;4418:1656::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4418:1656:1;;;:::i;986:91:20:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;986:91:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;986:91:20;-1:-1:-1;;;;;986:91:20;;:::i;8212:101:1:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8212:101:1;;;:::i;261:97:13:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;261:97:13;;;:::i;7691:102:1:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7691:102:1;;;:::i;1083:97:20:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1083:97:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1083:97:20;-1:-1:-1;;;;;1083:97:20;;:::i;807:17:4:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;807:17:4;;;:::i;7975:102:1:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7975:102:1;;;:::i;6795:114::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6795:114:1;;;:::i;348:162:18:-;;;:::i;7235:105:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7235:105:3;;;:::i;2255:99:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2255:99:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2255:99:22;-1:-1:-1;;;;;2255:99:22;;:::i;6198:343:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6198:343:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6198:343:3;;;;;;;:::i;1995:105:21:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1995:105:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1995:105:21;-1:-1:-1;;;;;1995:105:21;;:::i;9152:83:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9152:83:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9152:83:3;;:::i;3213:620:4:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3213:620:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3213:620:4;;;;;;;;;;;;:::i;462:104:13:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;462:104:13;;;:::i;7101:108:1:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7101:108:1;;;:::i;3431:293:3:-;3537:7;3546;3555;3564:4;3570:7;3512:6;2624:21;2638:6;2624:13;:21::i;:::-;2616:49;;;;;-1:-1:-1;;;2616:49:3;;;;;;;;;;;;-1:-1:-1;;;2616:49:3;;;;;;;;;;;;;;;3593:16;;:::i;:::-;3612:5;3618:6;3612:13;;;;;;;;;;;;;;;;;3593:32;;;;;;;;3612:13;;;;;;;;3593:32;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3593:32:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3593:32:3;;-1:-1:-1;3593:32:3;;-1:-1:-1;3593:32:3;-1:-1:-1;3431:293:3;-1:-1:-1;;;;3431:293:3:o;830:19:4:-;;;;:::o;3972:1510::-;1644:13:1;;;;1636:48;;;;;-1:-1:-1;;;1636:48:1;;;;;;;;;;;;-1:-1:-1;;;1636:48:1;;;;;;;;;;;;;;;1721:15:4;;;;1713:52;;;;;-1:-1:-1;;;1713:52:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;4113:13;-1:-1:-1;;;;;2008:21:4;;2000:54;;;;;-1:-1:-1;;;2000:54:4;;;;;;;;;;;;-1:-1:-1;;;2000:54:4;;;;;;;;;;;;;;;-1:-1:-1;;;;;2072:24:4;;2091:4;2072:24;;2064:87;;;;-1:-1:-1;;;2064:87:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4154:13;1857:30;1873:13;1857:15;:30::i;:::-;1849:74;;;;;-1:-1:-1;;;1849:74:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;4286:22;;4183:19;;;;;;-1:-1:-1;;;;;4269:39:4;;;4286:22;;4269:39;4265:1038;;;-1:-1:-1;;4338:22:4;;4383:15;:22;4458:20;;-1:-1:-1;;;;;4338:22:4;;;;-1:-1:-1;4383:22:4;4338;;4458:20;;4457:21;4449:68;;;;-1:-1:-1;;;4449:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4531:20;:27;;-1:-1:-1;;4531:27:4;4554:4;4531:27;;;4265:1038;;;4596:23;;-1:-1:-1;;;;;4579:40:4;;;4596:23;;4579:40;4575:728;;;-1:-1:-1;;4649:23:4;;4695:16;:23;4771:21;;-1:-1:-1;;;;;4649:23:4;;;;-1:-1:-1;4695:23:4;4649;;4771:21;;4770:22;4762:70;;;;-1:-1:-1;;;4762:70:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4846:21;:28;;-1:-1:-1;;4846:28:4;4870:4;4846:28;;;4575:728;;;4912:22;;-1:-1:-1;;;;;4895:39:4;;;4912:22;;4895:39;4891:412;;;-1:-1:-1;;4964:22:4;;5009:15;:22;5084:20;;-1:-1:-1;;;;;4964:22:4;;;;-1:-1:-1;5009:22:4;5060:1;;5084:20;;5083:21;5075:68;;;;-1:-1:-1;;;5075:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5157:20;:27;;-1:-1:-1;;5157:27:4;5180:4;5157:27;;;4891:412;;;5215:77;;-1:-1:-1;;;5215:77:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4891:412;5318:60;;;;;;;;;;;;;5374:3;5318:60;;;;;;5362:10;;-1:-1:-1;;;;;5318:60:4;;;;;;;;;;;;5439:11;-1:-1:-1;;;;;5430:29:4;;5466:6;5430:45;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5430:45:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5430:45:4;;;;;1933:1;;;2161;1775;3972:1510;:::o;8408:83:3:-;8464:20;8477:6;8464:12;:20::i;:::-;8408:83;:::o;8783:98::-;8852:22;8866:7;;8852:22;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;8852:13:3;;-1:-1:-1;;;8852:22:3:i;:::-;8783:98;;:::o;2695:1555:1:-;1420:17;;;;1412:50;;;;;-1:-1:-1;;;1412:50:1;;;;;;;;;;;;-1:-1:-1;;;1412:50:1;;;;;;;;;;;;;;;1904:19:21;1912:10;1904:7;:19::i;:::-;1896:75;;;;-1:-1:-1;;;1896:75:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2860:35:1;;;2852:99;;;;-1:-1:-1;;;2852:99:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3000:18;;2982:36;;2961:146;;;;-1:-1:-1;;;2961:146:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3146:1;3125:18;;:22;3117:64;;;;;-1:-1:-1;;;3117:64:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;3228:10;3191:19;3213:26;;;:14;:26;;;;;3258:11;;;;-1:-1:-1;;;3258:11:1;;;;3257:12;3249:59;;;;-1:-1:-1;;;3249:59:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3323:9;3318:801;3342:18;;3338:1;:22;3318:801;;;3381:14;3398:7;;3406:1;3398:10;;;;;;;;;;;;;3381:27;;3422:11;3436:10;;3447:1;3436:13;;;;;;;;;;;;;;;3422:27;;3842:21;3856:6;3842:13;:21::i;:::-;3834:49;;;;;-1:-1:-1;;;3834:49:1;;;;;;;;;;;;-1:-1:-1;;;3834:49:1;;;;;;;;;;;;;;;3905:22;3920:6;3905:14;:22::i;:::-;3897:55;;;;;-1:-1:-1;;;3897:55:1;;;;;;;;;;;;-1:-1:-1;;;3897:55:1;;;;;;;;;;;;;;;3974:19;3987:5;3974:12;:19::i;:::-;3966:45;;;;;-1:-1:-1;;;3966:45:1;;;;;;;;;;;;-1:-1:-1;;;3966:45:1;;;;;;;;;;;;;;;4026:17;4046:5;4052:6;4046:13;;;;;;;;;;;;;;;;;;4026:33;;4086:21;4101:5;4086:21;;:4;:10;;;:14;;:21;;;;:::i;:::-;4073:10;;;;:34;-1:-1:-1;;3362:3:1;;3318:801;;;-1:-1:-1;4184:4:1;4170:11;;:18;;-1:-1:-1;;;;4170:18:1;-1:-1:-1;;;4170:18:1;;;;;4214:8;;4203:40;;;-1:-1:-1;;;;;4224:18:1;;;4203:40;;;4214:8;;4203:40;;;;;;;;;;1981:1:21;2695:1555:1;;;;:::o;1095:19:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1095:19:3;;-1:-1:-1;;;;;1095:19:3;;;;;;;;;;:::o;364:92:13:-;2033:23:22;2045:10;2033:11;:23::i;:::-;2025:87;;;;-1:-1:-1;;;2025:87:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;429:13:13;:20;;-1:-1:-1;;429:20:13;445:4;429:20;;;364:92::o;2136:113:22:-;2195:4;2218:24;:11;2234:7;2218:24;:15;:24;:::i;:::-;2211:31;;2136:113;;;;:::o;2232:73:21:-;2274:24;2287:10;2274:12;:24::i;:::-;2232:73::o;4164:332:3:-;4232:7;;;;;-1:-1:-1;;;;;4292:25:3;;4284:58;;;;;-1:-1:-1;;;4284:58:3;;;;;;;;;;;;-1:-1:-1;;;4284:58:3;;;;;;;;;;;;;;;4352:16;;:::i;:::-;-1:-1:-1;;;;;;;;;4371:26:3;;;:13;:26;;;;;;;;;;;;4352:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4352:45:3;-1:-1:-1;4352:45:3;4164:332::o;8034:101::-;8111:17;;;;;;;;8034:101::o;2360:81:22:-;2406:28;2423:10;2406:16;:28::i;7400:108:1:-;2505:17:3;;;;;;;2504:18;2496:49;;;;;-1:-1:-1;;;2496:49:3;;;;;;;;;;;;-1:-1:-1;;;2496:49:3;;;;;;;;;;;;;;;2033:23:22;2045:10;2033:11;:23::i;:::-;2025:87;;;;-1:-1:-1;;;2025:87:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7478:23:1;:21;:23::i;855:26:4:-;;;;:::o;6275:145:1:-;6368:10;:13;6383:11;:14;6399:10;:13;6275:145;;;:::o;4879:1108:3:-;2155:19;;5023:7;;2155:19;;2147:54;;;;;-1:-1:-1;;;2147:54:3;;;;;;;;;;;;-1:-1:-1;;;2147:54:3;;;;;;;;;;;;;;;5054:8;5063:1;5054:11;;;-1:-1:-1;;;;;;5054:16:3;5046:54;;;;;-1:-1:-1;;;5046:54:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5118:25:3;;5110:65;;;;;-1:-1:-1;;;5110:65:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5193:26:3;;;5243:1;5193:26;;;;;;;;;;:38;;;;:52;5185:88;;;;;-1:-1:-1;;;5185:88:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;5300:5;:12;5680:16;;:::i;:::-;-1:-1:-1;5699:58:3;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5699:58:3;;;;;;;;;;;;;;;5749:4;5699:58;;;;;;-1:-1:-1;5699:58:3;;;;;;27:10:-1;;23:18;;;45:23;;5767:16:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5767:16:3;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5767:16:3;;;;;;;;;;;;;;;;;;;;5822:13;;5699:58;;5749:4;5699:58;;5822:13;;;;;;;;;;;;;;-1:-1:-1;;;;;5793:26:3;;;;;;;;;;;;;5822:13;;;;;;;5793:42;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5793:42:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5793:42:3;;;;;;;;;;;;;;;;;;;5866:18;;:25;;;:22;:25;:::i;:::-;5845:18;:46;5906:51;;;;;;5952:4;5906:51;;;;;;-1:-1:-1;;;;;5906:51:3;;;5921:6;;5906:51;;;;;;;;;;;-1:-1:-1;5974:6:3;4879:1108;-1:-1:-1;;;;4879:1108:3:o;6551:114:1:-;2155:19:3;;;;2147:54;;;;;-1:-1:-1;;;2147:54:3;;;;;;;;;;;;-1:-1:-1;;;2147:54:3;;;;;;;;;;;;;;;2033:23:22;2045:10;2033:11;:23::i;:::-;2025:87;;;;-1:-1:-1;;;2025:87:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6632:26:1;:24;:26::i;4418:1656::-;2276:19:3;;;;2275:20;2267:53;;;;;-1:-1:-1;;;2267:53:3;;;;;;;;;;;;-1:-1:-1;;;2267:53:3;;;;;;;;;;;;;;;2505:17;;;;;;;2504:18;2496:49;;;;;-1:-1:-1;;;2496:49:3;;;;;;;;;;;;-1:-1:-1;;;2496:49:3;;;;;;;;;;;;;;;1535:17:1;;;;1534:18;1526:49;;;;;-1:-1:-1;;;1526:49:1;;;;;;;;;;;;-1:-1:-1;;;1526:49:1;;;;;;;;;;;;;;;2033:23:22;2045:10;2033:11;:23::i;:::-;2025:87;;;;-1:-1:-1;;;2025:87:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1757:13:1;;;;1756:14;1748:49;;;;;-1:-1:-1;;;1748:49:1;;;;;;;;;;;;-1:-1:-1;;;1748:49:1;;;;;;;;;;;;;;;4635:1;4614:18;;:22;4606:54;;;;;-1:-1:-1;;;4606:54:1;;;;;;;;;;;;-1:-1:-1;;;4606:54:1;;;;;;;;;;;;;;;4670:19;;:::i;:::-;4699:20;;:::i;:::-;4729:21;;:::i;:::-;4760:20;;:::i;:::-;4796:9;4791:881;4815:5;:12;4811:16;;4791:881;;;4858:5;4864:1;4858:8;;;;;;;;;;;;;;;;;4848:18;;;;;;;;4858:8;;;;;;;4848:18;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4848:18:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4848:18:1;4884:51;;;4921:8;:14;;;4905:7;:13;;;:30;4884:51;4880:213;;;5070:8;;4880:213;5293:8;:14;;;5277:7;:13;;;:30;5273:389;;;5414:7;;5377:8;5338:9;-1:-1:-1;5273:389:1;;;5462:9;:15;;;5446:7;:13;;;:31;5442:220;;;5547:7;;5508:9;-1:-1:-1;5442:220:1;;;5595:8;:14;;;5579:7;:13;;;:30;5575:87;;;5640:7;5629:18;;5575:87;4829:3;;4791:881;;;-1:-1:-1;5682:21:1;;:10;:21;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5682:21:1;;;-1:-1:-1;;;;;5682:21:1;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5682:21:1;;;;;;;;;;;;;;;;;;;;;5713:23;;:11;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5746:21;;:10;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5777:13;:20;;;;;-1:-1:-1;5777:20:1;;;;;;5812:74;;;;;5842:22;;;;5812:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5916:11;:14;5932:23;;5957:17;;5901:77;;;;;;-1:-1:-1;;;;;5932:23:1;;;5901:77;;;;;;;;5932:23;5901:77;;;;;;;;;;;;;;6008:10;:13;6023:22;;6047:16;;;5993:74;;;;;;-1:-1:-1;;;;;6023:22:1;;;5993:74;;;;;;;;;;;6065:1;5993:74;;;;;;;;;;;;;;1807:1;;;;4418:1656::o;986:91:20:-;2033:23:22;2045:10;2033:11;:23::i;:::-;2025:87;;;;-1:-1:-1;;;2025:87:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1052:18:20;1062:7;1052:9;:18::i;8212:101:1:-;8289:17;;;;8212:101;:::o;261:97:13:-;2033:23:22;2045:10;2033:11;:23::i;:::-;2025:87;;;;-1:-1:-1;;;2025:87:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;329:15:13;:22;;-1:-1:-1;;329:22:13;347:4;329:22;;;261:97::o;7691:102:1:-;1420:17;;;;1412:50;;;;;-1:-1:-1;;;1412:50:1;;;;;;;;;;;;-1:-1:-1;;;1412:50:1;;;;;;;;;;;;;;;2033:23:22;2045:10;2033:11;:23::i;:::-;2025:87;;;;-1:-1:-1;;;2025:87:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7768:18:1;:16;:18::i;1083:97:20:-;2033:23:22;2045:10;2033:11;:23::i;:::-;2025:87;;;;-1:-1:-1;;;2025:87:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1152:21:20;1165:7;1152:12;:21::i;807:17:4:-;;;;:::o;7975:102:1:-;1535:17;;;;1534:18;1526:49;;;;;-1:-1:-1;;;1526:49:1;;;;;;;;;;;;-1:-1:-1;;;1526:49:1;;;;;;;;;;;;;;;2033:23:22;2045:10;2033:11;:23::i;:::-;2025:87;;;;-1:-1:-1;;;2025:87:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8053:17:1;:15;:17::i;6795:114::-;2276:19:3;;;;2275:20;2267:53;;;;;-1:-1:-1;;;2267:53:3;;;;;;;;;;;;-1:-1:-1;;;2267:53:3;;;;;;;;;;;;;;;2033:23:22;2045:10;2033:11;:23::i;:::-;2025:87;;;;-1:-1:-1;;;2025:87:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6877:25:1;:23;:25::i;348:162:18:-;414:1;402:9;:13;394:59;;;;-1:-1:-1;;;394:59:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;468:35;;;488:9;468:35;;;;499:3;;476:10;;468:35;;;;;;;;;348:162::o;7235:105:3:-;7314:19;;;;7235:105;:::o;2255:99:22:-;2033:23;2045:10;2033:11;:23::i;:::-;2025:87;;;;-1:-1:-1;;;2025:87:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2325:22;2339:7;2325:13;:22::i;6198:343:3:-;6301:6;2624:21;2638:6;2624:13;:21::i;:::-;2616:49;;;;;-1:-1:-1;;;2616:49:3;;;;;;;;;;;;-1:-1:-1;;;2616:49:3;;;;;;;;;;;;;;;6332:6;2747:22;2762:6;2747:14;:22::i;:::-;2739:55;;;;;-1:-1:-1;;;2739:55:3;;;;;;;;;;;;-1:-1:-1;;;2739:55:3;;;;;;;;;;;;;;;2390:17;;;;;;;2382:50;;;;;-1:-1:-1;;;2382:50:3;;;;;;;;;;;;-1:-1:-1;;;2382:50:3;;;;;;;;;;;;;;;6379:17;6399:5;6405:6;6399:13;;;;;;;;;;;;;;;;;6422:17;6399:13;;;;;6422:17;;;:32;;;6498:16;;;;6489:7;;6469:65;;;;;;;;6399:13;;-1:-1:-1;;;;;;6498:16:3;;;;6489:7;;6469:65;;;;;;;;;;2442:1;2675;6198:343;;;:::o;1995:105:21:-;2050:4;2073:20;:7;2085;2073:20;:11;:20;:::i;9152:83:3:-;9208:20;9221:6;9208:12;:20::i;3213:620:4:-;2033:23:22;2045:10;2033:11;:23::i;:::-;2025:87;;;;-1:-1:-1;;;2025:87:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1605:15:4;;;;1604:16;1596:53;;;;;-1:-1:-1;;;1596:53:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;3380:19;3402:43;3434:10;3402:27;:10;3417:11;3402:27;:14;:27;:::i;:::-;:31;:43;:31;:43;:::i;:::-;3380:65;;3478:21;3463:11;:36;;3455:97;;;;-1:-1:-1;;;3455:97:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3580:24;;;;;;;;;;;-1:-1:-1;3580:24:4;;;;;;;3562:15;:42;;;;;;-1:-1:-1;;3562:42:4;;;;;;3633:25;;;;;;;;;;;;;;;3614:16;:44;;;;;;;;;;3686:24;;;;;;;;;;;;;;;;3668:15;:42;;;;;;;;;;3720:15;:22;;;;;3580:24;3720:22;;;3757:69;;;;;;;;;;;;;;;;;3822:3;3757:69;;;;;;3810:10;;3757:69;;;;;;;;;;1659:1;3213:620;;;:::o;462:104:13:-;544:15;;;;462:104;:::o;7101:108:1:-;2390:17:3;;;;;;;2382:50;;;;;-1:-1:-1;;;2382:50:3;;;;;;;;;;;;-1:-1:-1;;;2382:50:3;;;;;;;;;;;;;;;2033:23:22;2045:10;2033:11;:23::i;:::-;2025:87;;;;-1:-1:-1;;;2025:87:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7178:24:1;:22;:24::i;10860:115:3:-;10955:5;:12;-1:-1:-1;10946:21:3;10860:115::o;5566:282:4:-;5690:22;;5636:4;;-1:-1:-1;;;;;5673:39:4;;;5690:22;;5673:39;;:99;;-1:-1:-1;5749:23:4;;-1:-1:-1;;;;;5732:40:4;;;5749:23;;5732:40;5673:99;:158;;;-1:-1:-1;;5809:22:4;;-1:-1:-1;;;;;5809:22:4;;;5792:39;;;;5566:282::o;9965:300:3:-;10024:6;2624:21;2638:6;2624:13;:21::i;:::-;2616:49;;;;;-1:-1:-1;;;2616:49:3;;;;;;;;;;;;-1:-1:-1;;;2616:49:3;;;;;;;;;;;;;;;10047:6;2877:22;2892:6;2877:14;:22::i;:::-;2876:23;2868:57;;;;;-1:-1:-1;;;2868:57:3;;;;;;;;;;;;-1:-1:-1;;;2868:57:3;;;;;;;;;;;;;;;10065:17;10085:5;10091:6;10085:13;;;;;;;;;;;;;;;;10108;10085;;;;;10108;;;:20;;-1:-1:-1;;10108:20:3;10124:4;10108:20;;;;;;10159:18;;10085:13;;-1:-1:-1;10159:25:3;;:18;:25;:22;:25;:::i;:::-;10138:18;:46;;;10226:16;;;10217:7;;10244:13;;;;10199:59;;;10244:13;;;;10199:59;;;;;-1:-1:-1;;;;;10226:16:3;;;;10199:59;;;;;;;;;2935:1;2675;9965:300;;:::o;10307:168::-;10380:9;10375:94;10399:7;:14;10395:1;:18;10375:94;;;10434:24;10447:7;10455:1;10447:10;;;;;;;;;;;;;;10434:12;:24::i;:::-;10415:3;;10375:94;;11017:223;11080:4;11101:21;11115:6;11101:13;:21::i;:::-;11096:65;;-1:-1:-1;11145:5:3;11138:12;;11096:65;11171:16;;:::i;:::-;11190:5;11196:6;11190:13;;;;;;;;;;;;;;;;;11171:32;;;;;;;;11190:13;;;;;;;11171:32;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11171:32:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11017:223:3;;;:::o;9838:115:1:-;9943:2;9934:11;;;;;;;9838:115::o;834:176:25:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:25:o;779:200:24:-;851:4;-1:-1:-1;;;;;875:21:24;;867:68;;;;-1:-1:-1;;;867:68:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:24;:11;:20;;;;;;;;;;;;;;;779:200::o;9422:234:1:-;9480:27;9499:7;9480:18;:27::i;:::-;-1:-1:-1;;;;;9539:23:1;9517:19;9539:23;;;:14;:23;;;;;9572:12;;:20;;-1:-1:-1;;;;9572:20:1;;;9422:234::o;1829:205:20:-;1891:31;1914:7;1891:22;:31::i;:::-;-1:-1:-1;;;;;1932:25:20;;1960:5;1932:25;;;:16;:25;;;;;:33;;-1:-1:-1;;1932:33:20;;;1999:21;;:28;;1932:33;1999:28;:25;:28;:::i;:::-;1975:21;:52;-1:-1:-1;1829:205:20:o;9789:134:3:-;9835:17;:24;;-1:-1:-1;;9835:24:3;;;;;;;;;9874:42;;;9898:17;;;;9835:24;9898:17;9874:42;;;;;;;;;;;;;;;9789:134::o;9277:144::-;9326:19;:27;;-1:-1:-1;;9326:27:3;;;9368:46;;;9348:5;9368:46;;;;;;;;;;;;;9277:144::o;8831:472:1:-;9034:24;9050:7;9034:15;:24::i;:::-;9084:10;:17;9111:18;;:::i;:::-;9132:34;;;;;;;;9138:5;9132:34;;;;9145:7;-1:-1:-1;;;;;9132:34:1;;;;;9154:4;9132:34;;;;;;9160:5;9132:34;;;;;9111:55;;9176:10;9192:5;9176:22;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;9176:22:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9176:22:1;;;;;-1:-1:-1;;;;;9176:22:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9234:5;9208:14;:23;9223:7;-1:-1:-1;;;;;9208:23:1;-1:-1:-1;;;;;9208:23:1;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9208:31:1;;;;;-1:-1:-1;;;;;9208:31:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8831:472;;;:::o;8378:136::-;8425:17;:25;;-1:-1:-1;;8425:25:1;;;8465:42;;;8445:5;8465:42;;;;;;;;;;;;;8378:136::o;8578:134::-;8624:17;:24;;-1:-1:-1;;8624:24:1;8644:4;8624:24;;;;;8663:42;;;8624:24;8687:17;;;;8663:42;;;;;;;;;;;;;;8578:134::o;9463:142:3:-;9511:19;:26;;-1:-1:-1;;9511:26:3;9533:4;9511:26;;;;;9552:46;;;9511:26;9578:19;;;;9552:46;;;;;;;;;;;;;;9463:142::o;1591:232:20:-;1650:28;1670:7;1650:19;:28::i;:::-;1688:10;27::-1;;39:1;23:18;;;45:23;;;1688:24:20;;;;-1:-1:-1;;;;;;1688:24:20;-1:-1:-1;;;;;1688:24:20;;;;;;;;-1:-1:-1;1722:25:20;;;:16;1688:24;1722:25;;;;:32;;-1:-1:-1;;1722:32:20;;;;;1788:21;;:28;;:25;:28::i;10517:301:3:-;10576:6;2624:21;2638:6;2624:13;:21::i;:::-;2616:49;;;;;-1:-1:-1;;;2616:49:3;;;;;;;;;;;;-1:-1:-1;;;2616:49:3;;;;;;;;;;;;;;;10599:6;2747:22;2762:6;2747:14;:22::i;:::-;2739:55;;;;;-1:-1:-1;;;2739:55:3;;;;;;;;;;;;-1:-1:-1;;;2739:55:3;;;;;;;;;;;;;;;10617:17;10637:5;10643:6;10637:13;;;;;;;;;;;;;;;;;;;;;10660;;;:21;;-1:-1:-1;;10660:21:3;;;10712:18;;10637:13;;-1:-1:-1;10712:25:3;;-1:-1:-1;10712:22:3;:25::i;9611:136::-;9658:17;:25;;-1:-1:-1;;9658:25:3;;;;;9698:42;;;9658:25;9722:17;;;9658:25;9722:17;9698:42;;;;;;;;;;;;;;9611:136::o;1400:185:20:-;1458:27;1477:7;1458:18;:27::i;:::-;-1:-1:-1;;;;;1495:21:20;;1519:5;1495:21;;;:12;:21;;;;;:29;;-1:-1:-1;;1495:29:20;;;1554:17;;:24;;1495:29;1554:24;:21;:24;:::i;:::-;1534:17;:44;-1:-1:-1;1400:185:20:o;2581:136:22:-;2643:27;:11;2662:7;2643:27;:18;:27;:::i;:::-;2685:25;;-1:-1:-1;;;;;2685:25:22;;;;;;;;2581:136;:::o;1274:134:25:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;1186:208:20:-;1241:24;1257:7;1241:15;:24::i;:::-;1275:6;27:10:-1;;39:1;23:18;;;45:23;;;1275:20:20;;;;-1:-1:-1;;;;;;1275:20:20;-1:-1:-1;;;;;1275:20:20;;;;;;;;-1:-1:-1;1305:21:20;;;:12;1275:20;1305:21;;;;:28;;-1:-1:-1;;1305:28:20;;;;;1363:17;;:24;;:21;:24::i;2447:128:22:-;2506:24;:11;2522:7;2506:24;:15;:24;:::i;:::-;2545:23;;-1:-1:-1;;;;;2545:23:22;;;;;;;;2447:128;:::o;2433:124:21:-;2491:23;:7;2506;2491:23;:14;:23;:::i;:::-;2529:21;;-1:-1:-1;;;;;2529:21:21;;;;;;;;2433:124;:::o;510:180:24:-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;-1:-1:-1;;;581:64:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;655:20:24;678:5;655:20;;;;;;;;;;;:28;;-1:-1:-1;;655:28:24;;;510:180::o;1732:187:25:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:25;;;1732:187::o;2311:116:21:-;2366:20;:7;2378;2366:20;:11;:20;:::i;:::-;2401:19;;-1:-1:-1;;;;;2401:19:21;;;;;;;;2311:116;:::o;260:175:24:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:24;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:24;424:4;401:27;;;260:175::o;58:510:13:-;;;;;;;;;-1:-1:-1;58:510:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;58:510:13;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity 0.5.16;\n\nimport \"../core/Hackathon.sol\";\n\ncontract HackathonMock is Hackathon {\n    constructor(uint256 _id, bytes32 _name, bytes32 _description)\n        public\n        Hackathon(_id, _name, _description, msg.sender)\n    {\n        //\n    }\n\n    function dummyAllocatePrizesMock() external onlyOrganizer {\n        prizesAllocated = true;\n    }\n\n    function dummyPublishRankMock() external onlyOrganizer {\n        rankPublished = true;\n    }\n\n    function getPrizeAllocationStatus() external view returns (bool) {\n        return prizesAllocated;\n    }\n}\n",
  "sourcePath": "/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/mocks/HackathonMock.sol",
  "ast": {
    "absolutePath": "/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/mocks/HackathonMock.sol",
    "exportedSymbols": {
      "HackathonMock": [2699]
    },
    "id": 2700,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2650,
        "literals": ["solidity", "0.5", ".16"],
        "nodeType": "PragmaDirective",
        "src": "0:23:13"
      },
      {
        "absolutePath": "/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/core/Hackathon.sol",
        "file": "../core/Hackathon.sol",
        "id": 2651,
        "nodeType": "ImportDirective",
        "scope": 2700,
        "sourceUnit": 2090,
        "src": "25:31:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2652,
              "name": "Hackathon",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2089,
              "src": "84:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Hackathon_$2089",
                "typeString": "contract Hackathon"
              }
            },
            "id": 2653,
            "nodeType": "InheritanceSpecifier",
            "src": "84:9:13"
          }
        ],
        "contractDependencies": [648, 1698, 2089, 2861, 2895, 3187, 3279, 3393],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2699,
        "linearizedBaseContracts": [2699, 2089, 648, 3187, 3279, 3393, 1698, 2895, 2861],
        "name": "HackathonMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2669,
              "nodeType": "Block",
              "src": "237:18:13",
              "statements": []
            },
            "documentation": null,
            "id": 2670,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2662,
                    "name": "_id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2655,
                    "src": "195:3:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2663,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2657,
                    "src": "200:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2664,
                    "name": "_description",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2659,
                    "src": "207:12:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2665,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4276,
                      "src": "221:3:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 2666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "221:10:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 2667,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2661,
                  "name": "Hackathon",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2089,
                  "src": "185:9:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Hackathon_$2089_$",
                    "typeString": "type(contract Hackathon)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "185:47:13"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2655,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2670,
                  "src": "112:11:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2654,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "112:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2657,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2670,
                  "src": "125:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2656,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "125:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2659,
                  "name": "_description",
                  "nodeType": "VariableDeclaration",
                  "scope": 2670,
                  "src": "140:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2658,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "140:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "111:50:13"
            },
            "returnParameters": {
              "id": 2668,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "237:0:13"
            },
            "scope": 2699,
            "src": "100:155:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2679,
              "nodeType": "Block",
              "src": "319:39:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2675,
                      "name": "prizesAllocated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1729,
                      "src": "329:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "347:4:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "329:22:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2678,
                  "nodeType": "ExpressionStatement",
                  "src": "329:22:13"
                }
              ]
            },
            "documentation": null,
            "id": 2680,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2673,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2672,
                  "name": "onlyOrganizer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3326,
                  "src": "305:13:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "305:13:13"
              }
            ],
            "name": "dummyAllocatePrizesMock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2671,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "293:2:13"
            },
            "returnParameters": {
              "id": 2674,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "319:0:13"
            },
            "scope": 2699,
            "src": "261:97:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2689,
              "nodeType": "Block",
              "src": "419:37:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2685,
                      "name": "rankPublished",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "429:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "445:4:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "429:20:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2688,
                  "nodeType": "ExpressionStatement",
                  "src": "429:20:13"
                }
              ]
            },
            "documentation": null,
            "id": 2690,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2683,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2682,
                  "name": "onlyOrganizer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3326,
                  "src": "405:13:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "405:13:13"
              }
            ],
            "name": "dummyPublishRankMock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2681,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "393:2:13"
            },
            "returnParameters": {
              "id": 2684,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "419:0:13"
            },
            "scope": 2699,
            "src": "364:92:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2697,
              "nodeType": "Block",
              "src": "527:39:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2695,
                    "name": "prizesAllocated",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1729,
                    "src": "544:15:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2694,
                  "id": 2696,
                  "nodeType": "Return",
                  "src": "537:22:13"
                }
              ]
            },
            "documentation": null,
            "id": 2698,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPrizeAllocationStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2691,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "495:2:13"
            },
            "returnParameters": {
              "id": 2694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2693,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2698,
                  "src": "521:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2692,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "521:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "520:6:13"
            },
            "scope": 2699,
            "src": "462:104:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2700,
        "src": "58:510:13"
      }
    ],
    "src": "0:569:13"
  },
  "legacyAST": {
    "absolutePath": "/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/mocks/HackathonMock.sol",
    "exportedSymbols": {
      "HackathonMock": [2699]
    },
    "id": 2700,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2650,
        "literals": ["solidity", "0.5", ".16"],
        "nodeType": "PragmaDirective",
        "src": "0:23:13"
      },
      {
        "absolutePath": "/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/core/Hackathon.sol",
        "file": "../core/Hackathon.sol",
        "id": 2651,
        "nodeType": "ImportDirective",
        "scope": 2700,
        "sourceUnit": 2090,
        "src": "25:31:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2652,
              "name": "Hackathon",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2089,
              "src": "84:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Hackathon_$2089",
                "typeString": "contract Hackathon"
              }
            },
            "id": 2653,
            "nodeType": "InheritanceSpecifier",
            "src": "84:9:13"
          }
        ],
        "contractDependencies": [648, 1698, 2089, 2861, 2895, 3187, 3279, 3393],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2699,
        "linearizedBaseContracts": [2699, 2089, 648, 3187, 3279, 3393, 1698, 2895, 2861],
        "name": "HackathonMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2669,
              "nodeType": "Block",
              "src": "237:18:13",
              "statements": []
            },
            "documentation": null,
            "id": 2670,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2662,
                    "name": "_id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2655,
                    "src": "195:3:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2663,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2657,
                    "src": "200:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2664,
                    "name": "_description",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2659,
                    "src": "207:12:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2665,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4276,
                      "src": "221:3:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 2666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "221:10:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 2667,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2661,
                  "name": "Hackathon",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2089,
                  "src": "185:9:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Hackathon_$2089_$",
                    "typeString": "type(contract Hackathon)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "185:47:13"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2655,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2670,
                  "src": "112:11:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2654,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "112:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2657,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2670,
                  "src": "125:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2656,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "125:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2659,
                  "name": "_description",
                  "nodeType": "VariableDeclaration",
                  "scope": 2670,
                  "src": "140:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2658,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "140:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "111:50:13"
            },
            "returnParameters": {
              "id": 2668,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "237:0:13"
            },
            "scope": 2699,
            "src": "100:155:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2679,
              "nodeType": "Block",
              "src": "319:39:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2675,
                      "name": "prizesAllocated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1729,
                      "src": "329:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "347:4:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "329:22:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2678,
                  "nodeType": "ExpressionStatement",
                  "src": "329:22:13"
                }
              ]
            },
            "documentation": null,
            "id": 2680,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2673,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2672,
                  "name": "onlyOrganizer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3326,
                  "src": "305:13:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "305:13:13"
              }
            ],
            "name": "dummyAllocatePrizesMock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2671,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "293:2:13"
            },
            "returnParameters": {
              "id": 2674,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "319:0:13"
            },
            "scope": 2699,
            "src": "261:97:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2689,
              "nodeType": "Block",
              "src": "419:37:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2685,
                      "name": "rankPublished",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "429:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "445:4:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "429:20:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2688,
                  "nodeType": "ExpressionStatement",
                  "src": "429:20:13"
                }
              ]
            },
            "documentation": null,
            "id": 2690,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2683,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2682,
                  "name": "onlyOrganizer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3326,
                  "src": "405:13:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "405:13:13"
              }
            ],
            "name": "dummyPublishRankMock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2681,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "393:2:13"
            },
            "returnParameters": {
              "id": 2684,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "419:0:13"
            },
            "scope": 2699,
            "src": "364:92:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2697,
              "nodeType": "Block",
              "src": "527:39:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2695,
                    "name": "prizesAllocated",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1729,
                    "src": "544:15:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2694,
                  "id": 2696,
                  "nodeType": "Return",
                  "src": "537:22:13"
                }
              ]
            },
            "documentation": null,
            "id": 2698,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPrizeAllocationStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2691,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "495:2:13"
            },
            "returnParameters": {
              "id": 2694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2693,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2698,
                  "src": "521:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2692,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "521:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "520:6:13"
            },
            "scope": 2699,
            "src": "462:104:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2700,
        "src": "58:510:13"
      }
    ],
    "src": "0:569:13"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-03-09T03:26:21.882Z",
  "devdoc": {
    "methods": {
      "allocatePrize(uint256,uint256,uint256)": {
        "details": "It does not associate the prize with a specific account, since prizes cound be associated any moment by the organizers, as long as prizes were not allocated before. The contract needs to have enought balance to allocate funds to winners."
      },
      "approveTeam(uint256)": {
        "details": "Should be overwritten on inherited contract to add modifier or require statements for access control.",
        "params": {
          "teamId": "{uint256} the ids of the teams to be approved"
        }
      },
      "closeEvaluation()": {
        "details": "Should be overwritten on inherited contract to add modifier or require statements for access control."
      },
      "closeRegistration()": {
        "details": "Overwritten to add modifier for access control."
      },
      "closeSubmission()": {
        "details": "Should be overwritten on inherited contract to add modifier or require statements for access control."
      },
      "getEvaluationStatus()": {
        "return": "{bool} returns {true} if enabled; otherwise, {false}."
      },
      "getRegistrationStatus()": {
        "return": "{bool} returns {true} if enabled; otherwise, {false}."
      },
      "getSubmissionStatus()": {
        "return": "{bool} returns {true} if enabled; otherwise, {false}."
      },
      "getTeam(uint256)": {
        "params": {
          "teamId": "{uint256} the team's unique identifier returned on registration"
        },
        "return": "{bytes32} team's name{address} team's address{bytes32} team's proposal data{bool} team's status: {true} for approved; {false} for reproved;{uint256} team's grade"
      },
      "getTeamByAddress(address)": {
        "params": {
          "teamAddress": "{address} the team's contract address used on registration"
        },
        "return": "{bytes32} team's name{address} team's address{bytes32} team's proposal data{bool} team's status: {true} for approved; {false} for reproved;{uint256} team's grade"
      },
      "getWinnersIds()": {
        "return": "{uint256} First place's id{uint256} Second place's id{uint256} Third place's id"
      },
      "openEvaluation()": {
        "details": "Should be overwritten on inherited contract to add modifier or require statements for access control."
      },
      "openRegistration()": {
        "details": "Overwritten to add modifier for access control."
      },
      "openSubmission()": {
        "details": "Should be overwritten on inherited contract to add modifier or require statements for access control."
      },
      "publishRank()": {
        "details": "emitts an WinnerAnnounced event for each winner (1st, 2nd, 3rd place)."
      },
      "registerTeam(bytes32,address,bytes32)": {
        "details": "Registration process must be open.",
        "params": {
          "teamName": "{bytes32} team's proposal data; could be a hash for a file  on IPFS or for a github link; not required"
        }
      },
      "reproveTeam(uint256)": {
        "details": "Should be overwritten on inherited contract to add modifier or require statements for access control.",
        "params": {
          "teamId": "{uint256} the ids of the teams to be reproved"
        }
      },
      "reproveTeams(uint256[])": {
        "details": "Should be overwritten on inherited contract to add modifier or require statements for access control.",
        "params": {
          "teamIds": "{uint256[]} an array containing the ids of the teams to be reproved"
        }
      },
      "submitEvaluation(uint256[],uint8[])": {
        "details": "The position of teamId and teamGrade must be the same in the array. For example, if teamId \"1\" is sent at {teamIds} array position \"5\" (zero-based), the grade for team \"1\" must be sent at position \"5\" in {teamGrades} array.",
        "params": {
          "teamGrades": "Array of the grades given by the judge for each team.",
          "teamIds": "Array of the ids associated with each team that is going to be evaluated."
        }
      },
      "updateProposalData(uint256,bytes32)": {
        "params": {
          "proposalData": "the updated data for the team's proposal",
          "teamId": "team's unique identifier; required"
        }
      },
      "withdrawPrize(address)": {
        "details": "Winners must implement IPayable to receive funds."
      }
    }
  },
  "userdoc": {
    "methods": {
      "allocatePrize(uint256,uint256,uint256)": {
        "notice": "Allows the organizer to allocate funds that's going to be distributed to winners."
      },
      "approveTeam(uint256)": {
        "notice": "(re)approves a team in participating in the contest"
      },
      "closeEvaluation()": {
        "notice": "Closes the evaluation process"
      },
      "closeRegistration()": {
        "notice": "Closes the registration process"
      },
      "closeSubmission()": {
        "notice": "Closes the proposal submission process"
      },
      "deposit()": {
        "notice": "Allows the contract to receive funds."
      },
      "getEvaluationStatus()": {
        "notice": "Gets the evaluation status"
      },
      "getRegistrationStatus()": {
        "notice": "Gets the registration status"
      },
      "getSubmissionStatus()": {
        "notice": "Gets the submission status"
      },
      "getTeam(uint256)": {
        "notice": "Returns the stored information of a team"
      },
      "getTeamByAddress(address)": {
        "notice": "Returns the stored information of a team, based on a provided address"
      },
      "getWinnersIds()": {
        "notice": "Gets the id of the winner teams."
      },
      "openEvaluation()": {
        "notice": "Opens the evaluation process"
      },
      "openRegistration()": {
        "notice": "Opens the registration process"
      },
      "openSubmission()": {
        "notice": "Opens the proposal submission process"
      },
      "publishRank()": {
        "notice": "Published the ranking results of the contest."
      },
      "registerTeam(bytes32,address,bytes32)": {
        "notice": "Registers a new team in the contest registry."
      },
      "reproveTeam(uint256)": {
        "notice": "reproves a team from participating in the contest"
      },
      "reproveTeams(uint256[])": {
        "notice": "reprove teams from participating in the contest"
      },
      "submitEvaluation(uint256[],uint8[])": {
        "notice": "Allows a judge to submit its evaluation for the teams competing in the contest. The evaluation for all teams must be submitted once."
      },
      "updateProposalData(uint256,bytes32)": {
        "notice": "Updates the proposal data for a specific team."
      },
      "withdrawPrize(address)": {
        "notice": "Allows withdrawing prizes to winners."
      }
    }
  }
}
